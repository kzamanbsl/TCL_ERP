
@using PagedList.Mvc;
@using KGERP.Utility
@model PagedList.IPagedList<KGERP.Service.ServiceModel.LeaveApplicationModel>
@using PagedList;

<link href="~/Content/CustomCss/search-form.css" rel="stylesheet" />
<div class="row">
    @using (Html.BeginForm("HRLeaveApproval", "LeaveApplication", FormMethod.Get, new { @class = "example" }))
    {
        <div class="col-md-8">
            <h4>
                <b>
                    @if (ViewBag.Title != null)
                    {
                        @ViewBag.Title
                    }
                </b>
            </h4>
        </div>
        <div class="col-md-4">
            @Html.Editor("searchText", new { htmlAttributes = new { @autocomplete = "off", value = "", @placeholder = "Search..", @style = "width:75%" } })
            <button type="submit"><i class="fa fa-search "></i></button>
        </div>
    }
</div>

<div class="row">
    <hr style="border-color:red; padding:0px;margin-top: 5px;margin-bottom: 5px; border-width: 2px;" />
    <table class="table table-striped table-responsive">
        <tr style="background-color:#4CAF50;color:#FFFFFF">
            <th>
                SL
            </th>
            <th>
                EmployeeID
            </th>
            <th>
                Name
            </th>
            <th>
                Department
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().LeaveCategoryId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Reason)
            </th>
            <th nowrap>
                @Html.DisplayNameFor(model => model.First().ApplicationDate)
            </th>
            <th nowrap>
                @Html.DisplayNameFor(model => model.First().StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().EndDate)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.First().LeaveDays)
            </th>
            <th nowrap>
                @Html.DisplayNameFor(model => model.First().ManagerStatus)
            </th>
            <th nowrap>
                @Html.DisplayNameFor(model => model.First().HrAdminStatus)
            </th>

        </tr>

        @foreach (var item in Model.Select((x, i) => new { Data = x, Index = i }))
        {
            <tr>
                <td>
                    @((item.Index + 1) + (Model.PageNumber - 1) * Model.PageSize)

                </td>
                <td>
                    <span title="@("Designation : "+item.Data.DesignationName)">@item.Data.EmployeeId</span>
                </td>
                <td>
                    <span title="@("Designation : "+item.Data.DesignationName)">@item.Data.EmployeeName</span>
                    @*@item.Data.EmployeeName*@
                </td>
                <td>
                    @item.Data.DepartmentName
                </td>
                <td nowrap>
                    @item.Data.LeaveName
                </td>
                <td>
                    @item.Data.Reason
                </td>
                <td nowrap>
                    @if (item.Data.ApplicationDate.HasValue)
                    {
                        @item.Data.ApplicationDate.Value.ToString("dd-MMM-yyyy")
                    }
                </td>
                <td nowrap>
                    @if (item.Data.StartDate != null)
                    {
                        @item.Data.StartDate.Value.ToString("dd-MMM-yyyy")
                    }
                </td>
                <td nowrap>
                    @if (item.Data.EndDate.HasValue)
                    {
                        @item.Data.EndDate.Value.ToString("dd-MMM-yyyy")
                    }
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Data.LeaveDays)
                </td>
                <td>
                    <span style="width:65px" class="@(item.Data.ManagerStatus=="Pending"?"btn btn-warning btn-xs":(item.Data.ManagerStatus=="Approved"?"btn btn-success btn-xs":"btn btn-danger btn-xs")) btn btn-success btn-xs" title="@item.Data.ManagerComment">
                        @Html.DisplayFor(modelItem => item.Data.ManagerStatus)
                    </span>
                </td>

                <td>

                    @if (item.Data.HrAdminStatus == "Pending")
                    {
                        using (Html.BeginForm("ChangeHRStatus", "LeaveApplication", FormMethod.Get, new { @novalidate = "novalidate" }))
                        {<button type="submit" name="Approved" value="Approved" class="btn btn-success btn-xs" title="Approve"><i class="fa fa-check" aria-hidden="true"></i></button>
                            <button type="button" class="btn btn-danger btn-xs" data-toggle="modal" data-target="#hrModal" title="Denied"><i class="fa fa-check" aria-hidden="true"></i></button>

                            <!-- Modal -->
                            <div class="modal" id="hrModal" role="dialog">
                                <div class="modal-dialog modal-lg">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                                            <h4 class="modal-title">HR Admin Comments</h4>
                                        </div>
                                        <div class="modal-body">
                                            <input type="hidden" name="leaveApplicationId" value="@item.Data.LeaveApplicationId" />
                                            <input type="hidden" name="status" value="Denied" />
                                            <input type="text" name="comments" class="form-control" min="5" required />
                                        </div>
                                        <div class="modal-footer">
                                            <input type="submit" name="Denied" value="Denied" class="btn btn-danger btn-xs" />
                                            <button type="button" class="btn btn-warning btn-xs" data-dismiss="modal">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }

                    else
                    {
                        if (!string.IsNullOrEmpty(item.Data.HrAdminStatus))
                        {
                            <span style="width:65px" class="@(item.Data.HrAdminStatus=="Approved"?"btn btn-success btn-xs":(item.Data.ManagerStatus=="Denied"?"btn btn-danger btn-xs":"")) btn btn-success btn-xs" title="@item.Data.HrAdminComment">
                                @Html.DisplayFor(modelItem => item.Data.HrAdminStatus)
                            </span>
                        }

                    }

                </td>
            </tr>
        }

    </table>
    @if (Model.PageCount > 1)
    {
        <span class="btn btn-success">
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        </span>
        <span class="checkbox">
            @Html.PagedListPager(Model, Page_No => Url.Action("HRLeaveApproval", "LeaveApplication", new { Page_No, Sorting_Order = Request.QueryString["Search"], SearchText = Request.QueryString["searchText"] }))
        </span>
    }

</div>


@section Scripts{

    <script type="text/javascript">

        $("#hrApprove").click(function () {
            if ($('#hrApprove').attr('id') == 'hrApprove') {
                $("#status").val("Approved")
            }
        })

        $("#hrDenied").click(function () {
            if ($('#hrDenied').attr('id') == 'hrDenied') {
                $("#status").val("Denied")
            }
        })


    </script>

}


