@model KGERP.ViewModel.AssetAssignViewModel
@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm("CreateOrEdit", "AssetAssign", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="row">
        <span style="font-size:25px">Asset</span>
        <hr style="border-color:red; padding:0px;margin-top: 10px;margin-bottom: 10px; border-width: 2px;" />
    </div>

    <div class="form-horizontal">
        <div class="row">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.AssetAssign.AssignId)


            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.AssetAssign.CompanyId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.AssetAssign.CompanyId, new SelectList(Model.Company, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control", @id = "ddlCompany" })

                        @Html.ValidationMessageFor(model => model.AssetAssign.CompanyId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.AssetAssign.AssetLocationId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.AssetAssign.AssetLocationId, new SelectList(Model.AssetLocation, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control", @id = "ddlLocation" })

                        @Html.ValidationMessageFor(model => model.AssetAssign.AssetLocationId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.AssetAssign.AssetSubLocId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.AssetAssign.AssetSubLocId, new SelectList(Model.AssetSubLocation, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control", @id = "ddlSubLocation" })

                        @Html.ValidationMessageFor(model => model.AssetAssign.AssetSubLocId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.AssetAssign.AssetCategoryId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.AssetAssign.AssetCategoryId, new SelectList(Model.AssetCategory, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control", @id = "ddlCategory" })

                        @Html.ValidationMessageFor(model => model.AssetAssign.AssetCategoryId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.AssetAssign.AssetTypeId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.AssetAssign.AssetTypeId, new SelectList(Model.AssetType, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control", @id = "ddlAssetType" })

                        @Html.ValidationMessageFor(model => model.AssetAssign.AssetTypeId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.AssetAssign.AssetId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.AssetAssign.AssetId, new SelectList(Model.Asset, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control", @id = "ddlAssetSno" })

                        @Html.ValidationMessageFor(model => model.AssetAssign.AssetId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.AssetAssign.AssignTo, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.AssetAssign.AssignedPersonName, new { htmlAttributes = new { @class = "form-control", @name = "employee", @id = "employee" } })
                        @Html.ValidationMessageFor(model => model.AssetAssign.AssignedPersonName, "", new { @class = "text-danger" })
                        @Html.HiddenFor(x => x.AssetAssign.AssignTo, new { @id = "salePersonId", @name = "salePersonId" })
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.AssetAssign.Remarks, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.AssetAssign.Remarks, new { htmlAttributes = new { @class = "form-control" } })

                        @Html.ValidationMessageFor(model => model.AssetAssign.Remarks, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>



            <div class="col-md-offset-5 col-md-5">
                <div class="form-group">
                    <input type="submit" class="btn btn-primary pull-right" />
                    <a href="@Url.Action("Index")" class="btn btn-danger pull-right" style="margin-right:8px">
                        Close <i class="fa fa-close" aria-hidden="true"></i>
                    </a>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts{
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")
    <script type="text/javascript">
        $('#ddlCategory').change(function () {
            $.ajax({
                type: "post",
                url: "/AssetAssign/GetAssetTypeByAssetCategory",
                data: { categoryId: $('#ddlCategory').val() },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    var assetType = "<select>";
                    assetType = assetType + '<option value="">--Select--</option>';
                    for (var i = 0; i < data.length; i++) {
                        assetType = assetType + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    assetType = assetType + '</select>';
                    $('#ddlAssetType').html(assetType);
                }
            });
        });
        
        $('#ddlAssetType').change(function () {
            var assetTypeId= $(this).val();
           var  companyId = $('#ddlCompany').val();
            $.ajax({
                
                url: '/AssetAssign/GetAssetSerialNo?assetTypeId=' + assetTypeId + '&companyId=' + companyId + "" ,
                //data: { assetTypeId: $('#ddlAssetType').val(), companyId= $('#ddlCompany').val() },
                datatype: "json",
                type: "GET",
                async: true,
                processData: false,
               
                traditional: true,
                success: function (data) {
                    var serialNo = "<select>";
                    serialNo = serialNo + '<option value="">--Select--</option>';
                    for (var i = 0; i < data.length; i++) {
                        serialNo = serialNo + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    serialNo = serialNo + '</select>';
                    $('#ddlAssetSno').html(serialNo);
                }
            });
        });

        $('#ddlLocation').change(function () {
            $.ajax({
                type: "post",
                url: "/AssetAssign/GetSubLocationByLocationId",
                data: { locationId: $('#ddlLocation').val() },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    var subLocation = "<select>";
                    subLocation = subLocation + '<option value="">--Select--</option>';
                    for (var i = 0; i < data.length; i++) {
                        subLocation = subLocation + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    subLocation = subLocation + '</select>';
                    $('#ddlSubLocation').html(subLocation);
                }
            });
        });

        $(function () {
            $("#employee").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Employee/EmployeeAutoComplete/',
                        //data: "{ 'prefix': '" + request.term + "'}",
                        data: '{"prefix":"' + request.term + '", "productType":"F"}',
                        dataType: "json",
                        type: "POST",
                        cache: true,
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            alert(response.responseText);
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#salePersonId").val(i.item.val);
                },
                minLength: 1,
                cache: true

            }).focus(function () {
                $(this).autocomplete("search");
            });
        });

    </script>
}
