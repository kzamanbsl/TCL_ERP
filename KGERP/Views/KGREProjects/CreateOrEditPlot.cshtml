@model KGERP.Service.ServiceModel.KGREProjectModel

@{
    ViewBag.Title = "CreateOrEditPlot";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.PlotId) 

        <div class="panel panel-info pnlClientCreateOrEdit" id="pnlClientCreateOrEdit">
            <div class="panel-heading"><b> Plot Entry </b></div>
            <div class="panel-body">
                <div class="container-fluid">
                    <div class="panel panel-primary">
                        <div class="panel-body">
                            <h4 class="text-on-pannel text-primary"><strong class="text-capitalize"> Plot Information  </strong></h4>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ProjectName, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(model => model.ProjectId, new SelectList(Model.KGREProjects, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control" })
                                        @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.PlotNo, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.PlotNo, new { htmlAttributes = new { @class = "form-control", @id = "address" } })
                                        @Html.ValidationMessageFor(model => model.PlotNo, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.BlockNo, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.BlockNo, new { htmlAttributes = new { @class = "form-control", @id = "address" } })
                                        @Html.ValidationMessageFor(model => model.BlockNo, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.PlotFace, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.PlotFace, new { htmlAttributes = new { @class = "form-control", @id = "TotalFlatId" } })
                                        @Html.ValidationMessageFor(model => model.PlotFace, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.PlotSize, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.PlotSize, new { htmlAttributes = new { @class = "form-control", @id = "TotalFlatId" } })
                                        @Html.ValidationMessageFor(model => model.PlotSize, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.PlotStatus, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(model => model.PlotStatus, new SelectList(Model.PStatus, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control" })
                                        @Html.ValidationMessageFor(model => model.PlotStatus, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.TextAreaFor(model => model.Remark, 3, 150, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="@Model.ButtonNameP" id="btnSubmit" class="btn btn-success" />
                    </div>
                </div>
            </div>
        </div>
    </div>

}



@if (TempData["errMessage"] != null)
{
    if (TempData["errMessage"].ToString() == "Exists")
    {
        <script type="text/javascript">
            window.onload = function () {
                alert("This Project Already Exists");
            };
        </script>
    }
}


@if (TempData["DataSave"] != null)
{
    <script type="text/javascript">
        window.onload = function () {
            alert("Data Save Successfully!");
        };
    </script>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

}
