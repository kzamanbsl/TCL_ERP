@using PagedList.Mvc;
@model PagedList.IPagedList<KGERP.Service.ServiceModel.StoreModel>
@using PagedList;

@{
    var message = TempData["successMessage"];
    ViewBag.Title = "Store Information";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/CustomCss/search-form.css" rel="stylesheet" />
<div class="row">
    @using (Html.BeginForm("Index", "RMStore", FormMethod.Get, new { @class = "example" }))
    {
        <div class="col-md-5">
            @Html.Label("RM Receive", new { @style = "font-size:20px;font-weight:bold" })
        </div>
        <div class="col-md-6">
            <div class="col-md-4">
                @Html.Editor("searchDate", new { htmlAttributes = new { @autocomplete = "off", @class = "datepicker pull-left", @placeholder = "dd/mm/yy" } })
            </div>
            <div class="col-md-8">
                @Html.Hidden("companyId")
                @Html.Editor("searchText", new { htmlAttributes = new { @autocomplete = "off", @placeholder = "Search..", @style = "width:70%" } })
                <button type="submit"><i class="fa fa-search "></i></button>
            </div>
        </div>
        <div class="col-md-1">
            <a href="@Url.Action("RMStoreCreateOrEdit", new { id = 0 })" class="btn btn-primary pull-right">
                <span class="glyphicon glyphicon-plus-sign"></span> New RM Receive
            </a>
        </div>
    }
</div>

<div class="row">
    <hr style="border-color:#ff0000; padding:0px;margin-top: 5px;margin-bottom: 5px; border-width: 2px;" />
    <table class="table table-striped">
        <tr style="background-color:#4CAF50;color:#FFFFFF">
            <th style="text-align:center">
                SL
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().ReceivedDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().ReceivedCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().PurchaseOrder.PurchaseOrderNo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().PurchaseOrder.Demand.DemandNo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().StockInfoId)



            <th>
                @Html.DisplayNameFor(model => model.First().Time)
            </th>

            @*<th>
                    @Html.DisplayNameFor(model => model.First().TotalQty)
                </th>*@

            <th>Download</th>
        </tr>

        @foreach (var item in Model.Select((x, i) => new { Data = x, Index = i }))
        {
            <tr>

                <td style="text-align:center">
                    @((item.Index + 1) + (Model.PageNumber - 1) * Model.PageSize)
                </td>
                <td>
                    @if (item.Data.ReceivedDate.HasValue)
                    {
                        @item.Data.ReceivedDate.Value.ToString("dd MMM yyyy")
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Data.ReceivedCode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Data.ParchaseOrderNo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Data.DemandNo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Data.StoreName)
                </td>


                <td>
                    @item.Data.CreatedDate.ToShortTimeString()
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.TotalQty)
                    </td>*@
                <td>
                    <a href="@Url.Action("GetMRRReport","Report", new {storeId=item.Data.StoreId,reportName="MRRReport"})" target="_blank" class="btn btn-primary btn-xs">
                        Download
                    </a>
                </td>
            </tr>
        }

    </table>
</div>
@if (Model.PageCount > 1)
{
    <span class="btn btn-success">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    </span>
    <span class="checkbox">
        @Html.PagedListPager(Model, Page_No => Url.Action("RMStoreIndex", "Store",
                     new { companyId = Request.QueryString["companyId"], Page_No, Sorting_Order = Request.QueryString["searchText"] }))
    </span>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script type="text/javascript">
        var message = '@message';
    if(message){
        alert(message);
    }
    </script>

}