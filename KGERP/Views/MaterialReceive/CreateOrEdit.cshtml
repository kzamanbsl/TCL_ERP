@model KGERP.Service.Implementation.WareHouse.VMWarehousePOReceivingSlave

@{
    ViewBag.Title = "Material Receive";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var message = TempData["message"];
}

<style type="text/css">

    input, select, textarea {
        max-width: 100%;
    }

    .table > thead > tr > th,
    .table > tbody > tr > th,
    .table > tfoot > tr > th,
    .table > thead > tr > td,
    .table > tbody > tr > td,
    .table > tfoot > tr > td {
        padding: 2px 0px 2px 0px;
    }
</style>
<section class="content-header">
    <h1>
        Material Receive
        @if (Model.MaterialReceiveId > 0)
        {

            <a href="/Report/GetMRRReport?materialReceiveId=@Model.MaterialReceiveId&amp;reportName=MRRReport" target="_blank">
                @Model.ChallanCID
            </a>
        }

    </h1>
    <ol class="breadcrumb">
        <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i>Dashboard</a></li>
        <li class="active">Material Receive</li>
    </ol>
</section>


@if (Model.MaterialReceiveId == 0)
{
    using (Html.BeginForm("CreateOrEdit", "MaterialReceive", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(x => x.CompanyId)
        <section class="content">
            <div class="box">
                <div class="box-body">
                    <div class="row">
                        <div class="col-md-3">
                            <div class="form-group">
                 

                                <label for="message-text" class="col-form-label">MRR Date:</label>
                                <input style = "width:240px" name="ReceivedDate" asp-for="ReceivedDate" type="datetime" value="@DateTime.Now.ToString("dd/MM/yyyy")" required="required" class="datepicker "  placeholder="MRR Date" autocomplete="off">
                                @Html.ValidationMessageFor(model => model.ReceivedDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="message-text" class="col-form-label">Warehouse:</label>
                                @Html.DropDownListFor(model => model.StockInfoId, new SelectList(Model.StockInfos, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control" })
                                @Html.ValidationMessageFor(model => model.StockInfoId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-5">
                            <div class="form-group">
                                <label for="message-text" class="col-form-label">Supplier:</label>
                                @Html.EditorFor(model => model.SupplierName, new { htmlAttributes = new { @class = "form-control", @name = "supplier", @id = "supplier" } })
                                @Html.HiddenFor(x => x.Common_SupplierFK, new { @id = "supplierId", @name = "supplierId" })
                                @Html.ValidationMessageFor(model => model.SupplierName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>



                    <div class="row">
                        <div class="col-md-3">
                            <label for="message-text" class="col-form-label">PO No:</label>
                            @Html.DropDownListFor(model => model.Procurement_PurchaseOrderFk, new SelectList(Model.PurchaseOrders, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control", @id = "ddlPurchaseOrderNo" })
                            @Html.ValidationMessageFor(model => model.Procurement_PurchaseOrderFk, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="message-text" class="col-form-label">PO Date:</label>
                                @Html.Editor("PODate", new { htmlAttributes = new { @readonly = "readonly", @style = "width:240px", @class = "datepicker" } })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="message-text" class="col-form-label"> Demand No:</label>
                                @Html.TextBox("DemandNo", null, new { @readonly = "readonly", @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="message-text" class="col-form-label"> Demand Date:</label>
                                @Html.Editor("DemandDate", new { htmlAttributes = new { @readonly = "readonly", @style = "width:240px", @class = "datepicker" } })
                            </div>
                        </div>

                    </div>

                    <div class="row">
                        <div class="col-md-2">
                            <label for="message-text" class="col-form-label">Challan No:</label>
                            @Html.EditorFor(model => model.Challan, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.Challan, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="message-text" class="col-form-label">Challan Date:</label>
                                @Html.EditorFor(model => model.ChallanDate, new { htmlAttributes = new { @style = "width:240px", @class = "datepicker", @autocomplete = "off" } })
                                @Html.ValidationMessageFor(model => model.ChallanDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="message-text" class="col-form-label">Driver Name:</label>
                                @Html.EditorFor(model => model.DriverName, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="message-text" class="col-form-label"> Truck No:</label>
                                @Html.EditorFor(model => model.TruckNo, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <label for="message-text" class="col-form-label"> Truck Fare:</label>
                            @Html.EditorFor(model => model.TruckFare, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.TruckFare, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row">

                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-form-label">Labour Bill:</label>
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(model => model.AllowLabourBill, "true", new { @id = "rbtnYes" })<b>Allow</b>
                                </label>
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(model => model.AllowLabourBill, "false", new { @id = "rbtnNo" })<b>Not Allow</b>
                                </label>
                                @Html.EditorFor(model => model.LabourBill, new { htmlAttributes = new { @id = "txtLabourBill", @class = "form-control", @autocomplete = "off", @style = "width: 100%;" } })

                            </div>
                        </div>
                        <div class="col-md-8">
                            <div class="form-group">
                                <label for="message-text" class="col-form-label"> Received By:</label>
                                @Html.EditorFor(model => model.EmployeeName, new { htmlAttributes = new { @class = "form-control", @name = "receiverName", @id = "receiverName" } })
                                @Html.HiddenFor(x => x.ReceivedBy, new { @id = "receivedBy", @name = "receivedBy" })
                            </div>
                        </div>

                    </div>


                </div>

            </div>
        </section>


        <div style="padding:0px" id="purchaseOrderItems">

        </div>
    }
}
else
{
    <div class="content">
        <div class="box">
            <div class="box-success">
                <div class="box-body">
                    <div class="col-md-1"> </div>
                    <div class="col-md-10">
                        <table class="table">
                            <tr>
                                <td><b>MRR NO</b></td>
                                <td>:</td>
                                <td><b>@Model.ChallanCID</b></td>

                                <td width="18%"><b> MRR Date</b></td>
                                <td width="5%">:</td>
                                <td width="27%"> @Model.ReceivedDate.ToString("dd/MM/yyyy") </td>

                            </tr>

                            <tr>
                                <td><b> Received By</b></td>
                                <td>:</td>
                                <td><b>@Model.EmployeeName</b></td>

                                <td><b>Supplier Name</b></td>
                                <td>:</td>
                                <td>@Model.SupplierName</td>

                            </tr>

                            <tr>
                                <td width="18%"><b> Ware House</b></td>
                                <td width="5%">:</td>
                                <td width="27%"> @Model.Factory </td>

                                <td width="18%"><b> Driver Name</b></td>
                                <td width="5%">:</td>
                                <td width="27%"> @Model.DriverName </td>
                            </tr>
                            <tr>
                                <td width="18%"><b> Supplier Challan NO</b></td>
                                <td width="5%">:</td>
                                <td width="27%"> @Model.Challan </td>

                                <td width="18%"><b> Challan Date</b></td>
                                <td width="5%">:</td>
                                <td width="27%"> @Model.ChallanDate.Value.ToString("dd/MM/yyyy") </td>
                            </tr>

                            <tr>
                                <td width="18%"><b> Truck NO</b></td>
                                <td width="5%">:</td>
                                <td width="27%"> @Model.TruckNo </td>

                                <td width="18%"><b> Truck Fare</b></td>
                                <td width="5%">:</td>
                                <td width="27%"> @Model.TruckFare </td>
                            </tr>
                            <tr>
                                <td width="18%"><b> Unloading Date</b></td>
                                <td width="5%">:</td>
                                <td width="27%"> @Model.UnloadingDate.Value.ToString("dd/MM/yyyy") </td>

                                <td width="18%"><b> Labour Bill</b></td>
                                <td width="5%">:</td>
                                <td width="27%"> @Model.LabourBill </td>
                            </tr>

                            <tr>
                                <td><b> Purchase Order</b></td>
                                <td>:</td>

                                <td><a href="~/Report/GetPurchaseOrderTemplateReport?purchaseOrderId=@Model.Procurement_PurchaseOrderFk&EXPORT=EXPORT&reportType=PDF" target="_blank" title="See All Receiving History of This PO"> @Model.POCID </a> </td>

                                <td><b> PO Date</b></td>
                                <td>:</td>
                                <td>@Model.PODate.Value.ToString("dd/MM/yyyy")</td>
                            </tr>

                        </table>

                    </div>
                    <div class="col-md-1"> </div>
                </div>

                <div class="box-body">
                    <h4><b>Received Item:</b> </h4>
                    <div class="table-responsive col-md-12 text-nowrap">
                        <table id="KgErpDataTable" class="table table-striped">
                            <thead>
                                <tr>
                                    <th>SL</th>

                                    <th style="text-align:left;">Product Name</th>
                                    <th style="text-align:center;">Received</th>
                                    <th style="text-align:right;">Unit Price</th>
                                    <th style="text-align:right;">Deduction</th>
                                    <th style="text-align:center;">StockIn Qty</th>
                                    <th style="text-align:right;">StockIn Rate</th>
                                    <th style="text-align:right;">Total Amount</th>
                                    <th style="text-align:center;">Bag Name</th>
                                    <th style="text-align:center;">Bag Qty</th>
                                    <th style="text-align:center;">Bag Weight</th>


                                </tr>
                            </thead>
                            @{
                                int sl = 0;
                                decimal StockInAmount = 0;
                            }
                            <tbody>
                                @foreach (var item in Model.DataListSlave)
                                {
                                    StockInAmount += item.StockInQty * item.StockInRate;
                                    <tr>
                                        <td>@(++sl) </td>
                                        <td style="text-align:left;">@item.ProductSubCategory @item.ProductName  </td>
                                        <td style="text-align:center;"> @item.ReceivedQuantity @item.UnitName</td>
                                        <th style="text-align:right;"> @item.PurchasingPrice </th>
                                        <th style="text-align:right;"> @item.Deduction </th>
                                        <td style="text-align:center;"> @item.StockInQty @item.UnitName</td>
                                        <th style="text-align:right;"> @item.StockInRate </th>
                                        <td style="text-align:right;"> @(item.StockInQty * item.StockInRate)  </td>
                                        <td style="text-align:center;">
                                            @if (item.BagName != null)
                                            {
                                                <span>
                                                    @item.BagName
                                                </span>
                                            }
                                        </td>
                                        <td style="text-align:center;"> @item.BagQty </td>
                                        <td style="text-align:center;"> @item.BagWeight </td>
                                    </tr>

                                }
                                <tr>
                                    <td> </td>
                                    <th colspan="6">Total </th>

                                    <th style="text-align:right;"> @StockInAmount  </th>
                                    <td>
                                    </td>
                                    <td>  </td>
                                    <td>  </td>
                                </tr>
                            </tbody>
                        </table>

                    </div>
                </div>


                <div class="box-footer">
                    <div class="row">
                        <div class="col-md-6">
                            <a href="@Url.Action("GetVoucherReport","Report", new { companyId = Model.CompanyId, voucherId = Model.VoucherId ,reportName =""})" style="width:100%" target="_blank" class="btn btn-warning">
                                Voucher Report
                            </a>
                        </div>

                        <div class="col-md-6">
                            <a href="/Report/GetMRRReport?materialReceiveId=@Model.MaterialReceiveId&amp;reportName=MRRReport" target="_blank" class="btn btn-primary btn-block">
                                Report of @Model.ChallanCID
                            </a>
                        </div>

                    </div>
                </div>


            </div>
           
        </div>
       

      
    </div>


}





@using (Html.BeginForm("FeedPOReceivingSubmit", "WareHouse", FormMethod.Post, new { id = "submitFeedPOReceivingSubmit", @class = "formValidator" }))
{
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="modal fade" id="submitProdReferenceModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b>Submit</b></h5>
                </div>
                <div class="modal-body">

                    @Html.HiddenFor(model => model.CompanyFK, new { id = "submitCompanyFK" })
                    @Html.HiddenFor(model => model.MaterialReceiveId, new { id = "submitMaterialReceiveId" })

                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div style="text-align:center">
                        <h3>Are you sure to Submit this Challan?</h3>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="col-md-3">
                        <button type="button" class="btn btn-warning fa fa-close" data-dismiss="modal">&nbsp;NO</button>
                    </div>
                    <div class="col-md-9">
                        <button type="submit" id="btnsave" style="width:100%" class="btn btn-primary fa fa-remove">&nbsp; Submit</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script src="~/Scripts/ApplicationScripts/Inventory_Feed/Stock/StockEntry.js"></script>
@section Scripts {

    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script type="text/javascript">

         var message = '@message';
        if(message){
            alert(message);
        }

    $(function () {
        $("#supplier").autocomplete({
                source: function (request, response) {
                 
                    $.ajax({
                       url:"@Url.Action("GetSupplierAutoComplete", "Vendor")",
                        //data: "{ 'prefix': '" + request.term + "'}",
                        data: { companyId: "8", prefix: request.term },
                        dataType: "json",
                        type: "get",
                        cache: true,
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            //alert(response.responseText);
                        },
                        failure: function (response) {
                            //alert(response.responseText);
                        }
                    });
                },

            select: function (e, i) {
                    $("#supplierId").val(i.item.val);

                },
            minLength: 1,
            change: function (event, ui) {
                
                loadOpenedPurchaseaOrderDropDown(ui.item.val);
            },
            cache: true


            }).focus(function () {
                $(this).autocomplete("search");
            });




        });

        function loadOpenedPurchaseaOrderDropDown(vendorId) {
            $.ajax({
                type: "post",
                url: "/PurchaseOrder/GetOpenedPurchaseByVendor",
                data: { vendorId },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    var PurchaseOrder = "<select>";
                    PurchaseOrder = PurchaseOrder + '<option value="">--Select--</option>';
                    for (var i = 0; i < data.length; i++) {
                        PurchaseOrder = PurchaseOrder + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    PurchaseOrder = PurchaseOrder + '</select>';
                    $('#ddlPurchaseOrderNo').html(PurchaseOrder);
                }
            });
        }

        $('#rbtnYes').click(function () {
            $("#txtLabourBill").show();
            $("#txtLabourBill").val(7);
        })
        $('#rbtnNo').click(function () {
            $("#txtLabourBill").hide();
            $("#txtLabourBill").val(0);

        })



        $(function () {

            $('#rbtnYes').prop('checked', true);
            if ($('#rbtnYes').is(':checked')) {
                $("#txtLabourBill").show();
                $("#txtLabourBill").val(7);
            }


        })

        $(function () {
            $("#receiverName").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Employee/EmployeeAutoComplete/',
                        //data: "{ 'prefix': '" + request.term + "'}",
                        data: '{"prefix":"' + request.term + '", "productType":"F"}',
                        dataType: "json",
                        type: "POST",
                        cache: true,
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            //alert(response.responseText);
                        },
                        failure: function (response) {
                            //alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#receivedBy").val(i.item.val);
                },
                minLength: 1,
                cache: true

            }).focus(function () {
                $(this).autocomplete("search");
            });
        });

        $(function () {
            $("#ddlPurchaseOrderNo").change(function () {
                var purchaseOrderId = $("#ddlPurchaseOrderNo option:selected").val();
                $.ajax({
                    url: '/PurchaseOrder/GetPurchaseOrderInfo?purchaseOrderId=' + purchaseOrderId + "",
                    type: "GET",
                    async: true,
                    processData: false,
                    cache: false,
                    success: function (data) {
                        var result = JSON.parse(data);

                        var purchaseDate = new Date(result.PurchaseDate);
                        var demandDate = new Date(result.Demand.DemandDate);

                        
                        $('#PODate').val(getFormattedDate(purchaseDate))
                        $('#DemandNo').val(result.Demand.DemandNo)
                        $('#DemandDate').val(getFormattedDate(demandDate))
                        $('#Supplier').val(result.Vendor.Name)
                        $('#hfSupplierId').val(result.Vendor.VendorId)

                        $.ajax({
                            url: '/MaterialReceive/GetPurchaseOrderItems?purchaseOrderId=' + purchaseOrderId + '&companyId=' + result.CompanyId + "",
                            type: "GET",
                            async: true,
                            processData: false,
                            cache: false,
                            success: function (data) {
                                $('#purchaseOrderItems').html(data);
                            },
                            error: function (xhr) {
                                alert('error');
                            }
                        });
                    },
                    error: function (xhr) {
                        alert('error');
                    }
                });
            });
        });


        function getFormattedDate(date) {
            let year = date.getFullYear();
            let month = (1 + date.getMonth()).toString().padStart(2, '0');
            let day = date.getDate().toString().padStart(2, '0');

            return day + '/' + month + '/' + year;
        }
    </script>
}
