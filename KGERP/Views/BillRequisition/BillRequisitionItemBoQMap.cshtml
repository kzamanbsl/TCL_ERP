@model KGERP.Service.ServiceModel.BillRequisitionItemBoQMapModel
@{
    ViewData["Title"] = "BoQ Budget & Estimating";
    Layout = "~/Views/Shared/_Layout.cshtml";

    KGERP.Service.ServiceModel.BillRequisitionItemBoQMapModel CacheData = TempData["CacheModel"] as KGERP.Service.ServiceModel.BillRequisitionItemBoQMapModel;
}

<style type="text/css">
    input, select, textarea {
        max-width: 100%;
    }
</style>
<section class="content-header">
    <h1>
        BoQ Budget & Estimating
    </h1>
    <ol class="breadcrumb">
        <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i>Dashboard</a></li>
        <li class="active">BoQ Budget & Estimating</li>
    </ol>
</section>

@using (Html.BeginForm("BillRequisitionItemBoQMap", "BillRequisition", FormMethod.Post, new { id = "BillRequisitionItemBoQMapFormId", @class = "formValidator" }))
{
    <section class="content">
        <div class="row">
            <div class="box">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="box-danger">
                    <div class="box-body row">
                        @Html.HiddenFor(model => model.ID, new { Value = "", id = "BoQItemMapId" })
                        @Html.HiddenFor(model => model.ActionId, new { Value = "", id = "ActionId" })
                        @Html.HiddenFor(model => model.CompanyFK, new { id = "CompanyFK" })

                        @if (CacheData != null)
                        {
                            <input type="hidden" value="@CacheData.ProjectTypeId" id="cacheProjectTypeId" />
                            <input type="hidden" value="@CacheData.ProjectId" id="cacheProjectId" />
                            <input type="hidden" value="@CacheData.BoQDivisionId" id="cacheDivisionId" />
                            <input type="hidden" value="@CacheData.BoQItemId" id="cacheBoqItemId" />
                            <input type="hidden" value="@CacheData.BudgetSubtypeId" id="cacheBudgetTypeId" />
                        }

                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="form-label">Select Project Type<sup class="text-danger" title="Required"><b>*</b></sup></label>
                                @Html.DropDownListFor(model => model.ProjectTypeId, new SelectList(Model.ProjectTypes.OrderBy(order => order.Name), "CostCenterTypeId", "Name"), "==Select Project Type==", new { id = "projectTypeId", @class = "form-control searchingDropdown", style = "width:100%", required = "required" })
                                @Html.ValidationMessageFor(model => model.ProjectTypeId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="form-label">Select Project<sup class="text-danger" title="Required"><b>*</b></sup></label>
                                @Html.DropDownListFor(model => model.ProjectId, new SelectList(Model.Projects.OrderBy(order => order.Name), "CostCenterId", "Name"), "==Select Project Type First==", new { id = "ddlProjectId", @class = "form-control searchingDropdown", style = "width:100%", required = "true" })
                                @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="form-label">Select BoQ Division<sup class="text-danger" title="Required"><b>*</b></sup></label>
                                @Html.DropDownListFor(model => model.BoQDivisionId, new SelectList(Model.BoQDivisions.OrderBy(order => order.Name), "BoQDivisionId", "Name"), "==Select Project First==", new { id = "ddlBoQDivisionId", @class = "form-control searchingDropdown", style = "width:100%", required = "true" })
                                @Html.ValidationMessageFor(model => model.BoQDivisionId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="form-label">Select BoQ Item<sup class="text-danger" title="Required"><b>*</b></sup></label>
                                @Html.DropDownListFor(model => model.BoQItemId, new SelectList(Model.BoQItems.OrderBy(order => order.Name), "BoQItemId", "Name"), "==Select BoQ Division First==", new { id = "ddlBoQItemId", @class = "form-control searchingDropdown", style = "width:100%", required = "true" })
                                @Html.ValidationMessageFor(model => model.BoQItemId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="form-label">Select Material Type<sup class="text-danger" title="Required"><b>*</b></sup></label>
                                @Html.DropDownListFor(model => model.BudgetTypeId, new SelectList(Model.BudgetTypes.OrderBy(order => order.Name), "ProductCategoryId", "Name"), "==Select Material Type==", new { id = "ddlBRTypeId", @class = "form-control searchingDropdown", style = "width:100%", required = "required" })
                                @Html.ValidationMessageFor(model => model.BudgetTypeId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="form-label">Select Material Subtype<sup class="text-danger" title="Required"><b>*</b></sup></label>
                                @Html.DropDownListFor(model => model.BudgetSubtypeId, new SelectList(Model.BudgetSubtypes.OrderBy(order => order.Name), "ProductSubCategoryId", "Name"), "==Select Material Type First==", new { id = "ddlBRSubTypeId", @class = "form-control searchingDropdown", style = "width:100%", required = "required" })
                                @Html.ValidationMessageFor(model => model.BudgetSubtypeId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="form-label">Select Material<sup class="text-danger" title="Required"><b>*</b></sup></label>
                                @Html.DropDownListFor(model => model.MaterialItemId, new SelectList(Model.BoQMaterials.OrderBy(order => order.ProductName), "ProductId", "ProductName"), "==Select Material Subtype First==", new { id = "ddlMaterialItemId", @class = "form-control searchingDropdown", required = "true" })
                                @Html.ValidationMessageFor(model => model.MaterialItemId, "", new { @class = "text-danger" })
                                <small class="text-danger" id="errorMessage"></small>
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="form-label">Estimated Quantity<sup class="text-danger" title="Required"><b>*</b></sup></label>
                                @Html.TextBoxFor(model => model.EstimatedQty, new { id = "txtEstimateQty", @class = "form-control", @placeholder = "BoQ Item Number", required = "true" })
                                @Html.ValidationMessageFor(model => model.EstimatedQty, "", new { id = "nameExist", @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="form-label">Unit Price<sup class="text-danger" title="Required"><b>*</b></sup></label>
                                @Html.TextBoxFor(model => model.UnitRate, new { id = "txtUnitRate", @class = "form-control", @placeholder = "BoQ Item Number", required = "true" })
                                @Html.ValidationMessageFor(model => model.UnitRate, "", new { id = "nameExist", @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-12">
                            <div class="form-group">
                                <div class="col-md-6">
                                    <input type="button" onclick="resetForm()" value="Reset Form" class="btn btn-secondary" data-dismiss="modal" style="width:100% !important" />
                                </div>
                                <div class="col-md-6">
                                    <button type="submit" id="btnSave" class="btn btn-primary btn-block" style="width:100% !important"><i class='fa fa-edit'></i> Add</button>
                                </div>
                            </div>
                        </div>

                    </div>

                </div>
            </div>
        </div>
    </section>
}


<section class="content">
    <div class="row">
        <div class="box">
            <div class="box-danger">
                <div class="box-header">
                </div>
                <!-- /.box-header -->
                <div class="box-body">
                    <div class="table-responsive col-md-12">
                        <table id="KgErpDataTable" class="table table-dark table-responsive">
                            <thead>
                                <tr>
                                    <th>SL</th>
                                    <th>Project Name</th>
                                    <th>BoQ Division</th>
                                    <th>BoQ Name</th>
                                    <th>Material Type</th>
                                    <th>Material Subtype</th>
                                    <th>Material </th>
                                    <th>Quantity</th>
                                    <th>Unit Price</th>
                                    <th>Amount</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            @{int sl = 0;}
                            <tbody>
                                @{
                                    if (Model.BoQItemProductMaps != null)
                                    {
                                        foreach (var item in Model.BoQItemProductMaps)
                                        {
                                            <tr>
                                                <td>
                                                    @(++sl)

                                                    <input type="hidden" id="projectTypeIdHidden_@item.BoQItemProductMapId" value="@item.ProjectTypeId" />
                                                    <input type="hidden" id="projectIdHidden_@item.BoQItemProductMapId" value="@item.ProjectId" />
                                                    <input type="hidden" id="divisionIdHidden_@item.BoQItemProductMapId" value="@item.BoQDivisionId" />
                                                    <input type="hidden" id="boqIdHidden_@item.BoQItemProductMapId" value="@item.BoQItemId" />
                                                    <input type="hidden" id="materialTypeIdHidden_@item.BoQItemProductMapId" value="@item.BudgetTypeId" />
                                                    <input type="hidden" id="materialSubtypeIdHidden_@item.BoQItemProductMapId" value="@item.BudgetSubtypeId" />
                                                    <input type="hidden" id="materialIdHidden_@item.BoQItemProductMapId" value="@item.MaterialItemId" />
                                                    <input type="hidden" id="quantityHidden_@item.BoQItemProductMapId" value="@item.EstimatedQty" />
                                                    <input type="hidden" id="unitRateHidden_@item.BoQItemProductMapId" value="@item.UnitRate" />

                                                </td>
                                                <td id="tdBoqDivisionName_@item.BoQItemProductMapId">@item.ProjectName</td>
                                                <td id="tdBoqDivisionName_@item.BoQItemProductMapId">@item.DivisionName</td>
                                                <td id="tdBoqItemNo_@item.BoQItemProductMapId"><small class="label label-primary">@item.BoqNumber</small> @item.BoqName</td>
                                                <td id="tdBoqMaterialName_@item.BoQItemProductMapId">@item.MaterialTypeName</td>
                                                <td id="tdBoqMaterialName_@item.BoQItemProductMapId">@item.MaterialSubtypeName</td>
                                                <td id="tdBoqMaterialName_@item.BoQItemProductMapId">@item.MaterialName</td>
                                                <td id="tdBoqEstimateQty_@item.BoQItemProductMapId">@item.EstimatedQty</td>
                                                <td id="tdBoqUnitRate_@item.BoQItemProductMapId">@item.UnitRate</td>
                                                <td id="tdBoqEstimateAmount_@item.BoQItemProductMapId">@item.EstimatedAmount</td>
                                                <td>
                                                    <a id="@item.BoQItemProductMapId" onclick="makeEditble(@item.BoQItemProductMapId);" class="linkPointer" title="Edit"><i class="fa fa-pencil-square-o"></i></a>

                                                    <a id="@item.BoQItemProductMapId" onclick="makeDeletable(@item.BoQItemProductMapId);" class="linkPointer" data-toggle="modal" data-target="#BillRequisitionBoQMapModelDeleteModal" title="Delete"
                                                       data-placement="top">
                                                        <i class="glyphicon glyphicon-trash" aria-hidden="true"></i>
                                                    </a>
                                                </td>
                                            </tr>
                                        }
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@using (Html.BeginForm("BillRequisitionItemBoQMap", "BillRequisition", FormMethod.Post, new { id = "BillRequisitionItemBoQMapFormIdModal", @class = "formValidator", onreset = "resetDDL();" }))
{
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    @Html.HiddenFor(model => model.BoQItemProductMapId, new { Value = "", id = "BoQItemProductMapIdDelete" })
    @Html.HiddenFor(model => model.ActionId, new { Value = "", id = "ActionIdDelete" })
    @Html.HiddenFor(model => model.CompanyFK, new { id = "CompanyFKDelete" })

    <div class="modal fade" id="BillRequisitionBoQMapModelDeleteModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" onclick="resetForm()" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b>BoQ Material Map Delete</b></h5>

                </div>
                <div class="modal-body">
                    <div style="text-align:center">
                        <h3>Are you sure to delete?</h3>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" id="btnClose" onclick="resetForm()" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" id="btnDelete" class="deleteId btn btn-primary"><i class="glyphicon glyphicon-check"></i> Confirm</button>
                </div>
            </div>
        </div>
    </div>
}

@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            @if(CacheData != null)
            {
                @: GetDataFromCache();
            }
        });

        var SavedData = false;

        function GetDataFromCache() {
            SavedData = true;
            var projectType = $('#cacheProjectTypeId').val();
            var project = $('#cacheProjectId').val();
            var division = $('#cacheDivisionId').val();
            var boqItem = $('#cacheBoqItemId').val();

            $('#projectTypeId').val(projectType.trim()).trigger('change');

            if (projectType > 0 && project > 0) {
                var showProjectList = $("#ddlProjectId");

                $.ajax({
                    type: "GET",
                    url: "/BillRequisition/GetProjectList",
                    dataType: "json",
                    data: { id: projectType },
                    success: function (data) {
                        showProjectList.empty();
                        showProjectList.append("<option selected disabled>==Select Project==</option>");

                        $.each(data, function (index, item) {
                            showProjectList.append($('<option>', {
                                value: item.CostCenterId,
                                text: item.Name
                            }));
                        });
                        if (project > 0) {
                            showProjectList.val(project.trim()).trigger('change');
                        }
                    }
                });
            }

            if (project > 0 && division > 0) {
                var showBoqDivisionList = $("#ddlBoQDivisionId");

                $.ajax({
                    type: "GET",
                    url: "/BillRequisition/getBoqDivisionList",
                    dataType: "json",
                    data: { id: project },
                    success: function (data) {
                        showBoqDivisionList.empty();
                        showBoqDivisionList.append("<option selected disabled>==Select BoQ Division==</option>");

                        $.each(data, function (index, item) {
                            showBoqDivisionList.append($('<option>', {
                                value: item.BoqDivisionId,
                                text: item.Name
                            }));
                        });
                        if (division > 0) {
                            showBoqDivisionList.val(division.trim()).trigger('change');
                        }
                    }
                });
            }

            if (division > 0 && boqItem > 0) {
                var showBoqItemList = $("#ddlBoQItemId");

                $.ajax({
                    type: "GET",
                    url: "/BillRequisition/getBoqItemListWithBoqNumber",
                    dataType: "json",
                    data: { id: division },
                    success: function (data) {
                        showBoqItemList.empty();
                        showBoqItemList.append("<option selected disabled>==Select BoQ Item==</option>");

                        $.each(data, function (index, item) {
                            showBoqItemList.append($('<option>', {
                                value: item.BoQItemId,
                                text: item.Name
                            }));
                        });
                        if (boqItem > 0) {
                            showBoqItemList.val(boqItem.trim()).trigger('change');
                        }
                    }
                });
            }
        }

        function makeDeletable(id) {
            if (id !== null) {
                $('#BoQItemProductMapIdDelete').val(id);
                $('#ActionIdDelete').val(3);
                $("#CompanyFKDelete").val("@Model.CompanyFK");
            }
        }

        var isEditble = false;

        function makeEditble(id) {
            $('#BoQItemMapId').val(id);
            $('#ActionId').val(2);
            $('#btnSave').html("<i class='fa fa-edit'></i>&nbsp;Update");
            $('#projectTypeId').val($('#projectTypeIdHidden_' + id).val()).trigger('change');
            $('#ddlBRTypeId').val($('#materialTypeIdHidden_' + id).val()).trigger('change');
            $('#txtEstimateQty').val($('#quantityHidden_' + id).val());
            $('#txtUnitRate').val($('#unitRateHidden_' + id).val());

            // show project
            function showProject(dataId){
                if (dataId > 0) {
                    var getProjectTypeId = $('#projectTypeIdHidden_' + dataId).val();
                    var showProjectList = $("#ddlProjectId");

                    $.ajax({
                        type: "GET",
                        url: "/BillRequisition/GetProjectList",
                        dataType: "json",
                        data: { id: getProjectTypeId },
                        success: function (data) {
                            showProjectList.empty();
                            showProjectList.append("<option selected disabled>==Select Project==</option>");

                            $.each(data, function (index, item) {
                                showProjectList.append($('<option>', {
                                    value: item.CostCenterId,
                                    text: item.Name
                                }));
                            });
                            showProjectList.val($('#projectIdHidden_' + dataId).val()).trigger('change');
                        }
                    });
                }
            }
            showProject(id);

            // show division
            function showDivision(dataId) {
                if (dataId > 0) {
                    var getProjectId = $('#projectIdHidden_' + dataId).val();
                    var showBoqDivisionList = $("#ddlBoQDivisionId");

                    $.ajax({
                        type: "GET",
                        url: "/BillRequisition/getBoqDivisionList",
                        dataType: "json",
                        data: { id: getProjectId },
                        success: function (data) {
                            showBoqDivisionList.empty();
                            showBoqDivisionList.append("<option selected disabled>==Select BoQ Division==</option>");

                            $.each(data, function (index, item) {
                                showBoqDivisionList.append($('<option>', {
                                    value: item.BoqDivisionId,
                                    text: item.Name
                                }));
                            });
                            showBoqDivisionList.val($('#divisionIdHidden_' + dataId).val()).trigger('change');
                        }
                    });
                }
            }
            showDivision(id);

            // show boq
            function showBoq(dataId) {
                if (dataId > 0) {
                    var getBoqDivisionId = $('#divisionIdHidden_' + dataId).val();
                    var showBoqItemList = $("#ddlBoQItemId");

                    $.ajax({
                        type: "GET",
                        //url: "/BillRequisition/getBoqItemList",
                        url: "/BillRequisition/getBoqItemListWithBoqNumber",
                        dataType: "json",
                        data: { id: getBoqDivisionId },
                        success: function (data) {
                            showBoqItemList.empty();
                            showBoqItemList.append("<option selected disabled>==Select BoQ Item==</option>");

                            $.each(data, function (index, item) {
                                showBoqItemList.append($('<option>', {
                                    value: item.BoQItemId,
                                    text: item.Name
                                }));
                            });
                            showBoqItemList.val($('#boqIdHidden_' + id).val()).trigger('change');
                        }
                    });
                }
            }
            showBoq(id);

            // show boq
            function showSubtype(dataId) {
                if (dataId > 0) {
                    var getRequisitionTypeId = $("#materialTypeIdHidden_" + dataId).val();
                    var showRequisitionSubtype = $("#ddlBRSubTypeId");

                    $.ajax({
                        type: "GET",
                        url: "/Configuration/GetSubCategoryByCategoryId",
                        dataType: "json",
                        data: { id: getRequisitionTypeId },
                        success: function (data) {
                            showRequisitionSubtype.empty();
                            showRequisitionSubtype.append("<option selected disabled>==Select Material Subtype==</option>");

                            $.each(data, function (index, item) {
                                showRequisitionSubtype.append($('<option>', {
                                    value: item.ProductSubCategoryId,
                                    text: item.Name
                                }));
                            });
                            showRequisitionSubtype.val($('#materialSubtypeIdHidden_' + dataId).val()).trigger('change');
                        }
                    });
                }
            }
            showSubtype(id);

            // show boq
            function showMaterial(dataId) {
                if (dataId > 0) {
                    var materialSubtypeId = $('#materialSubtypeIdHidden_' + dataId).val();
                    var showBoqMaterialList = $("#ddlMaterialItemId");

                    $.ajax({
                        type: "GET",
                        url: "/BillRequisition/getBoqMaterialListForOverHead",
                        dataType: "json",
                        data: { id: materialSubtypeId },
                        success: function (data) {
                            showBoqMaterialList.empty();
                            showBoqMaterialList.append("<option selected disabled>==Select Material==</option>");

                            $.each(data, function (index, item) {
                                showBoqMaterialList.append($('<option>', {
                                    value: item.ProductId,
                                    text: item.ProductName
                                }));
                            });
                            showBoqMaterialList.val($('#materialIdHidden_' + dataId).val()).trigger('change');
                        }
                    });
                }
            }
            showMaterial(id);

            window.scrollTo({ top: 0, behavior: 'smooth' });

            isEditble = true;
        }

        $("#projectTypeId").on('change', function () {
            if (!isEditble && !SavedData) {
                var getProjectTypeId = $("#projectTypeId").val();
                var showProjectList = $("#ddlProjectId");

                $.ajax({
                    type: "GET",
                    url: "/BillRequisition/GetProjectList",
                    dataType: "json",
                    data: { id: getProjectTypeId },
                    success: function (data) {
                        showProjectList.empty();
                        showProjectList.append("<option selected disabled>==Select Project==</option>");

                        $.each(data, function (index, item) {
                            showProjectList.append($('<option>', {
                                value: item.CostCenterId,
                                text: item.Name
                            }));
                        });
                    }
                });
            }
        })

        $("#ddlProjectId").on('change', function () {
            if (!isEditble && !SavedData) {
                var getProjectId = $("#ddlProjectId").val();
                var showBoqDivisionList = $("#ddlBoQDivisionId");
                $.ajax({
                    type: "GET",
                    url: "/BillRequisition/getBoqDivisionList",
                    dataType: "json",
                    data: { id: getProjectId },
                    success: function (data) {
                        showBoqDivisionList.empty();
                        showBoqDivisionList.append("<option selected disabled>==Select BoQ Division==</option>");

                        $.each(data, function (index, item) {
                            showBoqDivisionList.append($('<option>', {
                                value: item.BoqDivisionId,
                                text: item.Name
                            }));
                        });
                    }
                });
            }
        })

        $("#ddlBoQDivisionId").on('change', function () {
            if (!isEditble && !SavedData) {
                var getBoqDivisionId = $("#ddlBoQDivisionId").val();
                var showBoqItemList = $("#ddlBoQItemId");

                $.ajax({
                    type: "GET",
                    //url: "/BillRequisition/getBoqItemList",
                    url: "/BillRequisition/getBoqItemListWithBoqNumber",
                    dataType: "json",
                    data: { id: getBoqDivisionId },
                    success: function (data) {
                        showBoqItemList.empty();
                        showBoqItemList.append("<option selected disabled>==Select BoQ Item==</option>");

                        $.each(data, function (index, item) {
                            showBoqItemList.append($('<option>', {
                                value: item.BoQItemId,
                                text: item.Name
                            }));
                        });
                    }
                });
            }
        })

        $("#ddlBRTypeId").on('change', function () {
            if (!isEditble) {
                var getRequisitionTypeId = $("#ddlBRTypeId").val();
                var showRequisitionSubtype = $("#ddlBRSubTypeId");

                $.ajax({
                    type: "GET",
                    url: "/Configuration/GetSubCategoryByCategoryId",
                    dataType: "json",
                    data: { id: getRequisitionTypeId },
                    success: function (data) {
                        showRequisitionSubtype.empty();
                        showRequisitionSubtype.append("<option selected disabled>==Select Material Subtype==</option>");

                        $.each(data, function (index, item) {
                            showRequisitionSubtype.append($('<option>', {
                                value: item.ProductSubCategoryId,
                                text: item.Name
                            }));
                        });
                    }
                });
            }
        })

        $("#ddlBRSubTypeId").on('change', function () {
            if (!isEditble) {
                var materialSubtypeId = $("#ddlBRSubTypeId").val();
                var showBoqMaterialList = $("#ddlMaterialItemId");
                $.ajax({
                    type: "GET",
                    url: "/BillRequisition/getBoqMaterialListForOverHead",
                    dataType: "json",
                    data: { id: materialSubtypeId },
                    success: function (data) {
                        showBoqMaterialList.empty();
                        showBoqMaterialList.append("<option selected disabled>==Select Material==</option>");

                        $.each(data, function (index, item) {
                            showBoqMaterialList.append($('<option>', {
                                value: item.ProductId,
                                text: item.ProductName
                            }));
                        });
                    }
                });
            }
        })

        $("#ddlMaterialItemId").on('change', function (event) {
            if (!isEditble) {
                var boqItemId = $("#ddlBoQItemId").val();
                var materialId = $("#ddlMaterialItemId").val();
                if (boqItemId != null && materialId != null) {
                    $.ajax({
                        type: "GET",
                        url: "/BillRequisition/CheckBoqBudget",
                        dataType: "json",
                        data: { boqItemId: boqItemId, materialId: materialId },
                        success: function (data) {
                            if (data) {
                                $("#errorMessage").text("This Material has been already budgeted!");
                                $("#btnSave").prop("disabled", true);
                            } else {
                                $("#errorMessage").text("");
                                $("#btnSave").prop("disabled", false);
                            }
                        }
                    });
                }
            }
        })

        function resetForm() {
            var form = $("#BillRequisitionItemBoQMapFormId");
            $("#projectTypeId").append("<option selected disabled>==Select Project Type==</option>");
            $("#ddlProjectId").empty().append("<option selected disabled>==Select Project==</option>");
            $("#ddlBoQDivisionId").empty().append("<option selected disabled>==Select BoQ Division==</option>");
            $("#ddlBoQItemId").empty().append("<option selected disabled>==Select BoQ Item==</option>");
            $("#ddlBRTypeId").append("<option selected disabled>==Select Material Type==</option>");
            $("#ddlBRSubTypeId").empty().append("<option selected disabled>==Select Material Subtype==</option>");
            $("#ddlMaterialItemId").empty().append("<option selected disabled>==Select Material==</option>");

            form.find(':input').each(function () {
                switch (this.type.toLowerCase()) {
                    case "text":
                    case "password":
                    case "textarea":
                    case "hidden":
                        $(this).val("");
                        break;
                    default:
                        break;
                }
            });

            isEditble = false;
            SavedData = false;
        }
    </script>
}