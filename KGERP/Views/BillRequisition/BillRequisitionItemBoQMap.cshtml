@model KGERP.Service.ServiceModel.BillRequisitionItemBoQMapModel
@{
    ViewData["Title"] = "Bill of Quotation";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">
    input, select, textarea {
        max-width: 100%;
    }
</style>
<section class="content-header">
    <h1>
        Bill of Quotation
    </h1>
    <ol class="breadcrumb">
        <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i>Dashboard</a></li>
        <li class="active">Requisition BOQ</li>
    </ol>
</section>

@using (Html.BeginForm("BillRequisitionItemBoQMap", "BillRequisition", FormMethod.Post, new { id = "BillRequisitionItemBoQMapFormId", @class = "formValidator", onreset = "resetDDL();" }))
{
    <section class="content">
        <div class="row">
            <div class="box">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="box-danger">
                    <div class="box-body row">
                        @Html.HiddenFor(model => model.ID, new { Value = "", id = "BoQItemMapId" })
                        @Html.HiddenFor(model => model.ActionId, new { Value = "", id = "ActionId" })
                        @Html.HiddenFor(model => model.CompanyFK, new { id = "CompanyFK" })

                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Select Project Type :</label>
                                @Html.DropDownListFor(model => model.BoQItemId, new SelectList(Model.ProjectTypes, "CostCenterTypeId", "Name"), "=== Select Project Type ===", new { id = "ddlCostCenterTypeId", onchange = "getProjectList()", @class = "form-control searchingDropdown", style = "width:100%" })
                                @Html.ValidationMessageFor(model => model.BoQItemId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Select Project:</label>
                                @Html.DropDownListFor(model => model.BillRequisitionItemId, new SelectList(Model.Projects, "CostCenterId", "Name"), "=== Select Project ===", new { id = "ddlCostCenterId", onchange = "getBoQList()", @class = "form-control searchingDropdown", style = "width:100%" })
                                @Html.ValidationMessageFor(model => model.BillRequisitionItemId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Select BoQ :</label>
                                @Html.DropDownListFor(model => model.BoQItemId, new SelectList(Model.BillBoQItems, "BoQItemId", "Name"), "=== Select BoQ ===", new { id = "ddlBoQId", onchange = "getItemList()", @class = "form-control searchingDropdown", style = "width:100%" })
                                @Html.ValidationMessageFor(model => model.BoQItemId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Select Item/Material :</label>
                                @Html.DropDownListFor(model => model.BillRequisitionItemId, new SelectList(Model.Products, "ProductId", "ProductName"), "=== Select Item/Material ===", new { id = "ddItemId", @class = "form-control searchingDropdown", style = "width:100%" })
                                @Html.ValidationMessageFor(model => model.BillRequisitionItemId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group">
                                <label asp-for="Name" class="form-control-label">BoQ Quantity:</label>
                                @Html.TextBoxFor(model => model.EstimateQuantity, new { id = "txtRequisitionBoqQuantity", @class = "form-control", @placeholder = "BoQ Quantity", required = "true" })
                                @Html.ValidationMessageFor(model => model.EstimateQuantity, "", new { id = "nameExist", @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group">
                                <label asp-for="Name" class="form-control-label">BoQ Amount:</label>
                                @Html.TextBoxFor(model => model.EstimateAmount, new { id = "txtRequisitionBoqAmount", @class = "form-control", @placeholder = "BoQ Amount", required = "true" })
                                @Html.ValidationMessageFor(model => model.EstimateAmount, "", new { id = "nameExist", @class = "text-danger" })
                            </div>
                        </div>


                        <div class="col-md-12">
                            <div class="form-group">
                                <div class="col-md-6">
                                    <button type="button" onclick="resetForm()" class="btn btn-secondary" data-dismiss="modal" style="width:100% !important">Reset</button>
                                </div>
                                <div class="col-md-6">
                                    <button type="submit" id="btnSave" class="btn btn-primary btn-block" style="width:100% !important"><i class='fa fa-edit'></i> Add</button>
                                </div>
                            </div>
                        </div>

                    </div>

                </div>
            </div>
        </div>
    </section>
}


<section class="content">
    <div class="row">
        <div class="box">
            <div class="box-danger">
                <div class="box-header">
                </div>
                <!-- /.box-header -->
                <div class="box-body">
                    <div class="table-responsive col-md-12">
                        <table id="KgErpDataTable" class="table table-striped">
                            <thead>
                                <tr>
                                    <th>SL</th>
                                    <th>Project Name</th>
                                    <th>BoQ Name</th>
                                    <th>Item/Material</th>
                                    <th class="text-center">Est. Quantity</th>
                                    <th class="text-center">Est. Amount</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            @{int sl = 0;}
                            <tbody>
                                @foreach (var item in Model.BoQItemProductMaps)
                                {
                                    <tr>
                                        <td>
                                            @(++sl)
                                            <input type="hidden" id="requisitionBoQ_@item.BoQItemId" name="BoQItemId" value="@item.BoQItemId" />
                                        </td>
                                        <td id="tdBoQItemName_@item.BoQItemId"></td>
                                        <td id="tdBoQName_@item.BoQItemId">@item.Name</td>
                                        <td id="tdBoQItemName_@item.BoQItemId"></td>
                                        <td id="tdEstimateQty_@item.BoQItemId" class="text-center"></td>
                                        <td id="tdEstimateAmount_@item.BoQItemId" class="text-center"></td>
                                        <td>
                                            <a id="@item.BoQItemId" onclick="makeEditble(this);" class="linkPointer" title="Edit"><i class="fa fa-pencil-square-o"></i></a>

                                            <a id="@item.BoQItemId" onclick="makeDeletable(@item.BoQItemId);" class="linkPointer" data-toggle="modal" data-target="#BillRequisitionBoQDeleteModal" title="Delete"
                                               data-placement="top">
                                                <i class="glyphicon glyphicon-trash" aria-hidden="true"></i>
                                            </a>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            @(++sl)
                                            <input type="hidden" id="requisitionBoQ_@item.BoQItemId" name="BoQItemId" value="@item.BoQItemId" />
                                        </td>
                                        <td id="tdBoQItemName_@item.BoQItemId"></td>
                                        <td id="tdBoQName_@item.BoQItemId">@item.Name</td>
                                        <td id="tdBoQItemName_@item.BoQItemId"></td>
                                        <td id="tdEstimateQty_@item.BoQItemId" class="text-center"></td>
                                        <td id="tdEstimateAmount_@item.BoQItemId" class="text-center"></td>
                                        <td>
                                            <a id="@item.BoQItemId" onclick="makeEditble(this);" class="linkPointer" title="Edit"><i class="fa fa-pencil-square-o"></i></a>

                                            <a id="@item.BoQItemId" onclick="makeDeletable(@item.BoQItemId);" class="linkPointer" data-toggle="modal" data-target="#BillRequisitionBoQDeleteModal" title="Delete"
                                               data-placement="top">
                                                <i class="glyphicon glyphicon-trash" aria-hidden="true"></i>
                                            </a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@using (Html.BeginForm("BillRequisitionItemBoQMap", "BillRequisition", FormMethod.Post, new { id = "BillRequisitionItemBoQMapFormId", @class = "formValidator", onreset = "resetDDL();" }))
{
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    @Html.HiddenFor(model => model.BoQItemId, new { Value = "", id = "BillRequisitionBoQDelete" })
    @Html.HiddenFor(model => model.ActionId, new { Value = "", id = "ActionIdDelete" })
    @Html.HiddenFor(model => model.CompanyFK, new { id = "CompanyFKDelete" })

    <div class="modal fade" id="BillRequisitionBoQDeleteModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" onclick="resetForm()" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b>Bill of Quotattion Delete</b></h5>

                </div>
                <div class="modal-body">
                    <div style="text-align:center">
                        <h3>Are you sure to delete?</h3>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" id="btnClose" onclick="resetForm()" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" id="btnDelete" class="deleteId btn btn-primary"><i class="glyphicon glyphicon-check"></i> Confirm</button>
                </div>
            </div>
        </div>
    </div>
}

@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $('.formValidator').bootstrapValidator();
        });

        function getProjectList() {
            var getProjectId = $("#ddlCostCenterTypeId option:selected");
            var showprojectList = $("#ddlCostCenterId");

            $.ajax({
                type: "GET",
                url: "/BillRequisition/GetProjectList",
                dataType: "json",
                data: { id: getProjectId.val() },
                success: function (data) {
                    showprojectList.empty();
                    $.each(data, function (index, item) {
                        showprojectList.append($('<option>', {
                            value: item.CostCenterId,
                            text: item.Name
                        }));
                    });
                },
                error: function (error) {
                    console.error("Error in AJAX request:", error);
                }
            });
        }

        function getBoQList() {
            var getProjectId = $("#ddlCostCenterId option:selected");
            var showBoQList = $("#ddlBoQId");

            $.ajax({
                type: "GET",
                url: "/BillRequisition/GetBoQList",
                dataType: "json",
                data: { id: getProjectId.val() },
                success: function (data) {
                    showBoQList.empty();
                    $.each(data, function (index, item) {
                        showBoQList.append($('<option>', {
                            value: item.BoQItemId,
                            text: item.Name
                        }));
                    });
                },
                error: function (error) {
                    console.error("Error in AJAX request:", error);
                }
            });
        }

        function makeEditble(elem) {
            if (elem !== null) {
                var rowId = elem.id;
                $('#BoQItemMapId').val(rowId);
                $('#ActionId').val(2);
                $('#btnSave').html("<i class='fa fa-edit'></i>&nbsp;Update");
                $('#txtRequisitionBoqName').val($('#tdRequisitionBoQName_' + rowId).text().trim());
                $('#txtRequisitionBoqAmount').val($('#tdRequisitionBoQAmount_' + rowId).text().trim());
                $('#txtRequisitionBoqDescription').val($('#tdRequisitionBoQDescription_' + rowId).text().trim());
                $('#ddlCostCenterId').val($('#tdRequisitionBoQProjectName_' + rowId).val().trim()).trigger('change');
                window.scrollTo({ top: 0, behavior: 'smooth' });
            }
        }

        function makeDeletable(id) {
            if (id !== null) {
                $('#BillRequisitionBoQDelete').val(id);
                $('#ActionIdDelete').val(3);
                $("#CompanyFKDelete").val("@Model.CompanyFK");
            }
        }

        function resetForm() {
            $('#BillRequisitionItemBoQMapFormId')[0].reset();
            $('#btnSave').html("<i class='fa fa-edit'></i>&nbsp;Add");
        }
    </script>
}