@model KGERP.Service.ServiceModel.BillRequisitionItemBoQMapModel
@{
    ViewData["Title"] = "BoQ Budget & Estimating";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">
    input, select, textarea {
        max-width: 100%;
    }
</style>
<section class="content-header">
    <h1>
        BoQ Budget & Estimating
    </h1>
    <ol class="breadcrumb">
        <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i>Dashboard</a></li>
        <li class="active">BoQ Budget & Estimating</li>
    </ol>
</section>

@using (Html.BeginForm("BillRequisitionItemBoQMap", "BillRequisition", FormMethod.Post, new { id = "BillRequisitionItemBoQMapFormId", @class = "formValidator", onreset = "resetDDL();" }))
{
    <section class="content">
        <div class="row">
            <div class="box">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="box-danger">
                    <div class="box-body row">
                        @Html.HiddenFor(model => model.ID, new { Value = "", id = "BoQItemProductMapId" })
                        @Html.HiddenFor(model => model.ActionId, new { Value = "", id = "ActionId" })
                        @Html.HiddenFor(model => model.CompanyFK, new { id = "CompanyFK" })

                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Select Project Type :</label>
                                @Html.DropDownListFor(model => model.ProjectTypeId, new SelectList(Model.ProjectTypes.OrderBy(order => order.Name), "CostCenterTypeId", "Name"), "==Select Project Type==", new { id = "projectTypeId", onchange = "GetProjectListByProjectTypeId()", @class = "form-control searchingDropdown", style = "width:100%", required = "required" })
                                @Html.ValidationMessageFor(model => model.ProjectTypeId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label asp-for="ProjectId" class="form-control-label">Select Project :</label>
                                @Html.DropDownListFor(model => model.ProjectId, new SelectList(Model.Projects.OrderBy(order => order.Name), "CostCenterId", "Name"), "==Select Project Type First==", new { id = "ddlProjectId", onchange = "showDivision()", @class = "form-control searchingDropdown", style = "width:100%" })
                                @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label asp-for="BoQDivisionId" class="form-control-label">Select BoQ Division :</label>
                                @Html.DropDownListFor(model => model.BoQDivisionId, new SelectList(Model.BoQDivisions.OrderBy(order => order.Name), "BoQDivisionId", "Name"), "==Select Project First==", new { id = "ddlBoQDivisionId", onchange = "showBoQItem()", @class = "form-control searchingDropdown", style = "width:100%" })
                                @Html.ValidationMessageFor(model => model.BoQDivisionId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label asp-for="BoQItemId" class="form-control-label">Select BoQ Item :</label>
                                @Html.DropDownListFor(model => model.BoQItemId, new SelectList(Model.BoQItems.OrderBy(order => order.Name), "BoQItemId", "Name"), "==Select BoQ Division First==", new { id = "ddlBoQItemId", @class = "form-control searchingDropdown", style = "width:100%" })
                                @Html.ValidationMessageFor(model => model.BoQItemId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Select Material Type :</label>
                                @Html.DropDownListFor(model => model.BudgetTypeId, new SelectList(Model.BudgetTypes.OrderBy(order => order.Name), "ProductCategoryId", "Name"), "==Select Budget Type==", new { id = "ddlBRTypeId", onchange = "GetSubCategoryListByCategoryId()", @class = "form-control searchingDropdown", style = "width:100%", required = "required" })
                                @Html.ValidationMessageFor(model => model.BudgetTypeId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Select Material Subtype :</label>
                                @Html.DropDownListFor(model => model.BudgetSubtypeId, new SelectList(Model.BudgetSubtypes.OrderBy(order => order.Name), "ProductSubCategoryId", "Name"), "==Select Budget Type First==", new { id = "ddlBRSubTypeId", onchange = "ShowBoqMaterialListByReqSubtypeId()", @class = "form-control searchingDropdown", style = "width:100%", required = "required" })
                                @Html.ValidationMessageFor(model => model.BudgetSubtypeId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label asp-for="MaterialItemId" class="form-control-label">Select Material :</label>
                                @Html.DropDownListFor(model => model.MaterialItemId, new SelectList(Model.BoQMaterials.OrderBy(order => order.ProductName), "ProductId", "ProductName"), "==Select Budget Subtype First==", new { id = "ddlMaterialItemId", @class = "form-control searchingDropdown", })
                                @Html.ValidationMessageFor(model => model.MaterialItemId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label asp-for="EstimatedQty" class="form-control-label">Estimated Quantity :</label>
                                @Html.TextBoxFor(model => model.EstimatedQty, new { id = "txtEstimateQty", @class = "form-control", @placeholder = "BoQ Item Number", required = "true" })
                                @Html.ValidationMessageFor(model => model.EstimatedQty, "", new { id = "nameExist", @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label asp-for="UnitRate" class="form-control-label">Unit Price :</label>
                                @Html.TextBoxFor(model => model.UnitRate, new { id = "txtUnitRate", @class = "form-control", @placeholder = "BoQ Item Number", required = "true" })
                                @Html.ValidationMessageFor(model => model.UnitRate, "", new { id = "nameExist", @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-12">
                            <div class="form-group">
                                <div class="col-md-6">
                                    <button type="button" onclick="resetForm()" class="btn btn-secondary" data-dismiss="modal" style="width:100% !important">Reset</button>
                                </div>
                                <div class="col-md-6">
                                    <button type="submit" id="btnSave" class="btn btn-primary btn-block" style="width:100% !important"><i class='fa fa-edit'></i> Add</button>
                                </div>
                            </div>
                        </div>

                    </div>

                </div>
            </div>
        </div>
    </section>
}


<section class="content">
    <div class="row">
        <div class="box">
            <div class="box-danger">
                <div class="box-header">
                </div>
                <!-- /.box-header -->
                <div class="box-body">
                    <div class="table-responsive col-md-12">
                        <table id="KgErpDataTable" class="table table-dark table-responsive">
                            <thead>
                                <tr>
                                    <th>SL</th>
                                    <th>BoQ Division</th>
                                    <th>BoQ Name</th>
                                    <th>Material Type</th>
                                    <th>Material Subtype</th>
                                    <th>Material </th>
                                    <th>Est. Quantity</th>
                                    <th>Unit Price</th>
                                    <th>Est. Amount</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            @{int sl = 0;}
                            <tbody>
                                @{
                                    if (Model.BoQItemProductMaps != null)
                                    {
                                        foreach (var item in Model.BoQItemProductMaps)
                                        {
                                            <tr>
                                                <td>
                                                    @(++sl)

                                                    <input type="hidden" id="project_@item.BoQItemProductMapId" value="@item.ProjectId" />
                                                    <input type="hidden" id="division_@item.BoQItemProductMapId" value="@item.BoQDivisionId" />
                                                    <input type="hidden" id="boqItem_@item.BoQItemProductMapId" value="@item.BoQItemId" />
                                                    <input type="hidden" id="material_@item.BoQItemProductMapId" value="@item.MaterialItemId" />
                                                    <input type="hidden" id="Quantity_@item.BoQItemProductMapId" value="@item.EstimatedQty" />
                                                    <input type="hidden" id="UnitRate_@item.BoQItemProductMapId" value="@item.UnitRate" />
                                                    <input type="hidden" id="MterialType_@item.BoQItemProductMapId" value="@item.BudgetTypeId" />
                                                    <input type="hidden" id="MaterialSubtype_@item.BoQItemProductMapId" value="@item.BudgetSubtypeId" />
                                                </td>
                                                <td id="tdBoqDivisionName_@item.BoQItemProductMapId">@item.DivisionName</td>
                                                <td id="tdBoqItemNo_@item.BoQItemProductMapId"><small class="label label-primary">@item.BoqNumber</small> @item.BoqName</td>
                                                <td id="tdBoqMaterialName_@item.BoQItemProductMapId">@item.MaterialTypeName</td>
                                                <td id="tdBoqMaterialName_@item.BoQItemProductMapId">@item.MaterialSubtypeName</td>
                                                <td id="tdBoqMaterialName_@item.BoQItemProductMapId">@item.MaterialName</td>
                                                <td id="tdBoqEstimateQty_@item.BoQItemProductMapId">@item.EstimatedQty</td>
                                                <td id="tdBoqUnitRate_@item.BoQItemProductMapId">@item.UnitRate</td>
                                                <td id="tdBoqEstimateAmount_@item.BoQItemProductMapId">@item.EstimatedAmount</td>
                                                <td>
                                                    <a id="@item.BoQItemProductMapId" onclick="makeEditble(this);" class="linkPointer" title="Edit"><i class="fa fa-pencil-square-o"></i></a>

                                                    <a id="@item.BoQItemProductMapId" onclick="makeDeletable(@item.BoQItemProductMapId);" class="linkPointer" data-toggle="modal" data-target="#BillRequisitionBoQMapModelDeleteModal" title="Delete"
                                                       data-placement="top">
                                                        <i class="glyphicon glyphicon-trash" aria-hidden="true"></i>
                                                    </a>
                                                </td>
                                            </tr>
                                        }
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@using (Html.BeginForm("BillRequisitionItemBoQMap", "BillRequisition", FormMethod.Post, new { id = "BillRequisitionItemBoQMapFormId", @class = "formValidator", onreset = "resetDDL();" }))
{
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    @Html.HiddenFor(model => model.BoQItemProductMapId, new { Value = "", id = "BoQItemProductMapIdDelete" })
    @Html.HiddenFor(model => model.ActionId, new { Value = "", id = "ActionIdDelete" })
    @Html.HiddenFor(model => model.CompanyFK, new { id = "CompanyFKDelete" })

    <div class="modal fade" id="BillRequisitionBoQMapModelDeleteModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" onclick="resetForm()" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b>BoQ Material Map Delete</b></h5>

                </div>
                <div class="modal-body">
                    <div style="text-align:center">
                        <h3>Are you sure to delete?</h3>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" id="btnClose" onclick="resetForm()" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" id="btnDelete" class="deleteId btn btn-primary"><i class="glyphicon glyphicon-check"></i> Confirm</button>
                </div>
            </div>
        </div>
    </div>
}

@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            'use strict';

            $("#ddlProjectId").empty();
            $("#ddlProjectId").append("<option selected disabled>==Select Project Type First==</option>");

            $("#ddlBoQDivisionId").empty();
            $("#ddlBoQDivisionId").append("<option selected disabled>===Select Project First===</option>");

            $("#ddlBoQItemId").empty();
            $("#ddlBoQItemId").append("<option selected disabled>==Select BoQ Division First==</option>");

            $("#ddlBRSubTypeId").empty();
            $("#ddlBRSubTypeId").append("<option selected disabled>==Select Budget Subtype First==</option>");

            $("#ddlMaterialItemId").empty();
            $("#ddlMaterialItemId").append("<option selected disabled>==Select Budget Subtype First==</option>");

            $('.formValidator').bootstrapValidator();
        });

        function makeEditble(elem) {
            if (elem !== null) {
                var rowId = elem.id;
                $('#BoQItemProductMapId').val(rowId);
                $('#ActionId').val(2);
                $('#btnSave').html("<i class='fa fa-edit'></i>&nbsp;Update");
                $('#ddlProjectId').val($('#project_' + rowId).val().trim()).trigger('change');
                showDivision(rowId);
                $('#ddlBoQDivisionId').val($('#division_' + rowId).val().trim()).trigger('change');
                showBoQItem(rowId);
                $('#ddlBoQItemId').val($('#boqItem_' + rowId).val().trim()).trigger('change');
                $('#ddlMaterialItemId').val($('#material_' + rowId).val().trim()).trigger('change');
                $('#txtEstimateQty').val($('#Quantity_' + rowId).val().trim());
                $('#txtUnitRate').val($('#UnitRate_' + rowId).val().trim());
                window.scrollTo({ top: 0, behavior: 'smooth' });
            }
        }

        function makeDeletable(id) {
            if (id !== null) {
                $('#BoQItemProductMapIdDelete').val(id);
                $('#ActionIdDelete').val(3);
                $("#CompanyFKDelete").val("@Model.CompanyFK");
            }
        }

        function resetForm() {
            $('#BillRequisitionItemBoQMapFormId')[0].reset();
            $('#btnSave').html("<i class='fa fa-edit'></i>&nbsp;Add");
        }

        // get project list by project type id
        function GetProjectListByProjectTypeId() {
            var getProjectTypeId = $("#projectTypeId option:selected");
            var showProjectList = $("#ddlProjectId");

            $.ajax({
                type: "GET",
                url: "/BillRequisition/GetProjectList",
                dataType: "json",
                data: { id: getProjectTypeId.val() },
                success: function (data) {
                    showProjectList.empty();
                    showProjectList.append("<option selected disabled>==Select Project==</option>");

                    $.each(data, function (index, item) {
                        showProjectList.append($('<option>', {
                            value: item.CostCenterId,
                            text: item.Name
                        }));
                    });
                },
                error: function (error) {
                    console.error("Error in AJAX request:", error);
                }
            });
        }

        // get division list
        function showDivision(rowId) {
            var getProjectId = $("#ddlProjectId option:selected");
            var showBoqDivisionList = $("#ddlBoQDivisionId");
            $.ajax({
                type: "GET",
                url: "/BillRequisition/getBoqDivisionList",
                dataType: "json",
                data: { id: getProjectId.val() },
                success: function (data) {
                    showBoqDivisionList.empty();
                    showBoqDivisionList.append("<option selected disabled>==Select BoQ Division==</option>");

                    $.each(data, function (index, item) {
                        showBoqDivisionList.append($('<option>', {
                            value: item.BoQDivisionId,
                            text: item.Name
                        }));
                    });
                },
                error: function (error) {
                    console.error("Error in AJAX request:", error);
                }
            });
        }

        // get boq item by bod division id
        function showBoQItem(rowId) {
            var getBoqDivisionId = $("#ddlBoQDivisionId option:selected");
            var showBoqItemList = $("#ddlBoQItemId");

            $.ajax({
                type: "GET",
                //url: "/BillRequisition/getBoqItemList",
                url: "/BillRequisition/getBoqItemListWithBoqNumber",
                dataType: "json",
                data: { id: getBoqDivisionId.val() },
                success: function (data) {
                    showBoqItemList.empty();
                    showBoqItemList.append("<option selected disabled>==Select BoQ Item==</option>");

                    $.each(data, function (index, item) {
                        showBoqItemList.append($('<option>', {
                            value: item.BoQItemId,
                            text: item.Name
                        }));
                    });
                },
                error: function (error) {
                    console.error("Error in AJAX request:", error);
                }
            });
        }

        // get budgte subtype by budget type id
        function GetSubCategoryListByCategoryId() {
            var getRequisitionTypeId = $("#ddlBRTypeId option:selected");
            var showRequisitionSubtype = $("#ddlBRSubTypeId");

            $.ajax({
                type: "GET",
                url: "/Configuration/GetSubCategoryByCategoryId",
                dataType: "json",
                data: { id: getRequisitionTypeId.val() },
                success: function (data) {
                    showRequisitionSubtype.empty();
                    showRequisitionSubtype.append("<option selected disabled>==Select Budget Subtype==</option>");

                    $.each(data, function (index, item) {
                        showRequisitionSubtype.append($('<option>', {
                            value: item.ProductSubCategoryId,
                            text: item.Name
                        }));
                    });
                },
                error: function (error) {
                    console.error("Error in AJAX request:", error);
                }
            });
        }

        // get material by budget subtype id
        function ShowBoqMaterialListByReqSubtypeId() {
            var RequisitionSubtype = $("#ddlBRSubTypeId option:selected");
            var showBoqMaterialList = $("#ddlMaterialItemId");
            $.ajax({
                type: "GET",
                url: "/BillRequisition/getBoqMaterialListForOverHead",
                dataType: "json",
                data: { id: RequisitionSubtype.val() },
                success: function (data) {
                    showBoqMaterialList.empty();
                    showBoqMaterialList.append("<option selected disabled>==Select Material/Item==</option>");

                    $.each(data, function (index, item) {
                        showBoqMaterialList.append($('<option>', {
                            value: item.ProductId,
                            text: item.ProductName
                        }));
                    });
                }
            });
        }

    </script>
}