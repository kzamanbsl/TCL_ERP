@model KGERP.Service.ServiceModel.BillRequisitionMasterModel
@using KGERP.Utility;

@{
    ViewData["Title"] = "Requisition List (Self)";
    Layout = "~/Views/Shared/_Layout.cshtml";

    int sl = 0;
}

<style type="text/css">
    input, select, textarea {
        max-width: 100%;
    }
</style>

<section class="content-header">
    <h1>
        <span>
            Requisition List
        </span>

    </h1>
    <ol class="breadcrumb">
        <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i>Dashboard</a></li>
        <li class="active">
            <span>
                Requisition List (Self)
            </span>
        </li>
    </ol>
</section>

<section class="content">
    <div class="row">
        <div class="col-md-12">
            <div class="box">
                <div class="box-danger">
                    <div class="box-body">
                        @using (Html.BeginForm("BillRequisitionMasterSearch", "BillRequisition", FormMethod.Post, new { id = "BRMasterListFormId", @class = "formValidator" }))
                        {
                            @Html.HiddenFor(model => model.CompanyFK, new { id = "CompanyId" })

                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.Label("Status:", htmlAttributes: new { @class = "control-label" })
                                        <br />
                                        @Html.DropDownListFor(model => model.StatusId, Model.EnumBRStatusList as SelectList, "==Select Status==", new { id = "ddlStatusEnumFK", @class = "form-control ddlReset searchingDropdown", style = "width:100%", required = "required" })
                                        @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.Label("From Date:", htmlAttributes: new { @class = "control-label" })
                                        <br />
                                        @Html.EditorFor(model => model.StrFromDate, new { htmlAttributes = new { @class = "datepicker", @autocomplete = "off" } })
                                        @Html.ValidationMessageFor(model => model.StrFromDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.Label("To Date:", htmlAttributes: new { @class = "control-label" })
                                        <br />
                                        @Html.EditorFor(model => model.StrToDate, new { htmlAttributes = new { @class = "datepicker", @autocomplete = "off" } })
                                        @Html.ValidationMessageFor(model => model.StrToDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-3" style="padding: 0px 2px 0px 8px;">
                                    <div class="form-group">
                                        <label>&nbsp;</label>
                                        <button type="submit" id="btnSave" class="btn btn-primary btn-block">Show</button>
                                    </div>
                                </div>
                            </div>
                        }

                        <hr />

                        <div class="table-responsive">
                            <table id="KgErpDataTable" class="table table-striped table-dark table-responsive">
                                <thead>
                                    <tr>
                                        <th width="3%">SL</th>
                                        <th width="10%">Date</th>
                                        <th width="16%">Requisition No</th>
                                        <th width="15%">Requisition Type</th>
                                        <th width="25%">Project Name</th>
                                        <th width="8%">Amount</th>
                                        <th width="10%">Status</th>
                                        <th width="8%">Action</th>
                                        <th width="5%">Report</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.DataList)
                                    {
                                        #region Link Title

                                        string statusTitle = "";

                                        if (item.StatusId == EnumBillRequisitionStatus.Draft)
                                        { statusTitle = "Make Submit"; }

                                        if (item.StatusId == EnumBillRequisitionStatus.Submitted)
                                        { statusTitle = "Undo Submit"; }

                                        #endregion

                                        <tr>
                                            <th>@(++sl)</th>
                                            <td>@item.BRDate.ToString("dd-MM-yyyy")</td>
                                            <td>
                                                <a class="text-primary" target="_blank" href="~/Report/TCLBillRequisiontReport?companyId=@item.CompanyFK&billRequisitionMasterId=@item.BillRequisitionMasterId">
                                                    @item.BillRequisitionNo
                                                </a>
                                            </td>
                                            <td>@item.BRTypeName</td>
                                            <td>@item.CostCenterName</td>
                                            <td>@String.Format("{0:0.00}", item.TotalAmount)</td>
                                            <td>
                                                @if (item.StatusId == EnumBillRequisitionStatus.Draft)
                                                {
                                                    <a id="@item.BillRequisitionMasterId" onclick="makeSubmitble(@item.BillRequisitionMasterId)" class="linkPointer" data-toggle="modal" data-target="#submitBillRequisitionMastermodal" title="@statusTitle" data-placement="top">
                                                        @if (item.StatusId == EnumBillRequisitionStatus.Submitted)
                                                        {
                                                            <span class="btn btn-xs btn-primary text-center" style="display: block; padding-left: 7px; padding-right: 7px;">Undo</span>
                                                        }
                                                        else
                                                        {
                                                            <span class="btn btn-xs btn-primary text-center" style="display: block; padding-left: 7px; padding-right: 7px;">Submit</span>
                                                        }
                                                    </a>
                                                }
                                                else
                                                {
                                                    var mdApproved = item.ApprovalModelList.First(x => x.BillRequisitionMasterId == item.BillRequisitionMasterId && x.SignatoryId == (int)EnumBRequisitionSignatory.MD);
                                                    if (mdApproved.IsSupremeApproved && mdApproved.AprrovalStatusId == (int)EnumBillRequisitionStatus.Approved)
                                                    {
                                                        <span class="btn btn-xs btn-success text-center" style="display: block; padding-left: 7px; padding-right: 7px;">Approved</span>
                                                    }
                                                    else
                                                    {
                                                        foreach (var approval in item.ApprovalModelList)
                                                        {

                                                            if (approval.AprrovalStatusId == (int)EnumBillRequisitionStatus.Pending)
                                                            {
                                                                <span class="btn btn-xs btn-warning text-center" style="display: block; padding-left: 7px; padding-right: 7px;"> @approval.AprrovalStatusName at  @approval.SignatoryName</span>

                                                                break;
                                                            }
                                                        }
                                                    }
                                                }
                                            </td>
                                            <td>
                                                @if (item.StatusId == EnumBillRequisitionStatus.Draft || item.StatusId == EnumBillRequisitionStatus.Submitted)
                                                {
                                                    if (item.StatusId == EnumBillRequisitionStatus.Draft)
                                                    {
                                                        <a id="@item.BillRequisitionMasterId" onclick="makeDeletale(@item.BillRequisitionMasterId)" data-toggle="modal" data-target="#deleteFoodCustomerOrderModal" data-placement="top" class="link-primary text-primary linkPointer" title="Action for Delete"><i class="fa fa-external-link-square" aria-hidden="true"></i> Action</a>
                                                    }
                                                    else
                                                    {
                                                        <a href="~/BillRequisition/BillRequisitionMasterSlave?companyId=@item.CompanyFK&billRequisitionMasterId=@item.BillRequisitionMasterId" class="link-primary text-warning" title="Action for Details"><i class="fa fa-external-link-square" aria-hidden="true"></i> Action</a>
                                                    }
                                                }
                                                else if (item.StatusId == EnumBillRequisitionStatus.Approved)
                                                {
                                                    <a href="~/BillRequisition/BillRequisitionMasterSlave?companyId=@item.CompanyFK&billRequisitionMasterId=@item.BillRequisitionMasterId" class="link-primary text-warning" title="Action for Details"><i class="fa fa-external-link-square" aria-hidden="true"></i> Action</a>
                                                }
                                                else
                                                {
                                                    <a href="~/BillRequisition/BillRequisitionMasterSlave?companyId=@item.CompanyFK&billRequisitionMasterId=@item.BillRequisitionMasterId" class="link-primary text-warning" title="Action for Details"><i class="fa fa-external-link-square" aria-hidden="true"></i> Action</a>
                                                }
                                            </td>
                                            <td>
                                                <a class="label label-primary text-center" target="_blank" href="~/Report/TCLBillRequisiontReport?companyId=@item.CompanyFK&billRequisitionMasterId=@item.BillRequisitionMasterId">
                                                    <i class="fa fa-download"></i> Download
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@using (Html.BeginForm("DeleteBillRequisitionMasterById", "BillRequisition", FormMethod.Post))
{
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="modal fade" id="deleteFoodCustomerOrderModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">

                <div class="modal-header">
                    <button type="button" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b>Delete item</b></h5>
                </div>

                <div class="modal-body">

                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    @Html.HiddenFor(model => model.BillRequisitionMasterId, new { id = "hidDeleteBRMasterId" })
                    @Html.HiddenFor(model => model.CompanyFK, new { id = "SOdeleteCompanyFK" })
                    @Html.HiddenFor(model => model.ActionId, new { id = "deleteActionId" })

                    <div style="text-align:center">
                        <h3>Are you sure to Delete this item?</h3>
                    </div>
                </div>

                <div class="modal-footer">
                    <div class="col-md-3">
                        <button type="button" onclick="resetDamageEditForm()" class="btn btn-warning fa fa-close" data-dismiss="modal">&nbsp;NO</button>
                    </div>
                    <div class="col-md-9">
                        <button type="submit" id="btnsave" style="width:100%" class="btn btn-primary fa fa-remove">&nbsp; Delete</button>
                    </div>
                </div>

            </div>
        </div>
    </div>
}


@using (Html.BeginForm("SubmitBillRequisitionMaster", "BillRequisition", FormMethod.Post))
{

    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="modal fade" id="submitBillRequisitionMastermodal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">

                <div class="modal-header">
                    <button type="button" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b><span class="submitOrDraftText"></span> Damage (<span id="submitOrDraftSOCIdText"></span>)</b></h5>
                </div>

                <div class="modal-body">
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    @Html.HiddenFor(model => model.BillRequisitionMasterId, new { id = "hidSubmitBRMasterId" })
                    @Html.HiddenFor(model => model.CompanyFK, new { id = "SOSubmitCompanyFK" })


                    <div style="text-align:center">
                        <h3>Are you sure to <span class="submitOrDraftText"></span> this item?</h3>
                    </div>
                </div>

                <div class="modal-footer">
                    <div class="col-md-3">
                        <button type="button" onclick="resetDamageEditForm()" class="btn btn-warning fa fa-close" data-dismiss="modal">&nbsp;NO</button>
                    </div>
                    <div class="col-md-9">
                        <button type="submit" id="btnSave" style="width:100%" class="btn btn-primary fa fa-check">&nbsp;<span class="submitOrDraftText"></span></button>
                    </div>
                </div>

            </div>
        </div>
    </div>
}


@Scripts.Render("~/bundles/jqueryui")
@Styles.Render("~/Content/cssjqryUi")

@section scripts {

    <script type="text/javascript">

        $('.datepicker').datepicker({
            dateFormat: "dd/mm/yy",
            showOn: 'both',
            buttonText: "<i class='fa fa-calendar'></i>",
            changeMonth: true,
            changeYear: true,
            yearRange: "2001:+50"
        });

      $(document).ready(function () {
          /*$("#ddlZoneFk").change(updateDropdowns);*/
      });

        function resetForm() {

            $('#dealerDamageEditForm')[0].reset();
                $('#DMEditActionId').val(1);
        }

        function makeCloseable(rowId, actionId) {

            $('#hidcloseReopenSaleOrderId').val(rowId);
            $('#hidcloseReopenActionId').val(actionId);

            if (actionId == "@((int)ActionEnum.Close)") {
                $('.closeReopenText').text("Close");
            }
            if (actionId == "@((int)ActionEnum.ReOpen)") {
                $('.closeReopenText').text("Reopen");
            }
        }

        function makeSubmitble(rowId) {

                $.ajax({
                        type: "POST",
                        url: "@Url.Action("GetBillRequisitionMasterById", "BillRequisition")",
                        datatype: "Json",
                    data: { BillRequisitionMasterId: rowId },
                    success: function (data) {

                            if (data.Status == 0) {
                                $('.submitOrDraftText').text("Make Draft");
                            }
                            else {
                                $('.submitOrDraftText').text("Make Submit");
                            }
                        }
                 });
                $('#hidSubmitBRMasterId').val(rowId);
            }

        function makeDeletale(rowId) {

            $('#hidDeleteBRMasterId').val(rowId);
                $('#deleteActionId').val(3);
        }

        function resetDamageEditForm() {

            $('#dealerDamageEditForm')[0].reset();
              $('#ActionId').val(1);
        }

        function DateCustom(orderDate) {

            var dateString = orderDate.substr(6);
            var currentTime = new Date(parseInt(dateString));
            var month = currentTime.getMonth() + 1;
            if (month < 10) {
                month = "0" + month;
            }

            var day = currentTime.getDate();
            var year = currentTime.getFullYear();
            var date = year + "-" + month + "-" + day;
            return date;
        }




    </script>
}

