@model KGERP.Service.ServiceModel.BillRequisitionMasterModel
@using KGERP.Utility;

@{
    ViewData["Title"] = "Requisition : QS Approval";
    Layout = "~/Views/Shared/_Layout.cshtml";

    int sl = 0;
}

<style type="text/css">
    input, select, textarea {
        max-width: 100%;
    }
</style>

<section class="content-header">
    <h1>
        <span>
            Requisition : QS Approval
        </span>
    </h1>
    <ol class="breadcrumb">
        <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i>Dashboard</a></li>
        <li class="active">QS Approval</li>
    </ol>
</section>

@using (Html.BeginForm("QSBRApproveSlave", "BillRequisition", FormMethod.Post, new { id = "QSBillRRSlaveReceiveFormId", @class = "formValidator" }))
{
    <section class="content">
        <div class="row">
            <div class="box">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.BillRequisitionMasterId, new { id = "hidbrMasterId" })
                @Html.HiddenFor(model => model.DetailModel.BillRequisitionDetailId, new { id = "hidDamageDetailId" })

                @Html.HiddenFor(model => model.ActionId, new { id = "ActionId" })
                @Html.HiddenFor(model => model.CompanyFK, new { id = "CompanyFK" })
                @Html.HiddenFor(model => model.ID, new { id = "hidSlaveID" })

                <div class="box-danger">

                    <div class="box-body">
                        @if (Model.BillRequisitionMasterId > 0)
                        {
                            <div class="row">
                                <div class="col-md-1"> </div>
                                <div class="col-md-10">
                                    <table class="table">
                                        <tr>
                                            <th style="width:17% !important">Requisition No</th>
                                            <th>:</th>
                                            <td>@Model.BillRequisitionNo</td>

                                            <th style="width:17% !important">Requisition Status</th>
                                            <th>:</th>
                                            <td>@Model.StatusName</td>
                                        </tr>
                                        <tr>
                                            <th style="width:17% !important">Requisition Date</th>
                                            <th>:</th>
                                            <td>@Model.BRDate.ToShortDateString()</td>

                                            <th style="width:17% !important">Requisition Type</th>
                                            <th>:</th>
                                            <td>@Model.BRTypeName</td>
                                        </tr>
                                        <tr>
                                            <th style="width:17% !important">Project Type</th>
                                            <th>:</th>
                                            <td>@Model.ProjectTypeName</td>

                                            <th style="width:17% !important">Project Name</th>
                                            <th>:</th>
                                            <td>@Model.CostCenterName</td>
                                        </tr>
                                        <tr>
                                            <th>
                                                @((Model.BillRequisitionTypeId == (int)EnumBillRequisitionType.Overhead)? "Item Description" : "Work Details")
                                            </th>
                                            <th>:</th>
                                            <td>@(Model.Description != null ? Model.Description : "N/A")</td>

                                            <th>Created By</th>
                                            <th>:</th>
                                            <td>@Model.EmployeeName</td>
                                        </tr>
                                    </table>
                                </div>
                                <div class="col-md-1"> </div>
                            </div>

                            <div class="row">
                                <div class="">

                                    <h4 class="text-primary" style="margin: 20px 0 5px;">
                                        <strong>
                                            Requisition Item List:
                                        </strong>
                                    </h4>

                                    <table id="itemTable" class="table table-bordered table-striped table-responsive">
                                        <thead>
                                            <tr class="bg-gray">
                                                <th class="text-center">SL</th>
                                                @if (Model.BillRequisitionTypeId != (int)EnumBillRequisitionType.Overhead)
                                                {
                                                    <th class="text-center">Division Name</th>
                                                    <th class="text-center">BoQ Number</th>
                                                    <th class="text-center">BoQ Name</th>
                                                }
                                                <th class="text-center">Req. For</th>
                                                <th class="text-center">@((Model.BillRequisitionTypeId == (int)EnumBillRequisitionType.Overhead)? "Item" : "Material")</th>
                                                <th class="text-center">Unit</th>
                                                <th class="text-center">Remarks/Particular</th>
                                                @if (Model.BillRequisitionTypeId != (int)EnumBillRequisitionType.Overhead)
                                                {
                                                    <th class="text-center">Estimated</th>
                                                }
                                                <th class="text-center">Recieved</th>
                                                @if (Model.BillRequisitionTypeId != (int)EnumBillRequisitionType.Overhead)
                                                {
                                                    <th>Remaining</th>
                                                }
                                                <th class="text-center">Demand</th>
                                                @if (Model.BillRequisitionTypeId != (int)EnumBillRequisitionType.Overhead)
                                                {
                                                    <th>Available</th>
                                                }
                                                <th class="text-center">Unit Price</th>
                                                <th class="text-center">Total</th>
                                            </tr>
                                        </thead>

                                        <tbody>
                                            @{
                                                int i = 0;
                                            }
                                            @foreach (var item in Model.DetailDataList)
                                            {
                                                <tr>
                                                    <td class="text-center">
                                                        @Html.HiddenFor(model => model.DetailDataList[i].BillRequisitionMasterId)
                                                        @Html.HiddenFor(model => model.DetailDataList[i].BillRequisitionDetailId)
                                                        @(++sl)
                                                    </td>
                                                    @if (Model.BillRequisitionTypeId != (int)EnumBillRequisitionType.Overhead)
                                                    {
                                                        <td>@item.BoqDivisionName</td>
                                                        <td class="text-center">@item.BoqNumber</td>
                                                        <td class="text-center">@item.BoqItemName</td>
                                                    }
                                                    <td>@item.RequisitionSubtypeName</td>
                                                    <td>@item.ProductName</td>
                                                    <td>@item.UnitName</td>
                                                    <td>@(item.Remarks != null ? item.Remarks : "N/A")</td>
                                                    @if (Model.BillRequisitionTypeId != (int)EnumBillRequisitionType.Overhead)
                                                    {
                                                        <td class="text-center">@String.Format("{0:0.00}", item.EstimatedQty)</td>
                                                    }
                                                    <td class="text-center">@String.Format("{0:0.00}", item.ReceivedSoFar)</td>
                                                    @if (Model.BillRequisitionTypeId != (int)EnumBillRequisitionType.Overhead)
                                                    {
                                                        <td class="text-center">@String.Format("{0:0.00}", item.RemainingQty)</td>
                                                    }
                                                    <td class="text-center">
                                                        @if (Model.StatusName == EnumBillRequisitionStatus.Pending.ToString() && Model.ApprovalModelList.First(x => x.SignatoryId == (int)EnumBRequisitionSignatory.QS).AprrovalStatusId == (int)EnumBillRequisitionStatus.Pending)
                                                        {
                                                            @Html.TextBoxFor(model => model.DetailDataList[i].DemandQty, new { value = "0", @class = "form-control demandValue", required = "true" })
                                                            @Html.ValidationMessageFor(model => model.DetailDataList[i].DemandQty, "", new { @class = "text-danger" })
                                                            <small class="text-center text-danger errorDemand"></small>
                                                        }
                                                        else
                                                        {
                                                            @String.Format("{0:0.00}", item.DemandQty)
                                                        }
                                                    </td>
                                                    @if (Model.BillRequisitionTypeId != (int)EnumBillRequisitionType.Overhead)
                                                    {
                                                        <td class="text-center availableValue">
                                                            @String.Format("{0:0.00}", item.RemainingQty - item.DemandQty)
                                                        </td>
                                                    }
                                                    <td class="text-center">
                                                        @if (Model.StatusName == EnumBillRequisitionStatus.Pending.ToString() && Model.ApprovalModelList.First(x => x.SignatoryId == (int)EnumBRequisitionSignatory.QS).AprrovalStatusId == (int)EnumBillRequisitionStatus.Pending)
                                                        {
                                                            @Html.TextBoxFor(model => model.DetailDataList[i].UnitRate, new { value = "0", @class = "form-control unitValue", required = "true" })
                                                            @Html.ValidationMessageFor(model => model.DetailDataList[i].UnitRate, "", new { @class = "text-danger" })
                                                            <small class="text-center text-danger errorUnit"></small>
                                                        }
                                                        else
                                                        {
                                                            @String.Format("{0:0.00}", item.UnitRate)
                                                        }
                                                    </td>
                                                    <td class="totalValue text-center" style="text-align: right !important" id="totalAmount_+@i">@String.Format("{0:0.00}", item.TotalPrice)</td>
                                                </tr>
                                                i++;
                                            }
                                        </tbody>

                                        <tfoot>
                                            <tr>
                                                @if (Model.BillRequisitionTypeId == (int)EnumBillRequisitionType.Overhead)
                                                {
                                                    <td colspan="8" style="text-align: right !important">
                                                        <b>Total Amount : </b>
                                                    </td>
                                                    <td id="totalFooter" colspan="2" style="text-align: right !important">
                                                        <span id="showTotalValue"></span>
                                                    </td>
                                                }
                                                else
                                                {
                                                    <td colspan="14" style="text-align: right !important">
                                                        <b>Total Amount : </b>
                                                    </td>
                                                    <td id="totalFooter" colspan="2" style="text-align: right !important">
                                                        <span id="showTotalValue"></span>
                                                    </td>
                                                }
                                            </tr>
                                        </tfoot>
                                    </table>

                                    <h4 class="text-primary" style="margin: 20px 0 5px;">
                                        <strong>
                                            Requisition Approval Status:
                                        </strong>
                                    </h4>

                                    <table class="table table-bordered table-striped table-responsive">
                                        <tr class="bg-gray">
                                            @foreach (var item in Model.ApprovalModelList)
                                            {
                                                <th style="padding:5px;text-align:center;">
                                                    @((item.SignatoryName == "PM") ? "PM/Checker" : (item.SignatoryName == "QS") ? "QS/Engr./HOD" : (item.SignatoryName == "PD") ? "PD/CE" : item.SignatoryName)
                                                </th>
                                            }
                                        </tr>
                                        <tr>
                                            @foreach (var item in Model.ApprovalModelList)
                                            {
                                                if (item.AprrovalStatusId == (int)EnumBillRequisitionStatus.Pending)
                                                {
                                                    <td style="text-align:center">
                                                        <span class="btn btn-warning btn-xs">@(Model.StatusName == EnumBillRequisitionStatus.Approved.ToString() ? "Bypass" : item.AprrovalStatusName)</span>
                                                    </td>
                                                }
                                                else if (item.AprrovalStatusId == (int)EnumBillRequisitionStatus.Rejected)
                                                {
                                                    <td style="text-align:center">
                                                        <span class="btn btn-danger btn-xs"> @item.AprrovalStatusName</span>
                                                    </td>
                                                }
                                                else if (item.AprrovalStatusId == (int)EnumBillRequisitionStatus.Approved)
                                                {
                                                    <td style="text-align:center">
                                                        @if (item.SignatoryId == (int)EnumBRequisitionSignatory.Initiator)
                                                        {

                                                            <span class="btn btn-success btn-xs"> Prepared</span>
                                                        }
                                                        else if (item.SignatoryId == (int)EnumBRequisitionSignatory.PM)
                                                        {
                                                            <span class="btn btn-success btn-xs"> Checked</span>
                                                        }
                                                        else if (item.SignatoryId == (int)EnumBRequisitionSignatory.QS)
                                                        {
                                                            <span class="btn btn-success btn-xs"> Forwarded</span>
                                                        }
                                                        else if (item.SignatoryId == (int)EnumBRequisitionSignatory.Director)
                                                        {
                                                            <span class="btn btn-success btn-xs"> Forwarded</span>
                                                        }
                                                        else if (item.SignatoryId == (int)EnumBRequisitionSignatory.PD)
                                                        {
                                                            <span class="btn btn-success btn-xs"> Recommended</span>
                                                        }
                                                        else if (item.SignatoryId == (int)EnumBRequisitionSignatory.MD)
                                                        {
                                                            <span class="btn btn-success btn-xs"> Approved</span>
                                                        }
                                                    </td>
                                                }
                                                else
                                                {
                                                    <td style="padding:5px; text-align:center;">@item.AprrovalStatusName</td>
                                                }
                                            }
                                        </tr>
                                    </table>

                                    <h4 class="text-primary" style="margin: 20px 0 5px;">
                                        <strong>
                                            Requisition Approval Histroy:
                                        </strong>
                                    </h4>

                                    <table class="table table-bordered table-striped table-responsive">
                                        <tr class="bg-gray">
                                            @foreach (var item in Model.ApprovalModelList)
                                            {
                                                <th style="padding:5px;text-align:center;">
                                                    @((item.SignatoryName == "PM") ? "PM/Checker" : (item.SignatoryName == "QS") ? "QS/Engr./HOD" : (item.SignatoryName == "PD") ? "PD/CE" : item.SignatoryName)
                                                </th>
                                            }
                                        </tr>
                                        <tr>
                                            @foreach (var item in Model.ApprovalModelList)
                                            {
                                                <td>
                                                    @if (item.SignatoryName == "Initiator")
                                                    {
                                                        <span style="font-size: 11px">
                                                            <b>Time: </b> @item.ModifiedDate.ToString()
                                                        </span>
                                                    }
                                                    else
                                                    {
                                                        <span style="font-size: 11px">
                                                            <b>Time: </b> @(item.ModifiedDate == null ? "Not Approve Yet!" : item.ModifiedDate.ToString())
                                                        </span>
                                                    }

                                                    <br />
                                                    @if (item.SignatoryName == "Initiator")
                                                    {
                                                        <span style="font-size: 11px">
                                                            <b>Created By: </b>  @item.ApproverNameWithId
                                                        </span>
                                                    }
                                                    else
                                                    {
                                                        <span style="font-size: 11px">
                                                            <b>Approved By: </b> @(item.ApproverNameWithId == " ()" ? "-" : item.ApproverNameWithId)
                                                        </span>
                                                    }
                                                    <br />
                                                    @if (item.ApprovalRemarks != null)
                                                    {
                                                        <span style="font-size: 12px"><b>Remarks: </b> @item.ApprovalRemarks</span>
                                                    }
                                                    else
                                                    {
                                                        <span style="font-size: 12px"><b>Remarks: </b> @(item.SignatoryName == "Initiator" ? "Requisition Created. " : "N/A")</span>
                                                    }
                                                </td>
                                            }
                                        </tr>
                                    </table>

                                </div>
                            </div>
                        }
                    </div>

                    @if (Model.BillRequisitionMasterId > 0 && Model.StatusName == EnumBillRequisitionStatus.Pending.ToString() && Model.ApprovalModelList.First(x => x.SignatoryId == (int)EnumBRequisitionSignatory.QS).AprrovalStatusId == (int)EnumBillRequisitionStatus.Pending)
                    {
                        <div class="box-footer">
                            <div class="row">
                                <div class="col-md-3"></div>
                                <div class="col-md-3"></div>
                                <div class="col-md-3">
                                    <a class="btn btn-danger btn-block linkPointer" data-toggle="modal" data-target="#RejectedModalId" data-placement="top">Proceed to Reject</a>
                                </div>
                                <div class="col-md-3">
                                    <a class="btn btn-primary btn-block linkPointer" data-toggle="modal" data-target="#ApprovedModalId" data-placement="top">Proceed to Approve</a>
                                </div>
                            </div>
                        </div>
                        <!-- Approve Modal-->
                        <div class="modal fade" id="ApprovedModalId" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <button type="button" onclick="resetForm()" class="close pull-right" data-dismiss="modal" aria-label="Close">
                                            &times;
                                        </button>
                                        <h4 class="modal-title text-primary"><b>Bill Requisition Approval</b></h4>
                                    </div>
                                    <div class="modal-body">
                                        <div class="row">
                                            <div class="col-md-12 py-5">
                                                <label class="text-secondary">Approval Remarks :</label>
                                            </div>
                                            <div class="col-md-12 py-5">
                                                @Html.TextAreaFor(model => model.CancelReason, new { @class = "modal-input form-control" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" id="btnClose" onclick="resetForm()" class="btn btn-outline-warning" data-dismiss="modal">Go Back</button>
                                        <button type="submit" id="btnDelete" class="deleteId btn btn-success">Approve</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- Approve Modal-->
                    }
                </div>
            </div>
        </div>
    </section>
}

@using (Html.BeginForm("QSReject", "BillRequisition", FormMethod.Post, new { id = "RejectedFormId", @class = "formValidator", onreset = "resetDDL();" }))
{
    @Html.HiddenFor(model => model.BillRequisitionMasterId, new { Value = Model.BillRequisitionMasterId, id = "RejectedBillRequisitionMasterId" })

    <div class="modal fade" id="RejectedModalId" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" onclick="resetForm()" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h4 class="modal-title text-primary"><b>Bill Requisition Rejection</b></h4>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-12 py-5">
                            <label class="text-secondary">The reason for the rejection :</label>
                        </div>
                        <div class="col-md-12 py-5">
                            @Html.TextAreaFor(model => model.CancelReason, new { @class = "modal-input form-control" })
                        </div>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" id="btnClose" onclick="resetForm()" class="btn btn-outline-warning" data-dismiss="modal">Go Back</button>
                    <button type="submit" id="btnDelete" class="deleteId btn btn-danger">Reject</button>
                </div>
            </div>
        </div>
    </div>
}

@Scripts.Render("~/bundles/jqueryui")
@Styles.Render("~/Content/cssjqryUi")

@section scripts {
    <script>
    $(".demandValue, .unitValue").on('input', function (event) {
        LineCalculator();
    });

    function LineCalculator() {
        $("#itemTable tbody tr").each(function () {
            var getRemainingValue = $(this).find(".remainingValue");
            var getAvailableValue = $(this).find(".availableValue");
            var inputDemadValue = $(this).find(".demandValue");
            var inputUnitValue = $(this).find(".unitValue");
            var inputTotalValue = $(this).find(".totalValue");
            var demandMessage = $(this).find(".errorDemand");
            var unitMessage = $(this).find(".errorUnit");
            var available = 0;
            var lineTotal = 0;

            if (@Model.BillRequisitionTypeId == @((int)EnumBillRequisitionType.Overhead)) {
                if (!isNaN(inputDemadValue.val()) && !isNaN(inputUnitValue.val())) {
                    var demandValue = parseFloat(inputDemadValue.val());
                    var unitValue = parseFloat(inputUnitValue.val());

                    if (demandValue > 0 && unitValue > 0) {
                        lineTotal = demandValue * unitValue;
                    } else {
                        demandValue = unitValue = 0;
                    }
                } else {
                    demandValue = unitValue = 0;
                    $(demandMessage).text("Only number is allowed!");
                    $(unitMessage).text("Only number is allowed!");
                }

                inputTotalValue.text(lineTotal.toFixed(2));
            } else {
                if (!isNaN(inputDemadValue.val()) && !isNaN(inputUnitValue.val()) && !isNaN(getRemainingValue.text())) {
                    var demandValue = parseFloat(inputDemadValue.val());
                    var unitValue = parseFloat(inputUnitValue.val());
                    var remainingValue = parseFloat(getRemainingValue.text());

                    if (demandValue > 0 && unitValue > 0) {
                        if (remainingValue >= demandValue) {
                            available = remainingValue - demandValue;
                            $(demandMessage).text("");
                        } else {
                            inputDemadValue.val(remainingValue);
                            demandValue = remainingValue;
                            available = remainingValue - demandValue;
                            $(demandMessage).text("Demand cannot exceed remaining!");
                        }
                        lineTotal = demandValue * unitValue;
                    } else {
                        demandValue = unitValue = 0;
                    }

                } else {
                    demandValue = unitValue = 0;
                    $(demandMessage).text("Only number is allowed!");
                    $(unitMessage).text("Only number is allowed!");
                }

                inputTotalValue.text(lineTotal.toFixed(2));
                getAvailableValue.text(available.toFixed(2));
            }
        });

        TotalCalculator();
    }

    function TotalCalculator() {
        var showTotalValue = $("#showTotalValue");
        var total = 0;

        $("#itemTable tbody tr").each(function (event) {
            var inputTotalValue = $(this).find(".totalValue");
            var totalValue = parseFloat(inputTotalValue.text());

            if (!isNaN(totalValue)) {
                total += totalValue;
            }
        });

        showTotalValue.text(total.toFixed(2));
    }

    TotalCalculator();

    </script>
}