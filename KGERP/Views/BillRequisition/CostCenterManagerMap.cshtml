@model KGERP.Service.ServiceModel.CostCenterManagerMapModel

@{
    ViewData["Title"] = "Cost Center Manager Map";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style type="text/css">
    input, select, textarea {
        max-width: 100%;
    }
</style>

<section class="content-header">
    <h1>
        @if (Model.CostCenterManagerMapId > 0)
        {
            <span>
                Cost Center Manager Map
            </span>
        }
        else
        {
            <span>
                Cost Center Manager Map
            </span>
        }
    </h1>
    <ol class="breadcrumb">
        <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i>Dashboard</a></li>
        <li class="active">Cost Center Manager</li>
    </ol>

</section>


@using (Html.BeginForm("CostCenterManagerMap", "BillRequisition", FormMethod.Post, new { id = "costCenterMapFormId", @class = "formValidator", onreset = "resetDDL();" }))
{
    <section class="content">
        <div class="row">
            <div class="box">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @Html.HiddenFor(model => model.CostCenterManagerMapId, new { Value = "", id = "CostCenterManagerMapId" })
                @Html.HiddenFor(model => model.ActionId, new { Value = "", id = "ActionId" })
                @Html.HiddenFor(model => model.CompanyFK, new { id = "CompanyFK" })

                <div class="box-danger">
                    <div class="box-header">
                    </div>
                    <!-- /.box-header -->
                    <div class="box-body">

                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label asp-for="ProjectId">Select Project</label>
                                    @Html.DropDownListFor(model => model.ProjectId, new SelectList(Model.Projects, "CostCenterId", "Name"), "-- Select Project --", new { id = "selectProject", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    <label asp-for="EmployeeRowId">Select Manager</label>
                                    @Html.DropDownListFor(model => model.EmployeeRowId, new SelectList(Model.Employees, "Id", "Name"), "-- Select Manager --", new { id = "selectEmployee", @class = "form-control" })

                                </div>
                                @Html.ValidationMessageFor(model => model.EmployeeRowId, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-md-4">
                                <div class="form-group" style="margin-top: 25px !important">
                                    <div class="col-md-6">
                                        <button type="button" onclick="resetForm()" class="btn btn-secondary" data-dismiss="modal" style="width: 100% !important">Reset</button>
                                    </div>
                                    <div class="col-md-6">
                                        <button type="submit" id="btnSave" class="btn btn-primary btn-block" style="width: 100% !important"><i class='fa fa-edit'></i> Add</button>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

}

<section class="content" style="margin-top: -110px !important">
    <div class="row">
        <div class="box">
            <div class="box-danger">
                <div class="box-header">
                </div>
                <!-- /.box-header -->
                <div class="box-body">
                    <div class="table-responsive col-md-12">
                        <table id="KgErpDataTable" class="table table-striped">
                            <thead>
                                <tr>
                                    <th>SL</th>
                                    <th>Project Name</th>
                                    <th>Manager</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            @{int sl = 0;}
                            <tbody>
                                @foreach (var item in Model.CostCenterManagerMaps)
                                {
                                    <tr>
                                        <td>
                                            @(++sl)
                                            <input type="hidden" id="costCenterId_@item.CostCenterManagerMapId" name="CostCenterId" value="@item.CostCenterId" />
                                            <input type="hidden" id="costCenterManagerId_@item.CostCenterManagerMapId" name="CostCenterManagerId" value="@item.ManagerId" />
                                        </td>
                                        <td id="tdProjectName_@item.CostCenterManagerMapId">@Model.Projects.FirstOrDefault(c => c.CostCenterId == item.CostCenterId).Name</td>
                                        <td id="tdEmployeeName_@item.CostCenterManagerMapId">@Model.Employees.FirstOrDefault(c => c.Id == item.ManagerId).Name</td>
                                        <td>
                                            <a id="@item.CostCenterManagerMapId" onclick="makeEditble(this);" class="linkPointer" title="Edit"><i class="fa fa-pencil-square-o"></i></a>

                                            <a id="@item.CostCenterManagerMapId" onclick="makeDeletable(@item.CostCenterManagerMapId);" class="linkPointer" data-toggle="modal" data-target="#CostCenterManagerMapModal" title="Delete"
                                               data-placement="top">
                                                <i class="glyphicon glyphicon-trash" aria-hidden="true"></i>
                                            </a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@using (Html.BeginForm("CostCenterManagerMap", "BillRequisition", FormMethod.Post, new { id = "costCenterMapFormId", @class = "formValidator", onreset = "resetDDL();" }))
{
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    @Html.HiddenFor(model => model.CostCenterManagerMapId, new { Value = "", id = "CostCenterManagerMapIdDelete" })
    @Html.HiddenFor(model => model.ActionId, new { Value = "", id = "ActionIdDelete" })
    @Html.HiddenFor(model => model.CompanyFK, new { id = "CompanyFKDelete" })

    <div class="modal fade" id="CostCenterManagerMapModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" onclick="resetForm()" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b>Cost Center Manager Map Delete</b></h5>

                </div>
                <div class="modal-body">
                    <div style="text-align:center">
                        <h3>Are you sure to delete?</h3>
                    </div>

                </div>

                <div class="modal-footer">
                    <button type="button" id="btnClose" onclick="resetForm()" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" id="btnDelete" class="deleteId btn btn-primary"><i class="glyphicon glyphicon-check"></i> Confirm</button>
                </div>
            </div>
        </div>
    </div>
}

@section scripts {
    <script type="text/javascript">

        $(document).ready(function () {
            $('.formValidator').bootstrapValidator();
        });

        function makeEditble(elem) {
            if (elem !== null) {
                var rowId = elem.id;
                $('#CostCenterManagerMapId').val(rowId);
                $('#ActionId').val(2);
                $('#btnSave').html("<i class='fa fa-edit'></i>&nbsp;Update");
                $('#selectProject').val($('#costCenterId_' + rowId).val().trim()).trigger('change');
                $('#selectEmployee').val($('#costCenterManagerId_' + rowId).val().trim()).trigger('change');
                window.scrollTo({ top: 0, behavior: 'smooth' });
            }
        }

        function makeDeletable(id) {
            if (id !== null) {
                $('#CostCenterManagerMapIdDelete').val(id);
                $('#ActionIdDelete').val(3);
                $("#CompanyFKDelete").val("@Model.CompanyFK");
            }
        }

        function resetForm() {
            $('#costCenterMapFormId')[0].reset();
            $('#btnSave').html("<i class='fa fa-edit'></i>&nbsp;Add");

        }
    </script>
}