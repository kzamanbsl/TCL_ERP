@model KGERP.ViewModel.DropDownItemViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.DropDownItem.DropDownItemId)
    @Html.HiddenFor(model => model.DropDownItem.CompanyId)

<div class="form-horizontal">
    <h4>Dropdown Item @Model.DropDownItem.ButtonName</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.DropDownItem.DropDownTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.DropDownItem.DropDownTypeId, new SelectList(Model.DropDownTypes, "Value", "Text"), "--Select--", htmlAttributes: new { @class = "dropdownsize form-control" })
            @Html.ValidationMessageFor(model => model.DropDownItem.DropDownTypeId, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.DropDownItem.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DropDownItem.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DropDownItem.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DropDownItem.ItemValue, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DropDownItem.ItemValue, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DropDownItem.ItemValue, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DropDownItem.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DropDownItem.Remarks, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.DropDownItem.OrderNo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DropDownItem.OrderNo, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>




    <div class="form-group">
        @Html.LabelFor(model => model.DropDownItem.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.DropDownItem.IsActive)
                @Html.ValidationMessageFor(model => model.DropDownItem.IsActive, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>


    <div class="col-md-offset-3 col-md-3">
        <div class="form-group">
            <a href="@Url.Action("Index", "DropDownItem", new { companyId = Model.DropDownItem.CompanyId})" class="btn btn-danger">
                <span class="glyphicon glyphicon-remove-circle"></span>   Close
            </a>
            <button type="submit" class="btn btn-primary" style="margin-left: 20px;"><span class="glyphicon glyphicon-floppy-disk"></span>@Model.DropDownItem.ButtonName</button>
        </div>
    </div>
</div>
}


@section Scripts {

    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script type="text/javascript">

    </script>
}