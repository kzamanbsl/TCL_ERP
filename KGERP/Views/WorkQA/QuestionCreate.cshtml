@model KGERP.Service.ServiceModel.WorkQAModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .table > thead > tr > th,
    .table > tbody > tr > th,
    .table > tfoot > tr > th,
    .table > thead > tr > td,
    .table > tbody > tr > td,
    .table > tfoot > tr > td {
        border-top: 1px solid #fff;
    }
</style>
<div class="row" style="background-color:#32527B;color:#FFFFFF">
    <span style="font-size:20px;padding:5px;font-weight:bold">Query</span>
</div>
<br />
@using (Html.BeginForm(Html.BeginForm("QuestionCreate", "WorkQA", FormMethod.Post, new { enctype = "multipart/form-data" })))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.WorkQAId)
    @Html.HiddenFor(x => x.ParentWorkQAId)

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <table class="table table-responsive">
            <tr>
                <td>
                    @Html.LabelFor(model => model.ToName, htmlAttributes: new { @class = "control-label" })
                </td>
                <td>
                    @Html.EditorFor(model => model.ToName, new { htmlAttributes = new { @class = "form-control", @name = "employee", @id = "employee" } })
                    @Html.ValidationMessageFor(model => model.ToName, "", new { @class = "text-danger" })
                    @Html.HiddenFor(x => x.ToEmpId, new { @id = "toEmpId", @name = "toEmpId" })
                </td>
            </tr>

            @if (Model.ParentWorkQAId > 0)
            {
                <tr>
                    <td>
                        @Html.LabelFor(model => model.Conversation, htmlAttributes: new { @class = "control-label" })
                    </td>
                    <td>
                        @Model.Conversation
                    </td>
                </tr>


                <tr>
                    <td>
                        @Html.LabelFor(model => model.Reply, htmlAttributes: new { @class = "control-label" })
                    </td>
                    <td>
                        @Html.TextAreaFor(model => model.Reply,2,50, new { htmlAttributes = new { @class = "form-control", @placeholder = "Leave a reply here..." } })
                    </td>
                </tr>
            }
            else
            {

                <tr>
                    <td>
                        @Html.LabelFor(model => model.Conversation, htmlAttributes: new { @class = "control-label" })
                    </td>
                    <td>
                        @Html.TextAreaFor(model => model.Conversation, 2, 50, new { htmlAttributes = new { @class = "form-control", @placeholder = "Leave a reply here..." } })
                    </td>
                </tr>
            }

            <tr>
                <td>@Html.Label("Browse", htmlAttributes: new { @class = "control-label" })</td>
                <td>
                    <div class="col-md-4">@Html.TextBoxFor(model => model.files, "", new { @type = "file", @multiple = "multiple", @class = "btn btn-success" })</div>
                    <div class="col-md-6" style="color:blue;font-size:20px">(You can choose multiple files)</div>
                </td>
            </tr>
            <tr>
                <td colspan="2">
                    <a href="@Url.Action("Index")" id="cancel" class="btn btn-danger" style="margin-right:10px;">Cancel</a>
                    <input type="submit" value="Submit" class="btn btn-primary" />
                </td>
            </tr>


        </table>
    </div>
}
@section Scripts {

    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script type="text/javascript">
        //function SubmitForm() {
        //    var r = confirm("Are you sure to submit your question?");
        //    if (r == false) {
        //        return false;
        //    }
        //}

        $(function () {
            $("#employee").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Employee/EmployeeAutoComplete/',
                        //data: "{ 'prefix': '" + request.term + "'}",
                        data: '{"prefix":"' + request.term + '", "productType":"F"}',
                        dataType: "json",
                        type: "POST",
                        cache: true,
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            alert(response.responseText);
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#toEmpId").val(i.item.val);
                },
                minLength: 1,
                cache: true

            }).focus(function () {
                $(this).autocomplete("search");
            });
        });
    </script>
}

