@model KGERP.ViewModel.PurchaseReturnViewModel
@{
    ViewBag.Title = "Purchase REturn";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var productType = Request.QueryString["productType"];
}
<style>
    span.error {
        display: block;
        visibility: hidden;
        color: red;
        font-size: 90%;
    }

    tr.error {
        background-color: rgba(255,0,0,0.35);
    }

    .remove {
        width: 40px;
        height: 25px;
        font-size: 16px;
        background-color: #dd4b39;
        color: white;
        border: none;
        border-radius: 15px;
    }
</style>
@using (Html.BeginForm("Create", "PurchaseReturn", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.PurchaseReturn.CompanyId)
    @Html.HiddenFor(x => x.PurchaseReturn.PurchaseReturnId)
    @Html.HiddenFor(x => x.PurchaseReturn.SupplierAccoutHeadId, new { @id = "hfSupplierAccoutHeadId" })
    <div class="row">
        <div class="panel-heading" style="background-color:#3c8dbc;color:#ffffff">
            <span style="font-size:15px;font-family:Arial;font-weight:bold">New Purchase Return</span>
        </div>

        <div class="panel-body" style="padding-left:0px;padding-right:0px">
            <div class="col-md-3">
                @Html.LabelFor(model => model.PurchaseReturn.ProductType, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.PurchaseReturn.ProductType, new SelectList(Model.ProductTypes, "Value", "Text"), "---Select---", new { @id = "ddlProductType", @class = "dropdownsize form-control" })
                @Html.ValidationMessageFor(model => model.PurchaseReturn.ProductType, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.PurchaseReturn.SupplierId, htmlAttributes: new { @class = "control-label" })
                @Html.HiddenFor(model => model.PurchaseReturn.SupplierId, new { @id = "hfSupplierId" })
                @Html.EditorFor(model => model.PurchaseReturn.SupplierName, new { htmlAttributes = new { @class = "form-control", @name = "SupplierName", @id = "txtSupplierName" } })
                @Html.ValidationMessageFor(model => model.PurchaseReturn.SupplierName, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                <label for="CompanyName" class="control-label">Supplier Name</label>
                <input type="text" class="form-control" id="SupplierName" readonly>
            </div>
            <div class="col-md-3">
                <label for="Address" class="control-label">Supplier Address</label>
                <input type="text" class="form-control" id="Address" readonly>
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.PurchaseReturn.ReturnNo, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.PurchaseReturn.ReturnNo, new { htmlAttributes = new { @id = "txtReturnNo", @class = "form-control", @autocomplete = "off", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.PurchaseReturn.ReturnNo, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.PurchaseReturn.ReturnDate, htmlAttributes: new { @class = "control-label" })
                <br />
                @Html.EditorFor(model => model.PurchaseReturn.ReturnDate, new { htmlAttributes = new { @class = "datepicker", @autocomplete = "off", } })
                <br />
                @Html.ValidationMessageFor(model => model.PurchaseReturn.ReturnDate, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-3">
                @Html.LabelFor(model => model.PurchaseReturn.StockInfoId, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.PurchaseReturn.StockInfoId, new SelectList(Model.Stocks, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control" })
                @Html.ValidationMessageFor(model => model.PurchaseReturn.StockInfoId, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-3">
                @Html.LabelFor(model => model.PurchaseReturn.ReturnReason, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.PurchaseReturn.ReturnReason, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.PurchaseReturn.ReturnReason, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.PurchaseReturn.ReturnBy, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.PurchaseReturn.ReturnPersonName, new { htmlAttributes = new { @class = "form-control", @name = "returnPersonName", @id = "returnPersonName" } })
                @Html.HiddenFor(x => x.PurchaseReturn.ReturnBy, new { @id = "returnBy", @name = "returnBy" })
                @Html.ValidationMessageFor(model => model.PurchaseReturn.ReturnPersonName, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.PurchaseReturn.ReferenceNo, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.PurchaseReturn.ReferenceNo, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
            </div>
        </div>
    </div>

    <div class="row details">
        <table class="table table-responsive">
            <tr style="background-color:#3c8dbc;color:#ffffff">
                <th>Product</th>
                <th>Return Quantity</th>
                <th>Return Rate</th>
                <th>Return Amount</th>
                <th>&nbsp;</th>
            </tr>
            <tr class="mycontainer" id="mainrow">
                <td style="width:275px">
                    <input type="text" id="product" name="product" class="form-control" />
                    <input type="hidden" id="hfProductId" name="productId" />
                </td>
                <td>
                    <input type="text" id="qty" class="qty form-control" autocomplete="off" style="text-align:right" />
                    <span class="error">Valid quantity required !</span>
                </td>

                <td>
                    <input type="text" id="unitPrice" class="qty form-control" autocomplete="off" style="text-align:right" />
                    <span class="error">Valid rate is required !</span>
                </td>

                <td>
                    <input type="text" id="amount" class="qty form-control" autocomplete="off" style="text-align:right" readonly />
                </td>
                <td>
                    <button type="button" id="add" class="btn btn-primary pull-right"><i class="fa fa-plus-circle"></i>&nbsp; Add</button>
                </td>
            </tr>
        </table>
        <div id="orderItems">
            <table class="table" id="orderdetailsItems">
                <thead>
                    <tr style="background-color:#3c8dbc;color:#ffffff;font-weight:bold">
                        <th>Sl</th>
                        <th>Product</th>
                        <th>Quantity</th>
                        <th>Unit Price</th>
                        <th>Total Price</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody id="itemDetails"></tbody>
            </table>
            <span id="orderItemError" class="danger"></span>
        </div>
    </div>

    <div class="row">
        <div class="col-md-offset-9 pull-right">
            <table>
                <tr>
                    <td></td>
                    <td>
                        <input id="submit" type="submit" onclick='return confirmSubmit()' value="Submit" class="btn btn-success pull-right" style="padding:5px 10px;margin-top:5px" />
                        <a href="@Url.Action("Index",new { companyId=Model.PurchaseReturn.CompanyId,productType=Model.PurchaseReturn.ProductType})" id="cancel" class="btn btn-danger pull-right" style="padding:5px 10px;margin-right:10px;margin-top:5px">Cancel</a>

                    </td>
                </tr>
            </table>
        </div>
    </div>

}

<script src="~/Scripts/ApplicationScripts/Inventory_Feed/PurchaseOrder/PurchaseReturn.js"></script>
@section Scripts {

    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script type="text/javascript">

        function confirmSubmit() {
            var accountHeadId = $("#hfSupplierAccoutHeadId").val();
            if (accountHeadId == '') {
                alert("The supplier is not integrated with Accounts.\n Please set supplier A/C number first.");
                return false;
            }
            else {
                confirm("Are you sure you want to submit purchase return?")
            }
        }

        $(function () {
            $("#txtSupplierName").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Vendor/SupplierAutoComplete/',
                        data: "{ 'prefix': '" + request.term + "'}",
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            alert(response.responseText);
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#hfSupplierId").val(i.item.val);
                },
                minLength: 1,
                change: function (event, ui) {
                    loadSupplierInformation(ui.item.val);
                }

            }).focus(function () {
                $(this).autocomplete("search");
            });
        });

        function loadSupplierInformation(supplierId) {
            $.ajax({
                url: '/Vendor/GetSupplierInformation?supplierId=' + supplierId,
                type: "GET",
                async: true,
                processData: false,
                cache: false,
                success: function (data) {
                    var result = JSON.parse(data);
                    $('#SupplierName').val(result.ContactName);
                    $('#Address').val(result.Address);
                    $('#hfSupplierAccoutHeadId').val(result.HeadGLId);
                },
                error: function (xhr) {
                    alert('error');
                }
            });
        }

        $('#ddlProductType').change(function () {
            $.ajax({
                type: "post",
                url: "/PurchaseReturn/GetPurchaseReturnNoByProductType",
                data: { productType: $('#ddlProductType').val() },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    $("#txtReturnNo").val(data);
                }
            });
        });

        $(function () {
            $("#product").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Products/AutoComplete/',
                        data: '{"prefix":"' + request.term + '", "productType":"R"}',
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            alert(response.responseText);
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#hfProductId").val(i.item.val);
                },
                minLength: 1
            }).focus(function () {
                $(this).autocomplete("search");
            });
        });
     
        $(function () {
            $("#returnPersonName").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Employee/EmployeeAutoComplete/',
                        //data: "{ 'prefix': '" + request.term + "'}",
                        data: '{"prefix":"' + request.term + '", "productType":"F"}',
                        dataType: "json",
                        type: "POST",
                        cache: true,
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            alert(response.responseText);
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#returnBy").val(i.item.val);
                },
                minLength: 1,
                cache: true

            }).focus(function () {
                $(this).autocomplete("search");
            });
        });
    </script>
}

