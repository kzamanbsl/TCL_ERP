@model KGERP.Service.ServiceModel.ChequeRegisterModel
@{
    ViewData["Title"] = "Cheque Cancel Request";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">
    input, select, textarea {
        max-width: 100%;
    }

    .ui-datepicker-trigger {
        width: 37px !important;
        height: 33px !important;
        margin-left: 20px !important;
    }

    .dateCustom {
        width: 82% !important;
        border-radius: 1px !important;
        border: 1px solid #d2d6de !important;
        height: 33px !important;
    }
</style>

<section class="content-header">
    <h1>
        Cheque Cancel Request
    </h1>
    <ol class="breadcrumb">
        <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i>Dashboard</a></li>
        <li class="active">Cheque Cancel Request</li>
    </ol>
</section>

@using (Html.BeginForm("ChequeCancelRequest", "ChequeRegister", FormMethod.Post, new { id = "ChequeRegisterFormId", @class = "formValidator" }))
{
    <section class="content">
        <div class="row">
            <div class="box">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="box-danger">
                    <div class="box-body">
                        @Html.HiddenFor(model => model.ID, new { Value = "", id = "chequeResgisterItemId" })
                        @Html.HiddenFor(model => model.ActionId, new { Value = "", id = "ActionId" })
                        @Html.HiddenFor(model => model.CompanyFK, new { id = "CompanyFK" })

                        <div class="row">
                            <div class="col-md-4" id="inputRegisterFor">
                                <div class="form-group">
                                    <label class="form-label">Register For<sup class="text-danger" title="Required"><b>*</b></sup></label>
                                    @Html.DropDownListFor(model => model.RegisterFor, Model.RegisterForList as SelectList, "==Register For==", new { id = "ddlRegisterFor", @class = "form-control searchingDropdown", style = "width:100%", required = "required" })
                                    @Html.ValidationMessageFor(model => model.RegisterFor, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="form-label">Remarks/Purpose</label>
                                    @Html.TextAreaFor(model => model.Remarks, new { id = "txtRemarks", @class = "form-control", @placeholder = "Type remarks/purpose here" })
                                    @Html.ValidationMessageFor(model => model.Remarks, "", new { id = "nameExist", @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-6"></div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    <div class="col-md-6">
                                        <button type="button" onclick="resetForm()" class="btn btn-secondary" data-dismiss="modal" style="width:100% !important">Reset</button>
                                    </div>
                                    <div class="col-md-6">
                                        <button type="submit" id="btnSave" class="btn btn-primary btn-block" style="width:100% !important"><i class='fa fa-edit'></i> Add</button>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>

                </div>
            </div>
        </div>
    </section>
}


<section class="content">
    <div class="row">
        <div class="box">
            <div class="box-danger">
                <div class="box-header">
                </div>
                <!-- /.box-header -->
                <div class="box-body">
                    <div class="table-responsive col-md-12">
                        <table id="KgErpDataTable" class="table table-dark table-striped table-responsive">
                            <thead>
                                <tr>
                                    <th>SL</th>
                                    <th>Cheque No</th>
                                    <th>Issue Date</th>
                                    <th>Amount</th>
                                    <th>Project Name</th>
                                    <th>Supplier/Party</th>
                                    <th>Requisition No</th>
                                    <th>Request Date</th>
                                    <th>Reasons</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            @{int sl = 0;}
                            <tbody>
                                @foreach (var item in Model.ChequeRegisterList.OrderByDescending(x => x.ChequeRegisterId))
                                {
                                    <tr>
                                        <td>
                                            @(++sl)
                                            <input type="hidden" id="hiddenIssueDate_@item.ChequeRegisterId" value="@item.IssueDate.ToString("dd/MM/yyyy")" />
                                            <input type="hidden" id="hiddenChequeDate_@item.ChequeRegisterId" value="@item.ChequeDate.ToString("dd/MM/yyyy")" />
                                            <input type="hidden" id="hiddenClearingDate_@item.ChequeRegisterId" value="@item.ClearingDate.ToString("dd/MM/yyyy")" />
                                        </td>
                                        <td>@item.ChequeNo</td>
                                        <td>@item.IssueDate.ToString("dd-MM-yyyy")</td>
                                        <td>@item.Amount</td>
                                        <td>@item.ProjectName</td>
                                        <td>
                                            @if (item.SupplierId > 0)
                                            {
                                                <span>[@item.SupplierCode] - @item.SupplierName</span>
                                            }
                                            else
                                            {
                                                <span>N/A</span>
                                            }
                                        </td>
                                        <td>
                                            @if (item.RequisitionId > 0)
                                            {
                                                <a href="~/BillRequisition/BillRequisitionMasterCommonSlave?companyId=@Model.CompanyFK&billRequisitionMasterId=@item.RequisitionId" class="link-primary text-primary" target="_blank" title="See Requisition Detail" style="text-align:left !important;">@item.RequisitionNo</a>
                                            }
                                            else
                                            {
                                                <small class="text-center text-secondary d-block" id="hidePrintButton">General Cheque</small>
                                            }
                                        </td>
                                        <td>@item.Remarks</td>
                                        <td>@item.Remarks</td>
                                        <td>
                                            @if (item.IsPrinted == false)
                                            {
                                                <a id="@item.ChequeRegisterId" onclick="makeEditble(@item.ChequeRegisterId);" class="linkPointer" title="Edit"><i class="fa fa-pencil-square-o"></i></a>

                                                <a id="@item.ChequeRegisterId" onclick="makeDeletable(@item.ChequeRegisterId);" class="linkPointer" data-toggle="modal" data-target="#ChequeRegisterDeleteModal" title="Delete"
                                                   data-placement="top">
                                                    <i class="glyphicon glyphicon-trash" aria-hidden="true"></i>
                                                </a>
                                            }
                                            else
                                            {
                                                <a id="@item.ChequeRegisterId" class="linkPointer disabled" title="Disabled"><i class="fa fa-pencil-square-o"></i></a>

                                                <a id="@item.ChequeRegisterId" class="linkPointer disabled" title="Disabled"
                                                   data-placement="top">
                                                    <i class="glyphicon glyphicon-trash" aria-hidden="true"></i>
                                                </a>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@using (Html.BeginForm("NewChequeRegister", "ChequeRegister", FormMethod.Post, new { id = "DeleteChequeRegisterFormId", @class = "formValidator", }))
{
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    @Html.HiddenFor(model => model.ChequeRegisterId, new { Value = "", id = "ChequeRegisterDelete" })
    @Html.HiddenFor(model => model.ActionId, new { Value = "", id = "ActionIdDelete" })
    @Html.HiddenFor(model => model.CompanyFK, new { id = "CompanyFKDelete" })

    <div class="modal fade" id="ChequeRegisterDeleteModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" onclick="resetForm()" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b>Cheque Register Delete</b></h5>

                </div>
                <div class="modal-body">
                    <div style="text-align:center">
                        <h3>Are you sure to delete?</h3>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" id="btnClose" onclick="resetForm()" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" id="btnDelete" class="deleteId btn btn-primary"><i class="glyphicon glyphicon-check"></i> Confirm</button>
                </div>
            </div>
        </div>
    </div>
}

@Scripts.Render("~/bundles/jqueryui")
@Styles.Render("~/Content/cssjqryUi")

@section scripts {
    <script type="text/javascript">

        $('.datepicker').datepicker({
            dateFormat: "dd/mm/yy",
            showOn: 'both',
            buttonText: "<i class='fa fa-calendar'></i>",
            changeMonth: true,
            changeYear: true,
            yearRange: "2001:+50"
        });

        var isEdited = false;
        var reuisitionId = 0;

        function makeEditble(chequeRegisterId) {
            if (chequeRegisterId !== null) {

                $.ajax({
                    type: "get",
                    url:"@Url.Action("ChequeRegisterById", "ChequeRegister")",
                    data: { chequeRegisterId: chequeRegisterId },
                    dataType: "json",
                    success: function (data) {
                        $('#chequeResgisterItemId').val(chequeRegisterId);
                        $('#ActionId').val(2);
                        $('#btnSave').html("<i class='fa fa-edit'></i>&nbsp;Update");
                        $('#ddlRegisterFor').val(data.RegisterFor).trigger('change');
                        $('#ddlProjectId').val(data.ProjectId).trigger('change');
                        $('#txtSupplierName').val("[" + data.SupplierCode + "] " + data.SupplierName);
                        $('#ddlCommon_SupplierFK').val(data.SupplierId);
                        $('#txtIssueDate').val($('#hiddenIssueDate_' + chequeRegisterId).val());
                        $('#txtChequeDate').val($('#hiddenChequeDate_' + chequeRegisterId).val());
                        $('#txtClearingDate').val($('#hiddenClearingDate_' + chequeRegisterId).val());
                        $('#txtChequeNo').val(data.ChequeNo);
                        $('#txtAmount').val(data.Amount);
                        $('#txtPayTo').val(data.PayTo);
                        $('#txtRemarks').val(data.Remarks);
                        isEdited = true;
                        reuisitionId = data.RequisitionId;
                    }
                });

                window.scrollTo({ top: 0, behavior: 'smooth' });
            }
        }

        function makeDeletable(id) {
            if (id !== null) {
                $('#ChequeRegisterDelete').val(id);
                $('#ActionIdDelete').val(3);
                $("#CompanyFKDelete").val("@Model.CompanyFK");
            }
        }

        function resetForm() {
            $('#ChequeRegisterFormId')[0].reset();
            $('#DeleteChequeRegisterFormId')[0].reset();
            $('#btnSave').html("<i class='fa fa-edit'></i>&nbsp;Add");
        }

        $('#txtSupplierName').autocomplete({
             source: function (request, response) {

                 $.ajax({
                     url:"@Url.Action("GetAutoCompleteSupplierGet", "Procurement")",
                     data: { prefix: request.term, companyId: "@Model.CompanyFK" },
                     dataType: "json",
                     type: "get",
                     cache: true,
                     contentType: "application/json; charset=utf-8",
                     success: function (data) {
                        response($.map(data, function (item) {
                            return item;
                        }))
                     }
                 });
             },

             select: function (e, i) {
                    $("#ddlCommon_SupplierFK").val(i.item.val);
                     if (i.item.val > 0) {
                         $.ajax({
                             type: "GET",
                             url: "/ChequeRegister/GetSupplierPayeeName",
                             dataType: "json",
                             data: { supplierId: i.item.val },
                             success: function (data) {
                                 $('#txtPayTo').val(data);
                             }
                         });
                     }
                 },
             minLength: 1,
             cache: true

         }).focus(function () {
             $(this).autocomplete("search");
         });

        $('#ddlProjectId').on('change', function (event) {
            var projectId = $("#ddlProjectId option:selected").val();
            var showRequisitionList = $("#ddlRequisitionId");
            $.ajax({
                type: "GET",
                url: "/ChequeRegister/RequisitionListWithFilter",
                dataType: "json",
                data: { projectId: projectId },
                success: function (data) {
                    showRequisitionList.empty();
                    showRequisitionList.append("<option selected disabled>==Select Requisition==</option>");

                    $.each(data, function (index, item) {
                        showRequisitionList.append($('<option>', {
                            value: item.Value,
                            text: item.Text
                        }));
                    });
                    if (isEdited) {
                        $('#ddlRequisitionId').val(reuisitionId).trigger('change');
                    }
                }
            });
        });

        $('#ddlRegisterFor').on('change', function (event) {
            var registerForId = $(this).val();

            if (registerForId == @((int)KGERP.Utility.EnumChequeRegisterFor.Requisition)) {
                $('#inputRequisition').removeClass('hidden').addClass('d-block');
                $('#inputRegisterFor').removeClass('col-md-4').addClass('col-md-3');
                $('#inputProject').removeClass('col-md-4').addClass('col-md-3');
                $('#inputSupplier').removeClass('col-md-4').addClass('col-md-3');
                $('#needSupplier').removeClass('hidden').addClass('d-block');
                $('#notNeedSupplier').removeClass('d-block').addClass('hidden');
                $('#txtPayTo').prop('readonly', true);
            } else {
                $('#inputRequisition').removeClass('d-block').addClass('hidden');
                $('#inputRegisterFor').removeClass('col-md-3').addClass('col-md-4');
                $('#inputProject').removeClass('col-md-3').addClass('col-md-4');
                $('#inputSupplier').removeClass('col-md-3').addClass('col-md-4');
                $('#notNeedSupplier').removeClass('hidden').addClass('d-block');
                $('#needSupplier').removeClass('d-block').addClass('hidden');
                $('#txtPayTo').prop('readonly', false);
            }
        });

        $('#ddlBankId').on('change', function (event) {
            var bankId = $("#ddlBankId option:selected").val();
            var showBarnchList = $("#ddlBankBranchId");
            $.ajax({
                type: "GET",
                url: "/ChequeRegister/GetBranchBybankId",
                dataType: "json",
                data: { bankId: bankId },
                success: function (data) {
                    showBarnchList.empty();
                    showBarnchList.append("<option selected disabled>==Select Branch==</option>");
                    $.each(data, function (index, item) {
                        showBarnchList.append($('<option>', {
                            value: item.BranchId,
                            text: item.BranchName
                        }));
                    });
                    if (isEdited) {
                        $('#ddlBankBranchId').val(bankBranchId).trigger('change');
                    }
                }
            });
        });

        $('#ddlBankBranchId').on('change', function (event) {
            var bankId = $("#ddlBankId option:selected").val();
            var bankBranchId = $("#ddlBankBranchId option:selected").val();
            var showAccountList = $("#ddlBankAccountInfoId");
            $.ajax({
                type: "GET",
                url: "/ChequeRegister/GetAccountNoByBankBranchId",
                dataType: "json",
                data: { bankId: bankId, bankBranchId: bankBranchId },
                success: function (data) {
                    showAccountList.empty();
                    showAccountList.append("<option selected disabled>==Select Account No==</option>");
                    $.each(data, function (index, item) {
                        showAccountList.append($('<option>', {
                            value: item.BankAccountInfoId,
                            text: item.AccountNo
                        }));
                    });
                    if (isEdited) {
                        $('#ddlBankAccountInfoId').val(bankInfoId).trigger('change');
                    }
                }
            });
        });

        $('#ddlBankAccountInfoId').on('change', function (event) {
            var bankAccountInfoId = $("#ddlBankAccountInfoId option:selected").val();
            var showChequeBookList = $("#ddlCheqeBookId");
            $.ajax({
                type: "GET",
                url: "/ChequeRegister/GetChequeBookListByAccountInfo",
                dataType: "json",
                data: { bankAccountInfoId: bankAccountInfoId },
                success: function (data) {
                    showChequeBookList.empty();
                    showChequeBookList.append("<option selected disabled>==Select Cheque Book==</option>");
                    $.each(data, function (index, item) {
                        showChequeBookList.append($('<option>', {
                            value: item.ChequeBookId,
                            text: item.ChequeBookNo
                        }));
                    });
                }
            });
        });

        $('#ddlCheqeBookId').on('change', function (event) {
            var chequeBookId = $("#ddlCheqeBookId option:selected").val();
            $.ajax({
                type: "GET",
                url: "/ChequeRegister/GetChequeBookInfoById",
                dataType: "json",
                data: { chequeBookId: chequeBookId },
                success: function (data) {

                    if (data.UsedBookPage != data.TotalBookPage || data.UsedBookPage < data.TotalBookPage) {

                        if (data.UsedBookPage == 0) {
                            $('#txtChequeNo').val(data.BookFirstPageNumber);
                            $('#message').text("");
                        }
                        else {
                            $('#txtChequeNo').val(data.BookFirstPageNumber + data.UsedBookPage);
                            $('#message').text("");
                        }
                    }
                    else {
                        $('#txtChequeNo').val(0);
                        $('#message').text("No more page here, Try with another book!");
                    }
                }
            });
        });

        $('#ddlRequisitionId').on('change', function (event) {
            var requisitionId = $("#ddlRequisitionId option:selected").val();
            $.ajax({
                type: "GET",
                url: "/BillRequisition/GetTotalAmountByRequisitionId",
                dataType: "json",
                data: { requisitionId: requisitionId },
                success: function (data) {
                    $('#txtAmount').val(data.toFixed(2));
                }
            });
        });

        $('#ddlRegisterFor').on('change', function (event) {
            var registerFor = $("#ddlRegisterFor option:selected").val();
            if (registerFor == @((int)KGERP.Utility.EnumChequeRegisterFor.Requisition)) {
                $('#txtAmount').prop('readonly', true);
            }
            else {
                $('#txtAmount').prop('readonly', false);
            }
        });

        $('#notNeedSupplier p').on('click', function (event) {
            $('#needSupplier').removeClass('hidden').addClass('d-block');
            $('#notNeedSupplier').removeClass('d-block').addClass('hidden');
            $('#txtPayTo').prop('readonly', true);
        });

    </script>
}