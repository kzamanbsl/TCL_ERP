@model KGERP.ViewModel.FarmerViewModel
@{
    Layout = null;
}

<script>
    $('#ddlZone').change(function () {
        $.ajax({
            type: "post",
            url: "/OfficerAssign/GetOfficerSelectModelsByZone",
            data: { zoneId: $('#ddlZone').val() },
            datatype: "json",
            traditional: true,
            success: function (data) {
                var Officer = "<select>";
                Officer = Officer + '<option value="">--Select--</option>';
                for (var i = 0; i < data.length; i++) {
                    Officer = Officer + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                }
                Officer = Officer + '</select>';
                $('#ddlOfficer').html(Officer);
            }
        });
    });
</script>

@using (Html.BeginForm("CreateOrEdit", "Farmer", FormMethod.Post, new { onsubmit = "return SubmitForm(this)" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Farmer.FarmerId)
    @Html.HiddenFor(model => model.Farmer.CompanyId)

    <div class="form-group">
        @Html.LabelFor(model => model.Farmer.Name, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.Farmer.Name, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Farmer.Name, "", new { @class = "text-danger" })
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Farmer.ZoneId, htmlAttributes: new { @class = "control-label" })
        @Html.DropDownListFor(model => model.Farmer.ZoneId, new SelectList(Model.Zones, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control", @id = "ddlZone" })
        @Html.ValidationMessageFor(model => model.Farmer.ZoneId, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Farmer.OfficerId, htmlAttributes: new { @class = "control-label" })
        @Html.DropDownListFor(model => model.Farmer.OfficerId, new SelectList(Model.Officers, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control", @id = "ddlOfficer" })
        @Html.ValidationMessageFor(model => model.Farmer.ZoneId, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Farmer.DateOfBirth, htmlAttributes: new { @class = "control-label" })
        <br />
        @Html.EditorFor(model => model.Farmer.DateOfBirth, new { htmlAttributes = new { @class = "datepicker", @style = "width:240px", @placeholder = "dd/mm/yyyy", @autocomplete = "off" } })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Farmer.NationalId, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.Farmer.NationalId, new { htmlAttributes = new { @class = "form-control" } })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Farmer.Phone, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.Farmer.Phone, new { htmlAttributes = new { @class = "form-control" } })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Farmer.Address, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.Farmer.Address, new { htmlAttributes = new { @class = "form-control" } })
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.Farmer.Spouse, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.Farmer.Spouse, new { htmlAttributes = new { @class = "form-control" } })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Farmer.StartDate, htmlAttributes: new { @class = "control-label" })
        <br />
        @Html.EditorFor(model => model.Farmer.StartDate, new { htmlAttributes = new { @class = "datepicker", @style = "width:240px", @placeholder = "dd/mm/yyyy", @autocomplete = "off" } })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Farmer.Remarks, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.Farmer.Remarks, new { htmlAttributes = new { @class = "form-control" } })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Farmer.IsActive, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.Farmer.IsActive,new { @style="margin-left:50px"})
    </div>

    <div class="form-group">
        <input type="submit" value="Submit" class="btn btn-primary" />
        <input type="reset" value="Reset" class="btn btn-danger" />
    </div>
}


<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.date.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>


