
@using PagedList.Mvc;
@model PagedList.IPagedList<KGERP.Service.ServiceModel.ProductModel>
@using PagedList;
@{
    ViewBag.Title = "Index";
}
<div style="padding:inherit;font-family: Arial">

    @using (Html.BeginForm("FeedFormulaIndex", "Products", FormMethod.Get))
    {
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <h4>
                        <b class="header">
                           Feed Formula
                        </b>
                    </h4>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <div class="col-md-10">@Html.TextBox("searchText", null, new { @autocomplete = "off", @class = "form-control pull-right", @placeholder = "Search..." })</div>
                    <div class="col-md-2">
                        <button type="submit" class="btn btn-success">Search&nbsp;<i class="fa fa-search"></i></button>
                    </div>
                </div>
            </div>
            @*<div class="col-md-2 pull-right">
                <div class="form-group">
                    <a href="@Url.Action("CreateOrEdit", new { id = 0,type=Request.QueryString["type"] })" class="btn btn-primary pull-right">
                        <span class="glyphicon glyphicon-plus"></span> Add
                    </a>
                </div>
            </div>*@
        </div>
    }

    <div class="row">
        <table class="table table-striped table-condensed">
            <tr style="background-color:orange;color:#000000">
                <th>
                    SL.
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().ProductCategory.Name)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.First().ProductSubCategoryId)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.First().ProductName)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.First().FormulaQty)
                </th>

                <th class="text-center">Action</th>
            </tr>

            @foreach (var item in Model.Select((x, i) => new { Data = x, Index = i }))
            {
            <tr>
                <td>
                    @((item.Index + 1) + (Model.PageNumber - 1) * Model.PageSize)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Data.ProductCategory.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Data.ProductSubCategory.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Data.ProductName)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Data.FormulaQty)
                </td>

                <td class="text-center">
                    <a href="@Url.Action("Index","ProductFormula", new { productId = item.Data.ProductId})" title="Feed formula" class="btn btn-info btn-xs">
                        <i class="fa fa-wrench" style="font-size:15px;" aria-hidden="true"></i>
                    </a>


                </td>
            </tr>
            }

        </table>
        @if (Model.PageCount > 1)
        {
            <span class="btn btn-success">
                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
            </span>
            <span class="checkbox">
                @Html.PagedListPager(Model, Page_No => Url.Action("FeedFormulaIndex", "Products",
                              new { Page_No, Sorting_Order = Request.QueryString["Search"], SearchText = Request.QueryString["searchText"]}))
            </span>
        }

    </div>
</div>

@section Scripts{
    <script type="text/javascript">

        function exporBiodata(id) {
            window.open('/Report/GetEmployeeReport?id=' + id, "_blank");
        }

    </script>
}