@model KGERP.ViewModel.CompanySubMenuViewModel
@{
    ViewBag.Title = "Create";
}


@using (Html.BeginForm("CreateOrEdit", "CompanySubMenus", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="row">
        <span style="font-size:25px">Sub Menu</span>
        <hr style="border-color:#32527B; padding:0px;margin-top: 10px;margin-bottom: 10px; border-width: 2px;" />
    </div>

    <div class="form-horizontal">
        <div class="row">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.CompanySubMenu.CompanySubMenuId)
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CompanySubMenu.CompanyId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.CompanySubMenu.CompanyId, new SelectList(Model.Companies, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control", @id = "ddlCompany" })
                        @Html.ValidationMessageFor(model => model.CompanySubMenu.CompanyId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CompanySubMenu.CompanyMenuId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.CompanySubMenu.CompanyMenuId, new SelectList(Model.CompanyMenus, "Value", "Text"), "--Select--", new { @class = "dropdownsize form-control", @id = "ddlCompanyMenu" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CompanySubMenu.Name, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.CompanySubMenu.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CompanySubMenu.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CompanySubMenu.OrderNo, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.CompanySubMenu.OrderNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CompanySubMenu.OrderNo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CompanySubMenu.Controller, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.CompanySubMenu.Controller, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CompanySubMenu.Controller, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CompanySubMenu.Action, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.CompanySubMenu.Action, new { htmlAttributes = new { @class = "form-control"} })
                        @Html.ValidationMessageFor(model => model.CompanySubMenu.Action, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>



            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CompanySubMenu.Param, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.CompanySubMenu.Param, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CompanySubMenu.Param, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CompanySubMenu.IsActive, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.CompanySubMenu.IsActive)
                    </div>
                </div>
            </div>
            <div class="col-md-5">
                <div class="form-group">
                    <input type="submit" value="@Model.CompanySubMenu.ButtonName" id="apply" class="btn btn-primary pull-right" />
                    <a href="@Url.Action("Index",new {parentId=Request.QueryString["parentId"]})" class="btn btn-danger pull-right" style="margin-right:8px">
                        Close <i class="fa fa-close" aria-hidden="true"></i>
                    </a>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script type="text/javascript">

        $('#ddlCompany').change(function () {
            $.ajax({
                type: "post",
                url: "/CompanyMenus/GetCompanyMenuSelectModelsByCompany",
                data: { companyId: $('#ddlCompany').val() },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    var companyMenu = "<select>";
                    companyMenu = companyMenu + '<option value="">--Select--</option>';
                    for (var i = 0; i < data.length; i++) {
                        companyMenu = companyMenu + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    companyMenu = companyMenu + '</select>';
                    $('#ddlCompanyMenu').html(companyMenu);
                }
            });
        });

        
    </script>

}
