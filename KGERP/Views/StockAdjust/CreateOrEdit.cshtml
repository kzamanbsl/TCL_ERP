@model KGERP.Service.ServiceModel.StockAdjustModel

@{
    ViewBag.Title = "Stock Adjustment";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    span.error {
        display: block;
        visibility: hidden;
        color: red;
        font-size: 90%;
    }

    tr.error {
        background-color: rgba(255,0,0,0.35);
    }

    .remove {
        width: 40px;
        height: 25px;
        font-size: 16px;
        background-color: red;
        color: white;
        border: none;
        border-radius: 15px;
    }
</style>
@using (Html.BeginForm("CreateOrEdit", "StockAdjust", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.CompanyId, new { @id = "companyId" })
    <div class="row">
        <div class="panel panel-success">
            <div class="panel-heading" style="background-color:#4CAF50;color:#ffffff">
                <span style="font-size:15px;font-family:Arial;font-weight:bold"> New Adjustment</span>
            </div>
            <div class="panel-body">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.AdjustDate, htmlAttributes: new { @class = "control-label" })
                    <br />
                    @Html.EditorFor(model => model.AdjustDate, new { htmlAttributes = new { @id = "AdjustDate", @class = "datepicker" } })
                    @Html.ValidationMessageFor(model => model.AdjustDate, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4">
                    @Html.LabelFor(model => model.InvoiceNo, htmlAttributes: new { @class = "control-label" })
                    <br />
                    @Html.EditorFor(model => model.InvoiceNo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.InvoiceNo, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4">
                    @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label" })
                    <br />
                    @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>
    </div>


    <div class="row details">
        <table class="table table-responsive">
            <tr style="background-color:#4CAF50;color:#ffffff">
                <th>Product</th>
                <th>Excess Qty</th>
                <th>Less Qty</th>
                <th>Unit Price</th>
                <th>&nbsp;</th>
            </tr>
            <tr class="mycontainer" id="mainrow">
                <td style="width:275px">
                    <input type="text" id="product" name="product" class="form-control" />
                    <input type="hidden" id="hfProductId" name="productId" />
                    <span class="error">Please select a product</span>
                </td>
                <td>
                    <input type="text" id="excessQty" class="form-control" autocomplete="off" value="0" style="text-align:right" />
                    <span class="error">Valid quantity required</span>
                </td>

                <td>
                    <input type="text" id="lessQty" class="form-control" autocomplete="off" value="0" style="text-align:right" />
                    <span class="error">Valid quantity required</span>
                </td>
                <td>
                    <input type="text" id="unitPrice" class="form-control" autocomplete="off" style="text-align:right" />
                    <span class="error">Valid Price required</span>
                </td>
                <td>
                    <button type="button" id="add" class="btn btn-success pull-right"><i class="fa fa-plus-circle"></i>&nbsp; Add</button>
                </td>
            </tr>
        </table>
        <div id="orderItems">
            <table class="table" id="orderdetailsItems">
                <thead>
                    <tr style="background-color:#4CAF50;color:#ffffff;font-weight:bold">
                        <th>Sl</th>
                        <th>Product</th>
                        <th>Excess Qty</th>
                        <th>Less Qty</th>
                        <th>Unit Price</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody id="itemDetails"></tbody>
            </table>
            <span id="orderItemError" class="danger"></span>
        </div>
    </div>


    <div class="row">
        <div class="col-md-offset-9 pull-right">
            <table>
                <tr>
                    <td></td>
                    <td>
                        <input id="submit" type="submit" value="Submit" onclick='return confirm("Are you sure to submit?");' class="btn btn-primary pull-right" style="padding:5px 10px;margin-top:5px" />
                        <a href="@Url.Action("Index",new { companyId = Model.CompanyId})" id="cancel" class="btn btn-danger pull-right" style="padding:5px 10px;margin-right:10px;margin-top:5px">Cancel</a>

                    </td>
                </tr>
            </table>
        </div>
    </div>
}


<script src="~/Scripts/ApplicationScripts/Inventory_Feed/Stock/StockAdjust.js"></script>
@section Scripts {

    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script type="text/javascript">
        
        $(function () {
            $("#product").autocomplete({

                source: function (request, response) {
                    var companyId = $("#companyId").val();
                    var productType = companyId == 8 ? "R" : "F";
                    $.ajax({
                        url: '/Products/AutoComplete/',
                        //data: "{ 'prefix': '" + request.term + "'}",
                        data: '{"prefix":"' + request.term + '", "productType":"' + productType + '"}',
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            //alert(response.responseText);
                        },
                        failure: function (response) {
                            //alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#hfProductId").val(i.item.val);
                },
                minLength: 1,
                change: function (event, ui) {
                    loadRawMaterialStockPrice(ui.item.val);
                }

            }).focus(function () {
                $(this).autocomplete("search");
            });
        });

        function loadRawMaterialStockPrice(productId) {
            $.ajax({
                type: "GET",
                url: "/Products/GetRawMaterialStockUnitPrice",
                data: { 'id': productId, 'strDate': $("#AdjustDate").val() },
                success: function (data) {
                   
                    $('#unitPrice').val(data);
                },
                error: function (error) {
                    console.log(error);
                }
            });
        }
    </script>
}
