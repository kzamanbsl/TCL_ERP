@model KGERP.ViewModel.StoreViewModel
<table class="table">
    <tr style="background-color:#4CAF50;color:#FFFFFF">
        <th>
            SL
        </th>
        <th>
            Code
        </th>
        <th>
            Raw Material
        </th>
        <th>
            Unit
        </th>
        <th>
            Purchase Qty
        </th>
        <th>
            Purchase Rate
        </th>
        <th>
            QC Rate
        </th>
        <th>
            Amount
        </th>
        <th>
            Bag Qty
        </th>

    </tr>
    @for (int i = 0; i < Model.StoreDetails.Count(); i++)
    {



        @*<tr>

                <td>
                    @Html.Hidden("storeDetails.Index", (@i))
                    @Html.Hidden("storeDetails[" + i + "].ProductId", Model[i].ProductId)
                    @Html.DisplayFor(model => model[i].ProductCode)
                </td>

                <td>
                    @Html.DisplayFor(model => model[i].ProductName)
                </td>
                <td>
                    @Html.DisplayFor(model => model[i].UnitName)
                </td>
                <td>
                    @Html.TextBox("storeDetails[" + i + "].Qty", Model[i].Qty, new { @readonly = "readonly", @style = "padding-right:2px;border: 1px solid #999;width:100px;font-weight:bold;text-align:right;background-color:#EEEEEE" })
                </td>
                <td>
                    @Html.TextBox("storeDetails[" + i + "].PurchaseRate", Model[i].PurchaseRate, new { @readonly = "readonly", @style = "padding-right:2px;border: 1px solid #999;width:70px;text-align:right;background-color:#EEEEEE" })
                </td>
                <td>
                    @Html.TextBox("storeDetails[" + i + "].UnitPrice", Model[i].UnitPrice, new { @autocomplete = "off", @style = "width:70px;padding-right:2px;border: 1px solid #999;text-align:right;" })
                </td>

                <td>

                    @Html.TextBox("storeDetails[" + i + "].Amount", Model[i].PurchaseQty * Model[i].UnitPrice, new { @readonly = "readonly", @autocomplete = "off", @style = "width:70px;padding-right:2px;border: 1px solid #999;text-align:right;background-color:#EEEEEE" })
                </td>
                <td>
                    @Html.TextBox("storeDetails[" + i + "].BagQty", Model[i].BagQty, new { @autocomplete = "off", @style = "width:70px;padding-right:2px;border: 1px solid #999;text-align:right;" })
                </td>
            </tr>*@

    




        <tr>
            <td width="5%">
                @(i + 1)
                @Html.HiddenFor(model => model.StoreDetails[i].ProductId)

            </td>
            <td width="10%">
                @Html.DisplayFor(model => model.StoreDetails[i].ProductCode)
            </td>
            <td width="25%">
                @Html.DisplayFor(model => model.StoreDetails[i].ProductName)
            </td>
            <td width="10%">
                @Html.DisplayFor(model => model.StoreDetails[i].UnitName)
            </td>
            <td width="10%">
                @Html.EditorFor(model => model.StoreDetails[i].Qty, new { htmlAttributes = new { @readonly = "readonly", @class = "", @style = "text-align:right;padding-right:2px;border: 1px solid #999;width:100px;background-color:#EEEEEE;", @autocomplete = "off", } })
            </td>
            <td width="10%">
                @Html.EditorFor(model => model.StoreDetails[i].PurchaseRate, new { htmlAttributes = new { @readonly = "readonly", @class = "", @style = "text-align:right;padding-right:2px;border: 1px solid #999;background-color:#EEEEEE;width:100px;", @autocomplete = "off", } })
                @Html.ValidationMessageFor(model => model.StoreDetails[i].PurchaseRate, "", new { @class = "text-danger" })
            </td>

            <td width="10%">
                @Html.EditorFor(model => model.StoreDetails[i].UnitPrice, new { htmlAttributes = new { @class = "", @style = "text-align:right;padding-right:2px;border: 1px solid #999;width:100px;", @autocomplete = "off", } })
                @Html.ValidationMessageFor(model => model.StoreDetails[i].UnitPrice, "", new { @class = "text-danger" })
            </td>


            <td width="10%">
                @Html.EditorFor(model => model.StoreDetails[i].Amount, new { htmlAttributes = new { @readonly = "readonly", @class = "", @style = "text-align:right;padding-right:2px;border: 1px solid #999;width:100px;background-color:#EEEEEE;", @autocomplete = "off", } })
            </td>

            <td width="10%">
                @Html.EditorFor(model => model.StoreDetails[i].BagQty, new { htmlAttributes = new { @class = "", @style = "text-align:right;padding-right:2px;border: 1px solid #999;width:100px;", @autocomplete = "off", } })
                @Html.ValidationMessageFor(model => model.StoreDetails[i].BagQty, "", new { @class = "text-danger" })
            </td>
        </tr>

    }
    @*<tr style="background-color:orange;color:#000000">
            <td colspan="5"></td>
            <td>
                <b>Total Amount</b>
            </td>
            <td colspan="2">
                <b id="sumOfReceiveQty">@Model.Sum(x => Convert.ToDecimal(x.PurchaseQty) * x.UnitPrice)</b>
            </td>
        </tr>*@
    <tr>
        <td colspan="9">
            <br />
            <input type="submit" value="Submit" data-confirm="Are you sure to submit?" class="btn btn-success pull-right" />
            <a href="@Url.Action("RMStoreIndex", "Store", new { companyId = Model.Store.CompanyId})" class="btn btn-danger" style="float:right;margin-right:10px">
                Close <i class="fa fa-close" aria-hidden="true"></i>
            </a>
            &nbsp;
        </td>
    </tr>

</table>

<script>
    function stopRKey(evt) {
        var evt = (evt) ? evt : ((event) ? event : null);
        var node = (evt.target) ? evt.target : ((evt.srcElement) ? evt.srcElement : null);
        if ((evt.keyCode == 13) && (node.type == "text")) { return false; }
    }
    document.onkeypress = stopRKey;


    jQuery(document).ready(function () {
        jQuery('[data-confirm]').click(function (e) {
            if (!confirm(jQuery(this).attr("data-confirm"))) {
                e.preventDefault();
            }
        });
    });
    function calculateSum() {
        var sum = 0;
        $(".amount").each(function () {
            var value = $(this).val();
            console.log(value);
            if (!isNaN(value) && value.length !== 0) {
                sum += parseFloat(value);
            }
            $('#sumOfReceiveQty').text(sum);
        });
    }
</script>