

@using PagedList.Mvc;
@model PagedList.IPagedList<KGERP.Data.CustomModel.SoreProductQty>
@using PagedList;

@*@model ICollection<KGERP.Data.CustomModel.SoreProductQty>*@

@{
    ViewBag.Title = "GetStoreProduct";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<div class="row">
    @using (Html.BeginForm("GetStoreProduct", "Store", FormMethod.Get))
    {
        <div class="col-md-4">
            <h4>
                <b>
                    Store Inventory
                </b>
            </h4>
        </div>
        <div class="col-md-8 input-group">
            <div class="col-md-8">@Html.TextBox("searchText", null, new { @autocomplete = "off", @class = "form-control", @placeholder = "Search..." })</div>
            <div class="col-md-4 input-append">
                <button type="submit" class="btn btn-success left"><i class="fa fa-search"></i></button>
                <a href="@Url.Action("GetRMStockReport","Report")" title="Download Invoice" target="_blank" class="btn btn-warning">
                    @*<i class="fa fa-download" aria-hidden="true"></i>*@
                    Report
                </a>
            </div>


        </div>

    }
    @*<div>
            <h3><b style="margin-left:20px">Store Inventory</b></h3>
        </div>*@
    <br />

</div>
<div style="width:auto">
    <table class="table table-striped">
        <tr style="background-color:#009270;color:#FFFFFF">
            @*<th>
                    SL
                </th>*@
            <th>
                Store  Name
            </th>
            <th>
                Product  Name
            </th>
            <th>
                Quantity
            </th>


        </tr>

        @foreach (var item in Model)
        {
            <tr>

                @*<td>
                        @(item.Index + 1)
                    </td>*@

                <td>
                    @Html.DisplayFor(modelItem => item.StoreName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>


            </tr>


        }

    </table>
</div>

@if (Model.PageCount > 1)
{
    <span class="btn btn-success">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    </span>
    <span class="checkbox">
        @Html.PagedListPager(Model, Page_No => Url.Action("GetRMStoreProduct", "Store",
                new { Page_No, Sorting_Order = Request.QueryString["searchText"] }))
    </span>
}

