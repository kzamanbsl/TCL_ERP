@using KG.Core.Services
@using KGERP.Utility

@{

    ViewData["Title"] = "Block's";
    Layout = "~/Views/Shared/_Layout.cshtml";


}
@model KGERP.Service.Implementation.Configuration.VMCommonProductSubCategory
<style type="text/css">

    input, select, textarea {
        max-width: 100%;
    }
</style>
@if (Model.CompanyFK == (int)CompanyNameEnum.GloriousLandsAndDevelopmentsLimited)
{
    <section class="content-header">
        <h1>
            Block's
        </h1>
        <ol class="breadcrumb">
            <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i>Dashboard</a></li>
            <li class="active">Block's</li>
        </ol>
    </section>
}
else
{
    <section class="content-header">
        <h1>
            Floor's
        </h1>
        <ol class="breadcrumb">
            <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i>Dashboard</a></li>
            <li class="active">Floor's</li>
        </ol>
    </section>

}


@using (Html.BeginForm("ProductSubCategoryBlock", "Configuration", FormMethod.Post, new { id = "commonProductSubCategoryFormId", @class = "formValidator", onreset = "resetDDL();" }))
{
    <section class="content">
        <div class="row">
            <div class="col-md-12">
                <div class="col-md-3">
                    <div class="box">
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="box-danger">
                            <div class="box-header">
                                @if (Model.CompanyFK == (int)CompanyNameEnum.GloriousLandsAndDevelopmentsLimited)
                                {
                                    <h4>Add Block's</h4>
                                }
                                else
                                {
                                    <h4>Add Floor's</h4>
                                }
                            </div>
                            <!-- /.box-header -->
                            <div class="box-body">
                                @Html.HiddenFor(model => model.ID, new { id = "subcategoryId" })
                                @Html.HiddenFor(model => model.ActionId, new { id = "ActionId" })
                                @Html.HiddenFor(model => model.CompanyFK, new { id = "CompanyFK" })
                                @Html.HiddenFor(model => model.ProductType, new { id = "ProductType" })


                                @*<div class="form-group" style="padding:0px">
                                        <label for="message-text" class="col-form-label">Project:</label>
                                        @Html.EditorFor(model => model.CategoryName, new { htmlAttributes = new { @autocomplete = "on", @class = "form-control", @name = "Brand", @id = "txtCategoryName" } })
                                        @Html.HiddenFor(model => model.Common_ProductCategoryFk, new { id = "ddlCommonProductCategoryFk" })
                                        @Html.ValidationMessageFor(model => model.Common_ProductCategoryFk, "", new { @class = "text-danger"})
                                    </div>*@

                                <div class="form-group">
                                    @Html.DropDownListFor(model => model.Common_ProductCategoryFk, new SelectList(Model.ProductCategoryList, "Value", "Text"), "---Select Project---", new { id = "ProductCategoryFk", @class = "searchingDropdown customStyle form-control", required = "required" })
                                    @Html.ValidationMessageFor(model => model.Common_ProductCategoryFk, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.TextBoxFor(model => model.Name, new { id = "txtSubcategoryName", @class = "form-control input-sm", @placeholder = "Block", required = "true" })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                                @*<div class="form-group">
                                        @Html.TextBoxFor(model => model.Code, new { id = "txtSubcategoryCode", @class = "form-control input-sm", @placeholder = "Code", required = "true" })
                                        @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                                    </div>*@

                                <div class="form-group">
                                    <div class="col-md-5">
                                        <button type="button" onclick="resetForm()" class="btn btn-secondary" data-dismiss="modal">Reset</button>
                                    </div>
                                    <div class="col-md-7">
                                        <button type="submit" id="btnSave" class="btn btn-primary btn-block"><i class='fa fa-edit'></i> Add</button>
                                    </div>
                                </div>
                            </div>
                            <div class="box-footer">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-9">
                    <div class="box">
                        <div class="box-danger">
                            <div class="box-header">
                                @if (Model.CompanyFK == (int)CompanyNameEnum.GloriousLandsAndDevelopmentsLimited)
                                {
                                    <h4>Block's List</h4>
                                }
                                else
                                {
                                    <h4>Floor's List</h4>
                                }
                            </div>
                            <!-- /.box-header -->
                            <div class="box-body">
                                <div class="table-responsive col-md-12">
                                    <table id="KgErpDataTable" style="width:100%; background-color:#ddd;" class="table table-striped">
                                        <thead>
                                            <tr>
                                                <th>SL</th>
                                                <th>Project</th>
                                                @if (Model.CompanyFK == (int)CompanyNameEnum.GloriousLandsAndDevelopmentsLimited)
                                                {


                                                    <th>Block</th>
                                                }
                                                else
                                                {
                                                    <th>Floor</th>

                                                }

                                                @*<th>Code</th>*@

                                                <th>Action</th>
                                            </tr>
                                        </thead>
                                        @{int sl = 0;
                                        }
                                        <tbody>
                                            @foreach (var item in Model.DataList)
                                            {

                                                <tr>
                                                    <td>@(++sl)</td>
                                                    <td>
                                                        <input type="hidden" id="commonProductCategoryFk_@item.ID" name="User_MenuFk" value="@item.Common_ProductCategoryFk" />
                                                        @item.CategoryName
                                                    </td>
                                                    <td id="tdSubCategoryName_@item.ID">@item.Name</td>
                                                    @*<td id="tdSubCategoryCode_@item.ID">@item.Code</td>*@

                                                <td>

                                                    <a id="@item.ID" onclick=" makeEditble(this);" class="linkPointer" title="Edit"><i class="fa fa-pencil-square-o"></i></a>
                                                    <a id="@item.ID" onclick="makeDeletable(@item.ID);" class="linkPointer" data-toggle="modal" data-target="#deleteModal" title="Delete"
                                                       data-placement="top">
                                                        <i class="glyphicon glyphicon-trash" aria-hidden="true"></i>
                                                    </a>

                                                    @if (Model.CompanyFK == (int)CompanyNameEnum.GloriousLandsAndDevelopmentsLimited)
                                                    {

                                                        <a href="~/Configuration/ProductPlotOrFlat?companyId=@item.CompanyFK&subCategoryId=@item.ID&productType=@Model.ProductType" class="btn btn-success btn-sm">Plot's</a>
                                                    }
                                                    else
                                                    {
                                                        <a href="~/Configuration/ProductPlotOrFlat?companyId=@item.CompanyFK&subCategoryId=@item.ID&productType=@Model.ProductType" class="btn btn-success btn-sm">Flat's</a>

                                                    }
                                                    <a href="~/Configuration/RSCommonCustomerBooking?companyId=@item.CompanyFK&vendorId=0&ProductSubCategoryId=@item.ID" class="btn btn-info btn-sm">Booking List</a>
                                                </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                            <div class="box-footer">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

}

@using (Html.BeginForm("ProductSubCategoryBlock", "Configuration", FormMethod.Post, new { id = "commonProductSubCategoryDeleteFormId", @class = "formValidator", onreset = "resetDDL();" }))
{
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    @Html.HiddenFor(model => model.ID, new { id = "subcategoryIdDelete" })
    @Html.HiddenFor(model => model.ActionId, new { id = "ActionIdDelete" })
    @Html.HiddenFor(model => model.CompanyFK, new { id = "CompanyFKDelete" })

    <div class="modal fade" id="deleteModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" onclick="resetForm()" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b>Block Delete</b></h5>
                </div>
                <div class="modal-body">
                    <div style="text-align:center">
                        <h3>Are you sure to delete this Block?</h3>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" id="btnClose" onclick="resetForm()" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" id="btnDelete" class="deleteId btn btn-primary"><i class="glyphicon glyphicon-check"></i> Confirm</button>
                </div>
            </div>
        </div>
    </div>
}

@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            

             $("#txtCategoryName").autocomplete({
                source: function (request, response) {
                    //console.log(request);
                    //console.log(response);

                    $.ajax({
                        url:"@Url.Action("AutoCompleteProductCategoryGet", "Configuration")",
                        //data: "{ 'prefix': '" + request.term + "'}",
                        data: { companyId: "@Model.CompanyFK", prefix: request.term, productType : "@Model.ProductType" },
                        dataType: "json",
                        type: "get",
                        cache: true,
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            //alert(response.responseText);
                        },
                        failure: function (response) {
                            //alert(response.responseText);
                        }
                    });
                },

                select: function (e, i) {
                    $("#ddlCommonProductCategoryFk").val(i.item.val);


                },
                minLength: 1,
                cache: true

            }).focus(function () {
                $(this).autocomplete("search");
            });
        });
        function makeEditble(elem) {
            if (elem !== null) {
                var rowId = elem.id;
                $('#subcategoryId').val(rowId);
                $('#ActionId').val(2);
                $('#btnSave').html("<i class='fa fa-edit'></i>&nbsp;Update");
                $('#ProductCategoryFk').val($('#commonProductCategoryFk_' + rowId).val().trim()).trigger('change');
                $('#txtSubcategoryName').val($('#tdSubCategoryName_' + rowId).text().trim());
                $('#txtSubcategoryCode').val($('#tdSubCategoryCode_' + rowId).text().trim());
                window.scrollTo({ top: 0, behavior: 'smooth' });
            }
        }
        function makeDeletable(id) {
            if (id !== null) {
                $('#subcategoryIdDelete').val(id);
                $('#ActionIdDelete').val(3);
            }
        }
        function resetForm() {
            $('#commonProductSubCategoryFormId')[0].reset();
            $('#btnSave').html("<i class='fa fa-edit'></i>&nbsp;Add");
        }
    </script>
}

