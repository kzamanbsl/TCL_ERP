@using KG.Core.Services

@{
    ViewData["Title"] = "New Vendor";
    Layout = "~/Views/Shared/_Layout.cshtml";

}
@model KGERP.Service.Implementation.Configuration.VMCommonSupplier
<style type="text/css">

    input, select, textarea {
        max-width: 100%;
    }
</style>
<section class="content-header">
    <h1>
        New Vendor
    </h1>
    <ol class="breadcrumb">
        <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i>Dashboard</a></li>
        <li class="active">New Vendor</li>
    </ol>
</section>
<section class="content">
    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm("CommonSupplier", "Configuration", FormMethod.Post, new { id = "commonSupplierformId", @class = "formValidator", @enctype = "multipart/form-data" }))
            {
                <div class="box">
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="box-danger">

                        <!-- /.box-header -->
                        <div class="box-body">

                            @Html.HiddenFor(model => model.ID, new { id = "SupplierId" })
                            @Html.HiddenFor(model => model.ActionId, new { id = "ActionId" })
                            @Html.HiddenFor(model => model.CompanyFK, new { id = "CompanyFK" })

                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="form-label">Business/Company Name<sup class="text-danger" title="Required"><b>*</b></sup></label>
                                        @Html.TextBoxFor(model => model.Name, new { id = "txtSupplierName", @class = "form-control", @placeholder = "Type business name", required = "required" })
                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="form-label">BIN</label>
                                        @Html.TextBoxFor(model => model.BIN, new { id = "txtBIN", @class = "form-control", @placeholder = "Type BIN" })
                                        @Html.ValidationMessageFor(model => model.BIN, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="form-label">Trade Licence Numbe</label>
                                        @Html.TextBoxFor(model => model.TradeLicenseNumber, new { id = "txtTradeLicenseNumber", @class = "form-control", @placeholder = "Type trade licence" })
                                        @Html.ValidationMessageFor(model => model.TradeLicenseNumber, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="form-label">TIN</label>
                                        @Html.TextBoxFor(model => model.TIN, new { id = "txtTIN", @class = "form-control", @placeholder = "Type TIN" })
                                        @Html.ValidationMessageFor(model => model.TIN, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="form-label">Contact Name<sup class="text-danger" title="Required"><b>*</b></sup></label>
                                        @Html.TextBoxFor(model => model.ContactPerson, new { id = "txtContactPerson", @class = "form-control", @placeholder = "Type contact name", required = "required" })
                                        @Html.ValidationMessageFor(model => model.ContactPerson, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="form-label">NID Number</label>
                                        @Html.TextBoxFor(model => model.NID, new { id = "txtNidNumber", @class = "form-control", @placeholder = "Type NID" })
                                        @Html.ValidationMessageFor(model => model.NID, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="form-label">Phone Number<sup class="text-danger" title="Required"><b>*</b></sup></label>
                                        @Html.TextBoxFor(model => model.Phone, new { id = "txtPhone", @class = "form-control", @placeholder = "Type phone number", required = "required" })
                                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="form-label">Email Address</label>
                                        @Html.TextBoxFor(model => model.Email, new { id = "txtEmail", type = "email", @class = "form-control", @placeholder = "Type email address" })
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="form-label">Select Country<sup class="text-danger" title="Required"><b>*</b></sup></label>
                                        @Html.DropDownListFor(model => model.Common_CountriesFk, Model.CountryList as SelectList, "==Select Country==", new { id = "ddlCommon_CountriesFk", @class = "searchingDropdown form-control", required = "required" })
                                        @Html.ValidationMessageFor(model => model.Common_CountriesFk, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <label class="form-label">Business/Company Address<sup class="text-danger" title="Required"><b>*</b></sup></label>
                                        @Html.TextAreaFor(model => model.Address, new { id = "txtAddress", @class = "form-control", @placeholder = "Type business address", required = "required" })
                                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="form-label">Supplier Category<sup class="text-danger" title="Required"><b>*</b></sup></label>
                                        @Html.DropDownListFor(model => model.VendorTypeId, new SelectList(Model.SupplierTypeList.OrderBy(order => order.Text), "Value", "Text"), "==Select Supplier Category==", new { id = "ddlSupplierTypeId", @class = "form-control searchingDropdown", required = "required", style = "width:100%" })
                                        @Html.ValidationMessageFor(model => model.VendorTypeId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="form-label">Select Bank</label>
                                        @Html.DropDownListFor(model => model.BankId, new SelectList(Model.BankList.OrderBy(order => order.Text), "Value", "Text"), "==Select Bank==", new { id = "ddlBankId", @class = "form-control searchingDropdown", style = "width:100%" })
                                        @Html.ValidationMessageFor(model => model.BankId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="form-label">Select Branch</label>
                                        @Html.DropDownListFor(model => model.BranchId, new SelectList(Model.BankBranchList.OrderBy(order => order.Text), "Value", "Text"), "==Select Branch==", new { id = "ddlBankBranchId", @class = "form-control searchingDropdown", style = "width:100%" })
                                        @Html.ValidationMessageFor(model => model.BranchId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="form-label">Bank Routing Number</label>
                                        @Html.TextBoxFor(model => model.BankRoutingNumber, new { id = "txtBankRoutingNumber", @class = "form-control", @placeholder = "Type bank routing number" })
                                        @Html.ValidationMessageFor(model => model.BankRoutingNumber, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="form-label">Bank Account Name</label>
                                        @Html.TextBoxFor(model => model.ACName, new { id = "txtACName", @class = "form-control", @placeholder = "Type account name" })
                                        @Html.ValidationMessageFor(model => model.ACName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="message-text" class="f">Bank Account Number</label>
                                        @Html.TextBoxFor(model => model.ACNo, new { id = "txtACNo", @class = "form-control", @placeholder = "Type account number" })
                                        @Html.ValidationMessageFor(model => model.ACNo, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <label for="message-text" class="col-form-label">Remarks</label>
                                        @Html.TextAreaFor(model => model.Remarks, new { id = "txtRemarks", @class = "form-control", @placeholder = "Type remarks" })
                                        @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <div class="col-md-4"></div>
                                        <div class="col-md-4">
                                            <button type="button" onclick="resetForm()" class="btn btn-secondary btn-block w-100" data-dismiss="modal">Reset</button>
                                        </div>
                                        <div class="col-md-4">
                                            <button type="submit" id="btnSave" class="btn btn-primary btn-block w-100"><i class='fa fa-plus'></i> Add Supplier</button>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>

                        <div class="box-footer"></div>

                        <div class="box">
                            <div class="box-danger">
                                <div class="box-header">

                                </div>
                                <!-- /.box-header -->
                                <div class="box-body">
                                    <div>
                                        <table id="KgErpDataTable" style="background-color:#ddd;" class="table table-striped">
                                            <thead>
                                                <tr>
                                                    <th>SL</th>
                                                    <th>Supplier Id</th>
                                                    <th>Business / Company Name</th>
                                                    <th>Contact Name</th>
                                                    <th>Phone</th>
                                                    <th>Address</th>
                                                    <th>Remarks</th>
                                                    <th>Action</th>
                                                    <th>Details</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @{int sl = 0;}
                                                @foreach (var item in Model.DataList)
                                                {
                                                    <tr>
                                                        <td>@(++sl)</td>
                                                        <td>@item.Code</td>
                                                        <td>@item.Name</td>
                                                        <td>@item.ContactPerson</td>
                                                        <td>@item.Phone</td>
                                                        <td>@item.Address, @item.Country</td>
                                                        <td>@(item.Remarks == null ? "N/A" :  item.Remarks)</td>
                                                        <td>
                                                            <a id="@item.ID" onclick="makeEditble(@item.ID);" class="linkPointer" title="Edit"><i class="fa fa-pencil-square-o"></i></a>
                                                            <a id="@item.ID" onclick="makeDeletable(@item.ID);" class="linkPointer" data-toggle="modal" data-target="#deleteModal" title="Delete"
                                                               data-placement="top">
                                                                <i class="glyphicon glyphicon-trash" aria-hidden="true"></i>
                                                            </a>
                                                        </td>
                                                        <td>
                                                            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#detailModal_@item.ID">View Details</button>
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>

                                        @foreach (var item in Model.DataList)
                                        {
                                            <div class="modal fade" id="detailModal_@item.ID" tabindex="-1" role="dialog" aria-labelledby="detailModalLabel@item.ID" aria-hidden="true">
                                                <div class="modal-dialog" role="document">
                                                    <div class="modal-content">
                                                        <div class="modal-header">
                                                            <h3 class="modal-title text-primary" id="detailModalLabel_@item.ID">Details of @item.Name</h3>
                                                        </div>
                                                        <div class="modal-body">
                                                            <div class="row">
                                                                <div class="col-md-6">
                                                                    <p><strong>Category: </strong> @item.VendorTypeName</p>
                                                                </div>
                                                                <div class="col-md-6">
                                                                    <p><strong>Code: </strong> @item.Code</p>
                                                                </div>
                                                                <div class="col-md-6">
                                                                    <p><strong>Contact: </strong> @item.ContactPerson</p>
                                                                </div>
                                                                <div class="col-md-6">
                                                                    <p><strong>Phone: </strong> @item.Phone</p>
                                                                </div>
                                                                <div class="col-md-6">
                                                                    <p><strong>Email: </strong> @(item.Email == null ? "N/A" :  item.Email)</p>
                                                                </div>
                                                                <div class="col-md-6">
                                                                    <p><strong>NID: </strong> @(item.NID == null ? "N/A" :  item.NID)</p>
                                                                </div>
                                                                <div class="col-md-6">
                                                                    <p><strong>BIN: </strong> @(item.BIN == null ? "N/A" :  item.BIN)</p>
                                                                </div>
                                                                <div class="col-md-6">
                                                                    <p><strong>TIN: </strong> @(item.TIN == null ? "N/A" :  item.TIN)</p>
                                                                </div>
                                                                <div class="col-md-6">
                                                                    <p><strong>License: </strong> @(item.TradeLicenseNumber == null ? "N/A" :  item.TradeLicenseNumber)</p>
                                                                </div>
                                                                <div class="col-md-6">
                                                                    <p><strong>Bank: </strong> @(item.BankName == null ? "N/A" :  item.BankName)</p>
                                                                </div>
                                                                <div class="col-md-6">
                                                                    <p><strong>Branch: </strong> @(item.BranchName == null ? "N/A" :  item.BranchName)</p>
                                                                </div>
                                                                <div class="col-md-6">
                                                                    <p><strong>A/C Name: </strong> @(item.ACName == null ? "N/A" :  item.ACName)</p>
                                                                </div>
                                                                <div class="col-md-6">
                                                                    <p><strong>A/C No: </strong> @(item.ACNo == null ? "N/A" :  item.ACNo)</p>
                                                                </div>
                                                                <div class="col-md-6">
                                                                    <p><strong>Bank Routing: </strong> @(item.BankRoutingNumber == null ? "N/A" :  item.BankRoutingNumber)</p>
                                                                </div>
                                                                <div class="col-md-6">
                                                                    <p><strong>Address: </strong> @item.Address, @item.Country</p>
                                                                </div>
                                                                <div class="col-md-6">
                                                                    <p><strong>Remarks: </strong> @(item.Remarks == null ? "N/A" :  item.Remarks)</p>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="modal-footer">
                                                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }

                                    </div>
                                </div>
                                <div class="box-footer">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

    </div>
</section>


@using (Html.BeginForm("CommonSupplier", "Configuration", FormMethod.Post, new { id = "commonSupplierformId", @class = "formValidator", @enctype = "multipart/form-data" }))
{
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    @Html.HiddenFor(model => model.ID, new { Value = "", id = "SupplierIdDelete" })
    @Html.HiddenFor(model => model.ActionId, new { Value = "", id = "ActionIdDelete" })
    @Html.HiddenFor(model => model.CompanyFK, new { Value = "", id = "CompanyFKDelete" })

    <div class="modal fade" id="deleteModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b>Supplier Delete</b></h5>

                </div>
                <div class="modal-body">
                    <div style="text-align:center">
                        <h3>Are you sure to delete this Supplier?</h3>
                    </div>

                </div>

                <div class="modal-footer">
                    <button type="button" id="btnClose" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" id="btnDelete" class="deleteId btn btn-primary"><i class="glyphicon glyphicon-check"></i>Confirm</button>
                </div>
            </div>
        </div>
    </div>
}

@section scripts {

    <script type="text/javascript">
        $(document).ready(function () {
            $("#ddlCommon_CountriesFk").val(19).trigger('change');
        });

        function makeEditble(id) {

            if (id !== null) {
                $.ajax({
                    type: "get",
                    url: "@Url.Action("CommonSupplierByIDGet", "Configuration")",
                    data: { id: id },
                    datatype: "json",
                    traditional: true,
                    success: function (data) {

                        $('#btnSave').html("<i class='fa fa-edit'></i>&nbsp;Update");
                        $('#SupplierId').val(data.ID);
                        $('#ActionId').val(2);
                        $('#CompanyFK').val(data.CompanyFK);
                        $('#txtSupplierName').val(data.Name);
                        $('#txtTradeLicenseNumber').val(data.TradeLicenseNumber);
                        $('#txtContactPerson').val(data.ContactPerson);
                        $('#txtNidNumber').val(data.NID);
                        $('#txtPhone').val(data.Phone);
                        $('#txtEmail').val(data.Email);
                        $('#ddlCommon_CountriesFk').val(data.Common_CountriesFk).change();
                        $('#txtAddress').val(data.Address);
                        $('#txtBankName').val(data.BankName);
                        $('#txtBranchName').val(data.BranchName);
                        $('#txtACName').val(data.ACName);
                        $('#txtACNo').val(data.ACNo);
                        $('#txtBankRoutingNumber').val(data.BankRoutingNumber);
                        $('#txtRemarks').val(data.Remarks);

                        window.scrollTo({ top: 0, behavior: 'smooth' });
                    }
                });
            }
        }

        function resetForm() {
            $('#commonSupplierformId')[0].reset();
            $('#btnSave').html("<i class='fa fa-edit'></i>&nbsp;Add");

        }

        function makeDeletable(id) {
            if (id !== null) {
                $('#SupplierIdDelete').val(id);
                $('#ActionIdDelete').val(3);
                $('#CompanyFKDelete').val("@Model.CompanyFK");
            }
        }

        $('#ddlBankId').on('change', function (event) {
            var bankId = $("#ddlBankId option:selected").val();
            var showBarnchList = $("#ddlBankBranchId");
            $.ajax({
                type: "GET",
                url: "/ChequeRegister/GetBranchBybankId",
                dataType: "json",
                data: { bankId: bankId },
                success: function (data) {
                    showBarnchList.empty();
                    showBarnchList.append("<option selected disabled>==Select Branch==</option>");
                    $.each(data, function (index, item) {
                        showBarnchList.append($('<option>', {
                            value: item.BranchId,
                            text: item.BranchName
                        }));
                    });
                    if (isEdited) {
                        $('#ddlBankBranchId').val(bankBranchId).trigger('change');
                    }
                }
            });
        });



    </script>
}