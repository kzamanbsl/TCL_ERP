
@using KG.Core.Services

@{
    ViewData["Title"] = "Suppliers / Exporters";
    Layout = "~/Views/Shared/_Layout.cshtml";

}
@model KGERP.Service.Implementation.Configuration.VMCommonSupplier
<style type="text/css">

    input, select, textarea {
        max-width: 100%;
    }
</style>
<section class="content-header">
    <h1>
        Suppliers
    </h1>
    <ol class="breadcrumb">
        <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i>Dashboard</a></li>
        <li class="active">Suppliers</li>
    </ol>
</section>
<section class="content">
    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm("CommonSupplier", "Configuration", FormMethod.Post, new { id = "commonSupplierformId", @class = "formValidator", @enctype = "multipart/form-data" }))
            {
                <div class="box">
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="box-danger">

                        <!-- /.box-header -->
                        <div class="box-body">

                            @Html.HiddenFor(model => model.ID, new { id = "SupplierId" })
                            @Html.HiddenFor(model => model.ActionId, new { id = "ActionId" })
                            @Html.HiddenFor(model => model.CompanyFK, new { id = "CompanyFK" })

                            <div class="row">

                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="message-text" class="col-form-label">Supplier:</label>
                                        @Html.TextBoxFor(model => model.Name, new { id = "txtSupplierName", @class = "form-control", @placeholder = "Supplier Name", required = "required" })
                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label for="message-text" class="col-form-label">Phone:</label>
                                        @Html.TextBoxFor(model => model.Phone, new { id = "txtPhone", @class = "form-control", @placeholder = "Phone" })
                                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label for="message-text" class="col-form-label">Email:</label>
                                        @Html.TextBoxFor(model => model.Email, new { id = "txtEmail", type = "email", @class = "form-control", @placeholder = "Email" })
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>


                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label for="message-text" class="col-form-label">Contact Person:</label>
                                        @Html.TextBoxFor(model => model.ContactPerson, new { id = "txtContactPerson", @class = "form-control", @placeholder = "Contact Person" })
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                @*<div class="col-md-2">
                                        <div class="form-group">
                                            <label for="message-text" class="col-form-label"> Is Foreign?:</label>
                                            @Html.CheckBoxFor(model => model.IsForeign, new { id = "chkIsForeign" })
                                        </div>
                                    </div>*@

                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label for="message-text" class="col-form-label">Country:</label>
                                        @Html.DropDownListFor(model => model.Common_CountriesFk, Model.CountryList as SelectList, "---Select Country---", new { id = "ddlCommon_CountriesFk", @class = "searchingDropdown form-control", required = "required" })
                                        @Html.ValidationMessageFor(model => model.Common_CountriesFk, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="message-text" class="col-form-label">Address:</label>
                                        @Html.TextAreaFor(model => model.Address, new { id = "txtAddress", @class = "form-control", @placeholder = "Address" ,@rows="1"})
                                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                @*<div class="col-md-3">
                                        <div class="form-group">
                                            <label for="message-text" class="col-form-label">Supplier Type:</label>
                                            @Html.DropDownListFor(model => model.SupplierTypeFk, Model.SupplierTypeList as SelectList, "--Supplier Type--", new { id = "ddSupplierTypeFk", @class = "form-control", required = "true" })
                                            @Html.ValidationMessageFor(model => model.SupplierTypeFk, "", new { @class = "text-danger" })
                                        </div>
                                    </div>*@

                            </div>
                          
                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label for="message-text" class="col-form-label">A/C Name:</label>
                                        @Html.TextBoxFor(model => model.ACName, new { id = "txtACName", @class = "form-control", @placeholder = "A/C Name" })
                                        @Html.ValidationMessageFor(model => model.ACName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label for="message-text" class="col-form-label">A/C NO:</label>
                                        @Html.TextBoxFor(model => model.ACNo, new { id = "txtACNo", @class = "form-control", @placeholder = "A/C No" })
                                        @Html.ValidationMessageFor(model => model.ACNo, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label for="message-text" class="col-form-label">Bank Name:</label>
                                        @Html.TextBoxFor(model => model.BankName, new { id = "txtBankName", @class = "form-control", @placeholder = "Bank Name" })
                                        @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label for="message-text" class="col-form-label">Branch Name:</label>
                                        @Html.TextBoxFor(model => model.BranchName, new { id = "txtBranchName", @class = "form-control", @placeholder = "Branch Name" })
                                        @Html.ValidationMessageFor(model => model.BranchName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-3">
                                    <button type="button" onclick="resetForm()" class="btn btn-secondary" data-dismiss="modal">Reset</button>
                                </div>
                                <div class="col-md-9">
                                    <button type="submit" id="btnSave" class="btn btn-primary btn-block"><i class='fa fa-plus'></i> Add</button>

                                </div>

                            </div>
                        </div>
                        <div class="box-footer">
                        </div>
                        <div class="box">
                            <div class="box-danger">
                                <div class="box-header">

                                </div>
                                <!-- /.box-header -->
                                <div class="box-body">
                                    <div class="table-responsive text-nowrap">
                                        <table id="KgErpDataTable" style="background-color:#ddd;" class="table table-striped">
                                            <thead>
                                                <tr>
                                                    <th>SL</th>
                                                    <th>Code</th>
                                                    <th>Name</th>
                                                    <th>Phone</th>
                                                    <th>Email</th>
                                                    <th>Contact Person</th>
                                                    <th>Address</th>
                                                    @*<th>Supplier Type</th>*@
                                                    @*<th>Type</th>*@
                                                    <th>A/C Name</th>
                                                    <th>A/C No</th>
                                                    <th>Bank Name</th>
                                                    <th>Branch Name</th>
                                                    <th>Action</th>
                                                </tr>
                                            </thead>
                                            @{int sl = 0;
                                            }
                                            <tbody>
                                                @foreach (var item in Model.DataList)
                                                {
                                                    <tr>
                                                        <td>@(++sl)</td>
                                                        <td>
                                                            @item.Code
                                                        </td>
                                                        <td>
                                                            @item.Name
                                                        </td>
                                                        <td>
                                                            @item.Phone
                                                        </td>
                                                        <td>
                                                            @item.Email
                                                        </td>
                                                        <td>
                                                            @item.ContactPerson
                                                        </td>
                                                        <td>
                                                            @item.Address, @item.Country
                                                        </td>
                                                        @*<td>
                                                                 @item.SupplierType
                                                            </td>*@
                                                        @*<td>
                                                            @if (item.IsForeign == true)
                                                            {
                                                                <span class="label label-success">Exporter</span>
                                                            }
                                                            else
                                                            {
                                                                <span class="label label-primary">Local Supplier</span>
                                                            }
                                                        </td>*@

                                                        <td>
                                                            @item.ACName
                                                        </td>
                                                        <td>
                                                            @item.ACNo
                                                        </td>
                                                        <td>
                                                            @item.BankName
                                                        </td>
                                                        <td>
                                                            @item.BranchName
                                                        </td>
                                                        <td>
                                                            <a id="@item.ID" onclick="makeEditble(@item.ID);" class="linkPointer" title="Edit"><i class="fa fa-pencil-square-o"></i></a>
                                                            <a id="@item.ID" onclick="makeDeletable(@item.ID);" class="linkPointer" data-toggle="modal" data-target="#deleteModal" title="Delete"
                                                               data-placement="top">
                                                                <i class="glyphicon glyphicon-trash" aria-hidden="true"></i>
                                                            </a>
                                                            @*<a href="/SupplierProduct/SupplierProductBOM?vendorId=@item.ID&&companyId=@item.CompanyFK" class="linkPointer" title="Supplier Product"><i class="fa fa-plus-square-o"></i></a>*@
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>

                                </div>
                                <div class="box-footer">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

    </div>
</section>


@using (Html.BeginForm("CommonSupplier", "Configuration", FormMethod.Post, new { id = "commonSupplierformId", @class = "formValidator", @enctype = "multipart/form-data" }))
{
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    @Html.HiddenFor(model => model.ID, new { Value = "", id = "SupplierIdDelete" })
    @Html.HiddenFor(model => model.ActionId, new { Value = "", id = "ActionIdDelete" })
    @Html.HiddenFor(model => model.CompanyFK, new { Value = "", id = "CompanyFKDelete" })

    <div class="modal fade" id="deleteModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b>Supplier Delete</b></h5>

                </div>
                <div class="modal-body">
                    <div style="text-align:center">
                        <h3>Are you sure to delete this Supplier?</h3>
                    </div>

                </div>

                <div class="modal-footer">
                    <button type="button" id="btnClose" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" id="btnDelete" class="deleteId btn btn-primary"><i class="glyphicon glyphicon-check"></i>Confirm</button>
                </div>
            </div>
        </div>
    </div>
}

@section scripts {

    <script type="text/javascript">


         $(document).ready(function () {
             $('.formValidator').bootstrapValidator();
             $("#ddlCommon_CountriesFk").val(1);
        });




            function makeEditble(id) {

            if (id !== null) {
                $.ajax({
                type: "get",
                url: "@Url.Action("CommonSupplierByIDGet", "Configuration")",
                    data: { id: id },
                    datatype: "json",
                    traditional: true,
                    success: function (data) {

                        $('#btnSave').html("<i class='fa fa-edit'></i>&nbsp;Update");
                        $('#SupplierId').val(data.ID);
                        $('#ActionId').val(2);
                        $('#CompanyFK').val(data.CompanyFK);
                        $('#txtSupplierName').val(data.Name);
                        $('#txtPhone').val(data.Phone);
                        $('#txtEmail').val(data.Email);
                        $('#txtContactPerson').val(data.ContactPerson);
                        //if (data.IsForeign == true) {
                        //    $('#chkIsForeign').prop('checked', true);
                        //}
                        //else {
                        //    $('#chkIsForeign').prop('checked', false);
                        //}
                        $('#ddlCommon_CountriesFk').val(data.Common_CountriesFk).change();
                      /*  $('#ddSupplierTypeFk').val(data.SupplierTypeFk);*/
                        $('#txtAddress').val(data.Address);

                        $('#txtBranchName').val(data.BranchName);
                        $('#txtACName').val(data.ACName);
                        $('#txtACNo').val(data.ACNo);
                        $('#txtBankName').val(data.BankName);

                        window.scrollTo({ top: 0, behavior: 'smooth' });
                }
            });
            }
        }
        function resetForm() {
            $('#commonSupplierformId')[0].reset();
            $('#btnSave').html("<i class='fa fa-edit'></i>&nbsp;Add");

        }

        function makeDeletable(id) {
            if (id !== null) {
                $('#SupplierIdDelete').val(id);
                $('#ActionIdDelete').val(3);
                $('#CompanyFKDelete').val("@Model.CompanyFK");
            }
        }


    </script>
}



