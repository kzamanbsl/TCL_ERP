@model KGERP.Service.Implementation.Configuration.VMCommonRegion
@{

    ViewData["Title"] = "Region";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">

    input, select, textarea {
        max-width: 100%;
    }
</style>

<section class="content-header">
    <h1>
        Region
    </h1>
    <ol class="breadcrumb">
        <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i>Dashboard</a></li>
        <li class="active">Region</li>
    </ol>
</section>

@using (Html.BeginForm("CommonRegion", "Configuration", FormMethod.Post, new { id = "commonRegionFormId", @class = "formValidator", onreset = "resetDDL();" }))
{
    <section class="content">
        <div class="row">
            <div class="box">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="box-danger">
                    <div class="box-header">
                        <h4>Add Region</h4>
                    </div>
                    <!-- /.box-header -->
                    <div class="box-body">
                        @Html.HiddenFor(model => model.ID, new { id = "RegionId" })
                        @Html.HiddenFor(model => model.ActionId, new { id = "ActionId" })
                        @Html.HiddenFor(model => model.CompanyFK, new { id = "CompanyFK" })
                        @Html.HiddenFor(model => model.Code, new { id = "Code" })

                        <div class="row">
                            <div class="col-md-3">
                                <div class="form-group" style="padding:0px">
                                    <label for="message-text" class="col-form-label">Zone:</label>
                                    @Html.DropDownListFor(model => model.ZoneId, Model.ZoneList as SelectList, "--Zone--", new { id = "ddlZoneId", @class = "form-control", required = "true" })
                                    @Html.ValidationMessageFor(model => model.ZoneId, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group" style="padding:0px">
                                    <label for="message-text" class="col-form-label">Region:</label>
                                    @Html.TextBoxFor(model => model.Name, new { id = "txtRegionName", @class = "form-control input-sm", @placeholder = "Region", required = "true" })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

                                </div>
                            </div>

                            <div class="col-md-3">
                                <div class="form-group">
                                    <label for="" class="form-control-label">Employee:</label>
                                    <div class="">
                                        @Html.DropDownListFor(model => model.EmployeeId, new SelectList(Model.EmployeeList, "Value", "Text"), "---Select---",
                                            new { @class = "dropdownsize form-control", @id = "employeeId" })
                                        @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group" style="padding:0px">
                                    <label for="message-text" class="col-form-label">Region Incharge:</label>
                                    @Html.TextBoxFor(model => model.RegionIncharge, new { id = "txtRegionIncharge", @class = "form-control input-sm", @placeholder = "Region Incharge", required = "true" })
                                    @Html.ValidationMessageFor(model => model.RegionIncharge, "", new { @class = "text-danger" })

                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-3">
                                <div class="form-group" style="padding:0px">
                                    <label for="message-text" class="col-form-label">Designation:</label>
                                    @Html.TextBoxFor(model => model.Designation, new { id = "txtDesignation", @class = "form-control input-sm", @placeholder = "Designation", required = "true" })
                                    @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group" style="padding:0px">
                                    <label for="message-text" class="col-form-label">Email:</label>
                                    @Html.TextBoxFor(model => model.Email, new { id = "txtEmail", @class = "form-control input-sm", @placeholder = "Email", required = "true" })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-3">
                                <div class="form-group" style="padding:0px">
                                    <label for="message-text" class="col-form-label">Mobile Office:</label>
                                    @Html.TextBoxFor(model => model.MobileOffice, new { id = "txtMobileOffice", @class = "form-control input-sm", @placeholder = "Mobile Office", required = "true" })
                                    @Html.ValidationMessageFor(model => model.MobileOffice, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-3">
                                <div class="form-group" style="padding:0px">
                                    <label for="message-text" class="col-form-label">Mobile Personal:</label>
                                    @Html.TextBoxFor(model => model.MobilePersonal, new { id = "txtMobilePersonal", @class = "form-control input-sm", @placeholder = "Mobile Personal", required = "true" })
                                    @Html.ValidationMessageFor(model => model.MobilePersonal, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>


                        <div class="row">
                            <div class="form-group">
                                <div class="col-md-5">
                                    <button type="button" onclick="resetForm()" class="btn btn-secondary" data-dismiss="modal">Reset</button>
                                </div>
                                <div class="col-md-7">
                                    <button style="width:100%;" type="submit" id="btnSave" class="btn btn-primary btn-block"><i class='fa fa-edit'></i> Add</button>
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="box-footer">
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="box">
                    <div class="box-danger">
                        <div class="box-header">
                            <h4>Region List</h4>
                        </div>
                        <!-- /.box-header -->
                        <div class="box-body">
                            <div class="table-responsive col-md-12">
                                <table id="KgErpDataTable" class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th style="width:5%;">SL</th>
                                            <th style="width:10%;">Zone</th>
                                            <th style="width:15%;">Region</th>
                                            <th hidden="hidden"></th>
                                            <th style="width:10%;">Region Incharge</th>
                                            <th style="width:10%;">Designation</th>
                                            <th style="width:10%;">Email</th>
                                            <th style="width:10%;">Mobile Office</th>
                                            <th style="width:10%;">Mobile Personal</th>
                                            <th style="width:15%;">Action</th>
                                        </tr>
                                    </thead>
                                    @{int sl = 0;
                                    }
                                    <tbody>
                                        @foreach (var item in Model.DataList)
                                        {

                                            <tr>
                                                <td>@(++sl)</td>
                                                <td>
                                                    <input type="hidden" id="commonZoneId_@item.ID" value="@item.ZoneId" />
                                                    @item.ZoneName
                                                </td>
                                                <td id="tdRegionName_@item.ID">@item.Name</td>
                                                <td hidden="true" id="tdEmployeeId_@item.ID">@item.EmployeeId</td>
                                                <td id="tdRegionIncharge_@item.ID">@item.RegionIncharge</td>
                                                <td id="tdDesignation_@item.ID">@item.Designation</td>
                                                <td id="tdEmail_@item.ID">@item.Email</td>
                                                <td id="tdMobileOffice_@item.ID">@item.MobileOffice</td>
                                                <td id="tdMobilePersonal_@item.ID">@item.MobilePersonal</td>
                                                <td>
                                                    <a id="@item.ID" onclick=" makeEditble(this);" class="linkPointer" title="Edit"><i class="fa fa-pencil-square-o"></i></a>
                                                    <a id="@item.ID" onclick="makeDeletable(@item.ID);" class="linkPointer" data-toggle="modal" data-target="#deleteModal" title="Delete"
                                                       data-placement="top">
                                                        <i class="glyphicon glyphicon-trash" aria-hidden="true"></i>
                                                    </a>
                                                    <a href="~/Configuration/CommonSubZone?companyId=@item.CompanyFK&zoneId=@item.ZoneId&regionId=@item.ID" style="padding:0px 0px 0px 0px" class="btn btn-success btn-sm">Territory</a>
                                                    <a href="~/Configuration/CommonCustomer?companyId=@item.CompanyFK&zoneId=@item.ZoneId&regionId=@item.ID" style="padding:0px 0px 0px 0px" class="btn btn-success btn-sm">Customer</a>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div class="box-footer">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

}

@using (Html.BeginForm("CommonRegion", "Configuration", FormMethod.Post, new { id = "commonRegionDeleteFormId", @class = "formValidator", onreset = "resetDDL();" }))
{
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    @Html.HiddenFor(model => model.ID, new { id = "RegionIdDelete" })
    @Html.HiddenFor(model => model.ActionId, new { id = "ActionIdDelete" })
    @Html.HiddenFor(model => model.ZoneId, new { id = "zoneIdDelete" })

    @Html.HiddenFor(model => model.CompanyFK, new { id = "CompanyFKDelete" })

    <div class="modal fade" id="deleteModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" onclick="resetForm()" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b>Region  Delete</b></h5>
                </div>
                <div class="modal-body">
                    <div style="text-align:center">
                        <h3>Are you sure to delete this Region?</h3>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" id="btnClose" onclick="resetForm()" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" id="btnDelete" class="deleteId btn btn-primary"><i class="glyphicon glyphicon-check"></i> Confirm</button>
                </div>
            </div>
        </div>
    </div>
}

@section scripts {

    <script type="text/javascript">

        $(document).ready(function () {
            $('.formValidator').bootstrapValidator();
            $('#employeeId').change(function () {
                var selectedEmployeeId = $('#employeeId').val();
                $.ajax({
                    type: "get",
                    url: "/Employee/GetEmployeeInformationById",
                    data: { id: selectedEmployeeId },
                    datatype: "json",
                    traditional: true,
                    success: function (result) {
                        $('#txtRegionIncharge').val(result.Name);
                        $('#txtDesignation').val(result.DesignationName);
                        $('#txtMobileOffice').val(result.MobileNo);
                        $('#txtMobilePersonal').val(result.MobileNo);
                        $('#txtEmail').val(result.OfficeEmail);
                    }
                });
            });
        });

        function makeEditble(elem) {
            if (elem !== null) {
                var rowId = elem.id;
                $('#RegionId').val(rowId);
                $('#ActionId').val(2);
                $('#btnSave').html("<i class='fa fa-edit'></i>&nbsp;Update");
                $('#ddlZoneId').val($('#commonZoneId_' + rowId).val().trim()).trigger('change');
                $('#txtRegionName').val($('#tdRegionName_' + rowId).text().trim());

                $('#txtRegionIncharge').val($('#tdRegionIncharge_' + rowId).text().trim());
                $('#txtDesignation').val($('#tdDesignation_' + rowId).text().trim());
                $('#txtEmail').val($('#tdEmail_' + rowId).text().trim());
                $('#txtMobileOffice').val($('#tdMobileOffice_' + rowId).text().trim());
                $('#txtMobilePersonal').val($('#tdMobilePersonal_' + rowId).text().trim());
                $('#employeeId').val($('#tdEmployeeId_' + rowId).text().trim());

                window.scrollTo({ top: 0, behavior: 'smooth' });
            }
        }

        function makeDeletable(id) {
            if (id !== null) {
                $('#RegionIdDelete').val(id);
                $('#ActionIdDelete').val(3);
            }
        }

        function resetForm() {
            $('#commonRegionFormId')[0].reset();
            $('#btnSave').html("<i class='fa fa-edit'></i>&nbsp;Add");
        }

    </script>


}

