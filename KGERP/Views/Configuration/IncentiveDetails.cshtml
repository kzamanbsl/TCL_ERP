
@{

    ViewData["Title"] = "Incentive Details";
    Layout = "~/Views/Shared/_Layout.cshtml";


}
@model KGERP.Service.Implementation.Configuration.VMIncentiveDetails
<style type="text/css">

    input, select, textarea {
        max-width: 100%;
    }
</style>
<section class="content-header">
    <h1>
        Incentive Details
    </h1>
    <ol class="breadcrumb">
        <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i>Dashboard</a></li>
        <li class="active">IncentiveDetails</li>
    </ol>
</section>
@using (Html.BeginForm("IncentiveDetails", "Configuration", FormMethod.Post, new { id = "commonProductSubCategoryFormId", @class = "formValidator" }))
{
    <section class="content">
        <div class="row">
            <div class="col-md-12">
                <div class="col-md-3">
                    <div class="box">
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="box-danger">
                            <div class="box-header">
                                <h4>Add Incentive Details</h4>
                            </div>
                            <!-- /.box-header -->
                            <div class="box-body">
                                @Html.HiddenFor(model => model.IncentiveDetailId, new { id = "IncentiveDetailId" })
                                @Html.HiddenFor(model => model.ActionId, new { id = "ActionId" })
                                @Html.HiddenFor(model => model.CompanyId, new { id = "CompanyFK" })

                                <div class="form-group" style="padding:0px">
                                    <label for="message-text" class="col-form-label">Category:</label>
                                    @Html.EditorFor(model => model.IncentiveType, new { htmlAttributes = new { @autocomplete = "on", @class = "form-control", @name = "Brand", @id = "txtCategoryName" } })

                                    @Html.HiddenFor(model => model.IncentiveId, new { id = "ddlIncentiveId" })
                                    @Html.ValidationMessageFor(model => model.IncentiveId, "", new { @class = "text-danger" })
                                </div>
                                @*<div class="form-group">
                                        @Html.DropDownListFor(model => model.Common_ProductCategoryFk, Model.ProductCategoryList as SelectList, "---Select Category---", new { id = "ddlCommonProductCategoryFk", @class = "form-control", required = "true", })
                                        @Html.ValidationMessageFor(model => model.Common_ProductCategoryFk, "", new { @class = "text-danger" })
                                    </div>*@
                                <div class="form-group">
                                    @Html.TextBoxFor(model => model.MinQty, new { id = "txtMinQty", @class = "form-control input-sm", @placeholder = "Pack Name", required = "true" })
                                    @Html.ValidationMessageFor(model => model.MinQty, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.TextBoxFor(model => model.MaxQty, new { id = "txtMaxQty", @class = "form-control input-sm", @placeholder = "Pack Name", required = "true" })
                                    @Html.ValidationMessageFor(model => model.MaxQty, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.TextBoxFor(model => model.Rate, new { id = "txtRate", @class = "form-control input-sm", @placeholder = "Rate", required = "true" })
                                    @Html.ValidationMessageFor(model => model.Rate, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    <div class="col-md-5">
                                        <button type="button" onclick="resetForm()" class="btn btn-secondary" data-dismiss="modal">Reset</button>
                                    </div>
                                    <div class="col-md-7">
                                        <button type="submit" id="btnSave" class="btn btn-primary btn-block"><i class='fa fa-edit'></i> Add</button>
                                    </div>
                                </div>
                            </div>
                            <div class="box-footer">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-9">
                    <div class="box">
                        <div class="box-danger">
                            <div class="box-header">
                                <h4>Packing Subcategory List</h4>
                            </div>
                            <!-- /.box-header -->
                            <div class="box-body">
                                <div class="table-responsive col-md-12">
                                    <table id="KgErpDataTable" class="table table-striped">
                                        <thead>
                                            <tr>
                                                <th>SL</th>
                                                <th>IncentiveType</th>
                                                <th>MinQty</th>
                                                <th>MaxQty</th>
                                                <th>Rate</th>
                                                <th>Action</th>
                                            </tr>
                                        </thead>
                                        @{int sl = 0;
                                        }
                                        <tbody>
                                            @foreach (var item in Model.DataListDetails)
                                            {

                                                <tr>
                                                    <td>@(++sl)</td>
                                                    <td>
                                                        @item.IncentiveType
                                                    </td>
                                                    <td id="tdMinQty_@item.IncentiveDetailId">@item.MinQty</td>
                                                    <td id="tdMaxQty_@item.IncentiveDetailId">@item.MaxQty</td>
                                                    <td id="tdRate_@item.IncentiveDetailId">@item.Rate</td>


                                                    <td>

                                                        <a id="@item.IncentiveDetailId" onclick=" makeEditble(@item.IncentiveDetailId);" class="linkPointer" title="Edit"><i class="fa fa-pencil-square-o"></i></a>
                                                        <a id="@item.IncentiveDetailId" onclick="makeDeletable(@item.IncentiveDetailId);" class="linkPointer" data-toggle="modal" data-target="#deleteModal" title="Delete"
                                                           data-placement="top">
                                                            <i class="glyphicon glyphicon-trash" aria-hidden="true"></i>
                                                        </a>


                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                            <div class="box-footer">

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

}

@using (Html.BeginForm("IncentiveDetails", "Configuration", FormMethod.Post, new { id = "dsdd", @class = "formValidator" }))
{
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    @Html.HiddenFor(model => model.ID, new { id = "subcategoryIdDelete" })
    @Html.HiddenFor(model => model.ActionId, new { id = "ActionIdDelete" })
    @Html.HiddenFor(model => model.CompanyFK, new { id = "CompanyFKDelete" })




    @Html.HiddenFor(model => model.IncentiveDetailId, new { id = "IncentiveDetailId" })
    @Html.HiddenFor(model => model.ActionId, new { id = "ActionId" })
    @Html.HiddenFor(model => model.CompanyId, new { id = "CompanyFK" })

    <div class="form-group" style="padding:0px">
        <label for="message-text" class="col-form-label">Category:</label>
        @Html.EditorFor(model => model.IncentiveType, new { htmlAttributes = new { @autocomplete = "on", @class = "form-control", @name = "Brand", @id = "txtCategoryName" } })

        @Html.HiddenFor(model => model.IncentiveId, new { id = "ddlIncentiveId" })
        @Html.ValidationMessageFor(model => model.IncentiveId, "", new { @class = "text-danger" })
    </div>

    <div class="modal fade" id="deleteModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" onclick="resetForm()" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b>Incentive Type Delete</b></h5>
                </div>
                <div class="modal-body">
                    <div style="text-align:center">
                        <h3>Are you sure to delete this Incentive Type?</h3>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" id="btnClose" onclick="resetForm()" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" id="btnDelete" class="deleteId btn btn-primary"><i class="glyphicon glyphicon-check"></i> Confirm</button>
                </div>
            </div>
        </div>
    </div>
}

@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $('.formValidator').bootstrapValidator();

             $("#txtCategoryName").autocomplete({
                source: function (request, response) {

                    $.ajax({
                        url:"@Url.Action("AutoCompleteProductCategoryGet", "Configuration")",
                        //data: "{ 'prefix': '" + request.term + "'}",
                        data: { companyId: "@Model.CompanyFK", prefix: request.term, productType : "P" },
                        dataType: "json",
                        type: "get",
                        cache: true,
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            //alert(response.responseText);
                        },
                        failure: function (response) {
                            //alert(response.responseText);
                        }
                    });
                },

                select: function (e, i) {
                    $("#ddlCommonProductCategoryFk").val(i.item.val);


                },
                minLength: 1,
                cache: true

            }).focus(function () {
                $(this).autocomplete("search");
            });
        });
            var dataList = @Html.Raw(Json.Encode(Model.DataListDetails));


            function makeEditble(id) {
                var LObj = dataList.find(x => x.IncentiveDetailId === id);
                if (LObj !== null) {
                var rowId =id;
                $('#subcategoryId').val(rowId);
                $('#ActionId').val(2);
                    $('#btnSave').html("<i class='fa fa-edit'></i>&nbsp;Update");
                    $('#txtMinQty').val(LObj.MinQty);
                    $('#txtMaxQty').val(LObj.MaxQty);
                    $('#txtRate').val(LObj.Rate);
                    $('#IncentiveDetailId').val(id);
                //$('#ddlCommonProductCategoryFk').val($('#commonProductCategoryFk_' + rowId).val().trim()).trigger('change');
                //$('#txtSubcategoryName').val($('#tdSubCategoryName_' + rowId).text().trim());
                window.scrollTo({ top: 0, behavior: 'smooth' });
            }
        }
        function makeDeletable(id) {
            var LObj = dataList.find(x => x.IncentiveDetailId === id);
            if (id !== null) {
                $('#subcategoryIdDelete').val(id);
                $('#ActionIdDelete').val(3);


            }
        }
        function resetForm() {
            $('#commonProductSubCategoryFormId')[0].reset();
            $('#btnSave').html("<i class='fa fa-edit'></i>&nbsp;Add");
        }
    </script>
}

