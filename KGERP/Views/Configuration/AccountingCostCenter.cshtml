@model KGERP.Service.Implementation.Configuration.VMUserMenu
@{
    ViewData["Title"] = "New Project";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    input, select, textarea {
        max-width: 100%;
    }

    .ui-datepicker-trigger {
        width: 35px !important;
        height: 33px !important;
        margin-left: 5px !important;
    }

    .dateCustom {
        width: 82% !important;
        border-radius: 1px !important;
        border: 1px solid #d2d6de !important;
        height: 33px !important;
    }
</style>

<section class="content-header">
    <h1>
        New Project
    </h1>
    <ol class="breadcrumb">
        <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i>Dashboard</a></li>

        <li class="active">New Project</li>
    </ol>
</section>
@using (Html.BeginForm("AccountingCostCenter", "Configuration", FormMethod.Post, new { id = "userMenuFormId", @class = "formValidator", onreset = "resetDDL();" }))
{
    <section class="content">
        <div class="row">
            <div class="col-md-12">
                <div class="box">
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="box-danger">
                        <div class="box-header"></div>
                        <div class="box-body">
                            @Html.HiddenFor(model => model.ID, new { id = "userMenuId" })
                            @Html.HiddenFor(model => model.ActionId, new { id = "ActionId" })
                            @Html.HiddenFor(model => model.CompanyFK, new { id = "CompanyFK" })

                            <div class="col-md-4">
                                <div class="form-group">
                                    <label class="form-label">Project Type<sup class="text-danger" title="Required"><b>*</b></sup></label>
                                    @Html.DropDownListFor(model => model.accounting_CostCenterTypeId, new SelectList(Model.accounting_CostCenterTypes.OrderBy(order => order.Name), "CostCenterTypeId", "Name"), "==Select Project Type==", new { id = "ddlProjectType", @class = "form-control searchingDropdown", @style = "width: 100%", @required = "true" })
                                    @Html.ValidationMessageFor(model => model.accounting_CostCenterTypeId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    <label class="form-label">Short Name<sup class="text-danger" title="Required"><b>*</b></sup></label>
                                    @Html.TextBoxFor(model => model.ShortName, new { id = "txtShortName", @class = "form-control", @placeholder = "Short Name", @style = "width: 100%", @required = "true" })
                                    @Html.ValidationMessageFor(model => model.ShortName, "", new { @class = "text-danger" })
                                    <small class="text-danger" id="errorMessage"></small>
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    <label class="form-label">Project Name<sup class="text-danger" title="Required"><b>*</b></sup></label>
                                    @Html.TextBoxFor(model => model.Name, new { id = "txtMenuName", @class = "form-control", @placeholder = "Project Name", @style = "width: 100%", @required = "true" })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="form-label">Start Date<sup class="text-danger" title="Required"><b>*</b></sup></label>
                                    <input name="StartDate" asp-for="StartDate" type="datetime" value="@DateTime.Now.ToString("dd/MM/yyyy")" required="required" class="datepicker w-100 dateCustom" placeholder="From Date" autocomplete="off" id="txtStartDate">
                                    @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="form-label">End Date<sup class="text-danger" title="Required"><b>*</b></sup></label>
                                    <input name="EndDate" asp-for="EndDate" type="datetime" value="@DateTime.Now.ToString("dd/MM/yyyy")" required="required" class="datepicker w-100 dateCustom" placeholder="From Date" autocomplete="off" id="txtEndtDate">
                                    @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="form-label">Total Amount<sup class="text-danger" title="Required"><b>*</b></sup></label>
                                    @Html.TextBoxFor(model => model.TotalAmount, new { id = "txtAmount", @class = "form-control", @placeholder = "Amount", @style = "width: 100%", @required = "true" })
                                    @Html.ValidationMessageFor(model => model.TotalAmount, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="form-label">Currency<sup class="text-danger" title="Required"><b>*</b></sup></label>
                                    @Html.TextBoxFor(model => model.Currency, new { id = "txtCurrency", @class = "form-control", @placeholder = "Amount", @style = "width: 100%", @required = "true" })
                                    @Html.ValidationMessageFor(model => model.Currency, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="form-label">Location<sup class="text-danger" title="Required"><b>*</b></sup></label>
                                    @Html.TextAreaFor(model => model.ProjectLocation, new { id = "txtLocation", @class = "form-control", @placeholder = "Type project location here", @style = "width: 100%", @required = "true" })
                                    @Html.ValidationMessageFor(model => model.ProjectLocation, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="col-md-6">
                                    <button type="button" onclick="resetForm()" class="btn btn-secondary btn-block" data-dismiss="modal" style="margin-top: 35px;">Reset</button>
                                </div>
                                <div class="col-md-6">
                                    <button type="submit" id="btnSave" class="btn btn-primary btn-block" style="margin-top: 35px;"><i class='fa fa-edit'></i> Add</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-12">
                <div class="box">
                    <div class="box-danger">
                        <div class="box-header"></div>
                        <!-- /.box-header -->
                        <div class="box-body">

                            <div class="table-responsive col-md-12">
                                <table id="KgErpDataTable" class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th>SL</th>
                                            <th>Type</th>
                                            <th>Name</th>
                                            <th>Amount</th>
                                            <th>Currency</th>
                                            <th>Project Date</th>
                                            <th>Location</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody class="text-secondary">
                                        @{
                                            if (Model.DataList != null)
                                            {
                                                int sl = 0;
                                                foreach (var item in Model.DataList.OrderBy(order => order.CostCenterTypeName))
                                                {
                                                                                <tr>
                                                                                    <td>
                                                                                        @(++sl)
                                                                                        <input type="hidden" id="hidCompanyFK_@item.ID" value="@item.CompanyFK" />
                                                                                        <input type="hidden" id="costCenterTypeId_@item.ID" value="@item.accounting_CostCenterTypeId" />
                                                                                        <input type="hidden" id="shortName_@item.ID" value="@item.ShortName" />
                                                                                        <input type="hidden" id="costCenterName_@item.ID" value="@item.ShortName" />
                                                                                        <input type="hidden" id="startDate_@item.ID" value="@item.StartDate.ToString("dd/MM/yyy")" />
                                                                                        <input type="hidden" id="endDate_@item.ID" value="@item.EndDate.ToString("dd/MM/yyyy")" />
                                                                                        <input type="hidden" id="totalAmount_@item.ID" value="@item.TotalAmount" />
                                                                                        <input type="hidden" id="currency_@item.ID" value="@item.Currency" />
                                                                                        <input type="hidden" id="location_@item.ID" value="@item.ProjectLocation" />
                                                                                    </td>

                                                                                    <td>
                                                                                        @item.CostCenterTypeName
                                                                                    </td>

                                                                                    <td>
                                                                                        [@item.ShortName] - @item.Name
                                                                                    </td>

                                                                                    <td>@item.TotalAmount</td>
                                                                                    <td>@item.Currency</td>
                                                                                    <td>@item.StartDate.ToString("dd/MM/yyyy") - @item.EndDate.ToString("dd/MM/yyyy")</td>
                                                                                    <td>@item.ProjectLocation</td>

                                                                                    <td>
                                                                                        <a id="@item.ID" onclick=" makeEditble(this);" class="linkPointer" data-toggle="modal" data-target="#exampleModal" title="Edit" data-placement="top"><i class="fa fa-pencil-square-o" aria-hidden="true"></i></a>
                                                                                        <a id="@item.ID" onclick="makeDeletable(@item.ID);" class="linkPointer" data-toggle="modal" data-target="#itemActionModal" title="Delete"
                                                                                           data-placement="top">
                                                                                            <i class="glyphicon glyphicon-trash" aria-hidden="true"></i>
                                                                                        </a>
                                                                                    </td>
                                                                                </tr>
                                                }
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div class="box-footer">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <div class="modal fade" id="itemActionModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" onclick="resetForm()" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b>Project / Cost Center Delete</b></h5>

                </div>
                <div class="modal-body">
                    <div style="text-align:center">
                        <h3>Are you sure to delete?</h3>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" id="btnClose" onclick="resetForm()" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" id="btnDelete" class="deleteId btn btn-primary"><i class="glyphicon glyphicon-check"></i> Confirm</button>
                </div>
            </div>
        </div>
    </div>
}

@Scripts.Render("~/bundles/jqueryui")
@Styles.Render("~/Content/cssjqryUi")

@section scripts {
    <script type="text/javascript">

        $(document).ready(function () {
            "use strict"

            $('.formValidator').bootstrapValidator();

            $('.datepicker').datepicker({
                dateFormat: "dd/mm/yy",
                showOn: 'both',
                buttonText: "<i class='fa fa-calendar'></i>",
                changeMonth: true,
                changeYear: true,
                yearRange: "2001:+50"
            });
        });

        function makeEditble(elem) {
            if (elem !== null) {
                var rowId = elem.id;
                $('#userMenuId').val(rowId);
                $('#ActionId').val(2);
                $('#btnSave').html("<i class='fa fa-edit'></i>&nbsp;Update");
                $('#ddlProjectType').val($('#costCenterTypeId_' + rowId).val().trim()).trigger('change');
                $('#txtShortName').val($('#shortName_' + rowId).val());
                $('#txtMenuName').val($('#costCenterName_' + rowId).val());
                $('#txtStartDate').val($('#startDate_' + rowId).val());
                $('#txtEndtDate').val($('#endDate_' + rowId).val());
                $('#txtAmount').val($('#totalAmount_' + rowId).val());
                $('#txtCurrency').val($('#currency_' + rowId).val());
                $('#txtLocation').val($('#location_' + rowId).val());
                window.scrollTo({ top: 0, behavior: 'smooth' });
            }
        }

        function makeDeletable(id) {
            if (id !== null) {
                $('#userMenuId').val(id);
                $('#ActionId').val(3);
                $('#CompanyFK').val($('#hidCompanyFK_' + id).val());
                $('#selectProjectType').val($('#costCenterTypeId_' + id).val());
            }
        }

        function resetForm() {
            $('#userMenuFormId')[0].reset();
            $('#btnSave').html("<i class='fa fa-edit'></i>&nbsp;Add");
        }

        $("#txtShortName").on('input', function (event) {
            var getValue = $("#txtShortName").val();
            if (getValue != null) {
                $.ajax({
                    type: "GET",
                    url: "/Configuration/CheckShortName",
                    dataType: "json",
                    data: { shortName: getValue },
                    success: function (data) {
                        if (data) {
                            $("#errorMessage").text("This short name is already used!");
                            $("#btnSave").prop("disabled", true);
                        } else {
                            $("#errorMessage").text("");
                            $("#btnSave").prop("disabled", false);
                        }
                    }
                });
            }
        })

    </script>
}