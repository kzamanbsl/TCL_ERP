
@{

    ViewData["Title"] = "Raw Materials Subcategory";
    Layout = "~/Views/Shared/_Layout.cshtml";


}
@model KGERP.Service.Implementation.Configuration.VMCompany
<style type="text/css">


    input, select, textarea {
        max-width: 100%;
    }
</style>
<section class="content-header">
    <h1>
        Company
    </h1>
    <ol class="breadcrumb">
        <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i>Dashboard</a></li>
        <li class="active"> Company </li>
    </ol>
</section>
@using (Html.BeginForm("Company", "Configuration", FormMethod.Post, new { id = "CompanyFormId", @class = "formValidator", onreset = "resetDDL();" }))
{
    <section class="content">
        <div class="row">


            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="box-danger">
                <div class="box-header">
                    <h4>Add Company</h4>
                </div>
                <!-- /.box-header -->
                <div class="box-body">
                    @Html.HiddenFor(model => model.ID, new { id = "hidID" })
                    @Html.HiddenFor(model => model.ActionId, new { id = "ActionId" })
                    @Html.HiddenFor(model => model.CompanyFK, new { id = "CompanyFK" })
                    <div class="col-md-12">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })

                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { id = "txtName", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

                        </div>

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.ShortName, htmlAttributes: new { @class = "control-label col-md-2" })

                            @Html.EditorFor(model => model.ShortName, new { htmlAttributes = new { id = "txtShortName", @class = "form-control" } })

                        </div>

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.OrderNo, htmlAttributes: new { @class = "control-label col-md-2" })

                            @Html.EditorFor(model => model.OrderNo, new { htmlAttributes = new { id = "txtOrderNo", @class = "form-control" } })

                        </div>

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.CompanyType, htmlAttributes: new { @class = "control-label col-md-2" })

                            @Html.EditorFor(model => model.CompanyType, new { id = "txtCompanyType", htmlAttributes = new { @class = "form-control" } })

                        </div>
                    </div>

                    <div class="col-md-12" style="padding-top:25px">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })

                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { id = "txtAddress", @class = "form-control" } })

                        </div>

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.MushokNo, htmlAttributes: new { @class = "control-label col-md-2" })

                            @Html.EditorFor(model => model.MushokNo, new { htmlAttributes = new { id = "txtMushokNo", @class = "form-control" } })

                        </div>

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })

                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { id = "txtPhone", @class = "form-control" } })

                        </div>

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Fax, htmlAttributes: new { @class = "control-label col-md-2" })

                            @Html.EditorFor(model => model.Fax, new { htmlAttributes = new { id = "txtFax", @class = "form-control" } })

                        </div>
                    </div>

                    <div class="col-md-12" style="padding-top:25px">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })

                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { id = "txtEmail", @class = "form-control" } })

                        </div>
                        <div class="col-md-3" style="text-align:center">
                            @Html.LabelFor(model => model.IsCompany, htmlAttributes: new { @class = "control-label" })

                            <div class="checkbox" style="text-align:center">
                                @Html.EditorFor(model => model.IsCompany)
                                @Html.ValidationMessageFor(model => model.IsCompany, "", new { @class = "text-danger" })
                            </div>

                        </div>

                        <div class="col-md-3" style="text-align:center">
                            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label" })

                            <div class="checkbox" style="text-align:center">
                                @Html.EditorFor(model => model.IsActive)
                                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                            </div>

                        </div>
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.CompanyLogo, htmlAttributes: new { @class = "control-label col-md-2" })
                            @*<div class="col-md-8">*@
                            @*<img src="@Url.Content(Model.CompanyLogoUrl)" style="margin:5px;" height="150" width="150" id="imagePreview" />*@
                            <input type="file" name="CompanyLogoUrlUpload" accept="image/jpg, image/jpeg, image/png" onchange="showImagePreview(this, document.getElementById('imagePreview'))" />
                            @*</div>*@
                        </div>


                    </div>
                    <div class="col-md-12" style="padding-top:25px">
                        <div class="col-md-3">
                            <a href="@Url.Action("Index",new {companyId=Model.CompanyId, productType=Request.QueryString["productType"]})" class="btn btn-danger">
                                <span class="glyphicon glyphicon-remove-circle"></span>   Close
                            </a>
                        </div>
                       
                            <div class="col-md-3">
                                <button type="button" onclick="resetForm()" class="btn btn-secondary" data-dismiss="modal">Reset</button>
                            </div>
                            <div class="col-md-6">
                                <button type="submit" id="btnSave" class="btn btn-primary btn-block"><i class='fa fa-edit'></i> Add</button>
                            </div>
                        
                    </div>
                   
                </div>
                <div class="box-footer">
                </div>
            </div>




            <div class="col-md-12">
                <div class="box">
                    <div class="box-danger">
                        <div class="box-header">
                            <h4>Company List</h4>
                        </div>
                        <!-- /.box-header -->
                        <div class="box-body">
                            <div class="table-responsive col-md-12">
                                <table id="KgErpDataTable" class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th>SL</th>
                                            @*<th>CompanyLogoUrl</th>*@
                                            <th>Name</th>
                                            <th>ShortName</th>
                                            <th>OrderNo</th>
                                            <th>IsCompany</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    @{int sl = 0;
                                    }
                                    <tbody>
                                        @foreach (var item in Model.DataList)
                                        {

                                            <tr>
                                                <td>@(++sl)</td>
                                                @*<td id="tdSignatoryType_@item.ID">
                                                        <img src="@Url.Content(@item.CompanyLogoUrl)" height="25" width="25" alt="CompanyLogoUrl">
                                                    </td>*@
                                                <td id="tdName_@item.ID">
                                                    @Html.DisplayFor(modelItem => @item.Name)
                                                </td>

                                                <td id="tdShortName_@item.ID">
                                                    @Html.DisplayFor(modelItem => @item.ShortName)
                                                </td>
                                                <td id="tdOrderNo_@item.ID">
                                                    @Html.DisplayFor(modelItem => @item.OrderNo)
                                                </td>

                                                <td id="tdIsCompany_@item.ID">
                                                    @Html.DisplayFor(modelItem => @item.IsCompany)
                                                </td>


                                                <td>
                                                    <a id="@item.ID" onclick="makeEditble(this)" class="linkPointer" title="Edit"><i class="fa fa-pencil-square-o"></i></a>
                                                    <a id="@item.ID" onclick="makeDeletable(@item.ID);" class="linkPointer" data-toggle="modal" data-target="#deleteModal" title="Delete"
                                                       data-placement="top">
                                                        <i class="glyphicon glyphicon-trash" aria-hidden="true"></i>
                                                    </a>

                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </section>

}
@using (Html.BeginForm("AccountingSignatory", "Configuration", FormMethod.Post, new { id = "commonAccountingSagnatoryDeleteFormId", @class = "formValidator", onreset = "resetDDL();" }))
{
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    @Html.HiddenFor(model => model.ID, new { id = "IDDelete" })
    @Html.HiddenFor(model => model.ActionId, new { id = "ActionIdDelete" })
    @Html.HiddenFor(model => model.CompanyFK, new { id = "CompanyFKDelete" })

    <div class="modal fade" id="deleteModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" onclick="resetForm()" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b>Signatory Delete</b></h5>
                </div>
                <div class="modal-body">
                    <div style="text-align:center">
                        <h3>Are you sure to delete?</h3>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" id="btnClose" onclick="resetForm()" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" id="btnDelete" class="deleteId btn btn-primary"><i class="glyphicon glyphicon-check"></i> Confirm</button>
                </div>
            </div>
        </div>
    </div>
}
@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            


        });
        //txtName
        //txtShortName
        //txtOrderNo
        //txtCompanyType
        //txtAddress
        //txtMushokNo
        //txtPhone
        //txtFax
        //txtEmail
        //tdName_
        //tdShortName_
        //tdOrderNo_
        //tdIsCompany_
        function makeEditble(elem) {
            if (elem !== null) {
                var rowId = elem.id;
                $('#hidID').val(rowId);
                $('#ActionId').val(2);
                $('#btnSave').html("<i class='fa fa-edit'></i>&nbsp;Update");

                $('#txtName').val($('#tdName_' + rowId).text().trim());
                $('#txtShortName').val($('#tdShortName_' + rowId).text().trim());
                $('#txtOrderNo').val($('#tdOrderNo_' + rowId).text().trim());

                //$('#txtSignatoryName').val($('#tdSignatoryName_' + rowId).text().trim());
                window.scrollTo({ top: 0, behavior: 'smooth' });
            }
        }
        function makeDeletable(id) {
            if (id !== null) {
                $('#IDDelete').val(id);
                $('#ActionIdDelete').val(3);
            }
        }
        function resetForm() {
            $('#CompanyFormId')[0].reset();
            $('#btnSave').html("<i class='fa fa-edit'></i>&nbsp;Add");
        }
    </script>
}
