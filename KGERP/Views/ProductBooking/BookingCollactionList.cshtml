@model KGERP.Service.ServiceModel.CollactionBillViewModel
@{
    ViewBag.Title = "BookingCollactionList";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int i = 1;
}


<style>
    .bg-w {
        margin-right: -15px;
        margin-left: -15px;
        background: #b0e9b2;
        padding: 4px 0px;
        margin-bottom: 14px;
        font-weight: 900;
    }

    .form-control.input-validation-error:focus {
        border-color: red !important;
    }

    .dataTables_length {
        margin-bottom: 6px;
        margin-top: 6px
    }

    .cut .buttons-copy {
        color: #28a745;
        border-color: #28a745;
    }

    .cut .buttons-print {
        color: #6c757d;
        border-color: #6c757d;
    }

    .cut .buttons-pdf {
        color: #007bff;
        border-color: #007bff;
    }

    .cut .buttons-csv {
        color: #17a2b8;
        border-color: #17a2b8;
    }

    .btn-sm, .btn-group-sm > .btn {
        padding: 2px 5px;
        font-size: 12px;
        line-height: 1.5;
        border-radius: 3px;
    }
</style>
<section style="margin-bottom:20px;font-size:25px">
    <h3 class="bg-w" style="padding-left:5px"><b> @Model.CompanyName - Booking  Collaction  </b> </h3>
</section>

<div class="row">
    <div class="table-responsive cut ">
        <table id="KgErpDataTable" style="width:100%; background-color:#ddd;" class="table table-striped">
            <thead>
                <tr>
                    <th> Sl</th>
                    <th> Collection No </th>
                    <th> Group Name </th>
                    <th> Installment Date  </th>
                    <th>Bank Charge </th>
                    <th>Collection Amount</th>
                    <th>Status</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.DataList)
                {
                    <tr>
                        <th> @i</th>
                        <th>@item.PaymentNo</th>
                        <th>@item.GroupName</th>
                        <th>@item.TransactionDate.ToLongDateString()</th>
                        <th>@item.BankCharge</th>
                        <th>@item.TotalAmount</th>
                        <th style="text-align:center">
                            @if (item.IsFinalized)
                            {
                                <b style="color:#6c757d"> Submitted</b>
                            }
                            else
                            {
                                <a href="BookingCollactionDetalis?companyId=@item.CompanyId&&CGId=@item.CGId&&paymentMasterId=@item.PaymentMasterId" style="color:#28a745"> Submit</a>
                            }

                        </th>
                        <th>
                            <a href="BookingCollactionDetalis?companyId=@item.CompanyId&&CGId=@item.CGId&&paymentMasterId=@item.PaymentMasterId" class="btn btn-sm btn-primary">  <i class="glyphicon glyphicon-info-sign" aria-hidden="true"></i> </a>
                            @if (item.IsFinalized)
                            {
                                <a disabled class="btn btn-sm btn-danger">  <i class="glyphicon glyphicon-trash" aria-hidden="true"></i> </a>
                                <a disabled class="btn btn-sm btn-warning">  <i class="glyphicon glyphicon-edit" aria-hidden="true"></i> </a>
                            }
                            else
                            {
                                <a data-toggle="modal" data-target="#exampleModal" onclick="deleteCollaction(@item.PaymentMasterId, '@item.PaymentNo')" class="btn btn-sm btn-danger">  <i class="glyphicon glyphicon-trash" aria-hidden="true"></i> </a>
                                <a data-toggle="modal" data-target="#exampleModalScrollable" onclick="editCollaction(@item.PaymentMasterId)" class="btn btn-sm btn-warning">  <i class="glyphicon glyphicon-edit" aria-hidden="true"></i> </a>
                            }
                        </th>

                    </tr>
                    i++;
                }
            </tbody>
        </table>
    </div>
</div>



<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">

        @using (Html.BeginForm("DeleteCollaction", "ProductBooking", FormMethod.Post))
        {
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="exampleModalLabel"> Delete Collaction <span id="hid"> </span> </h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <h4 class="text-danger"> Are you sure delete this collaction!!!</h4>
                    <input type="hidden" name="PaymentMasterId" id="masterId" />
                    @Html.HiddenFor(m => m.CompanyId, new { @id = "CcompanyId" })
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <input type="submit" value="Confirm Delete" class="btn btn-primary" />
                </div>
            </div>
        }
    </div>
</div>


<!-- Modal -->
<div class="modal fade bd-example-modal-lg" id="exampleModalScrollable" tabindex="-1" role="dialog" aria-labelledby="exampleModalScrollableTitle" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        @using (Html.BeginForm("UpdateCollaction", "ProductBooking", FormMethod.Post))
        {
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalScrollableTitle">Modal title</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row">

                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.CGId, new { @id = "CCGId" })
                        @Html.HiddenFor(m => m.CompanyId, new { @id = "CcompanyId" })
                        @Html.HiddenFor(m => m.PaymentMasterId, new { @id = "CPaymentMasterId" })

                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Collection Date</label>
                                <div style="display:flex">
                                    <input name="TransactionDateString" value="@Model.TransactionDateString" required class="form-control datepickeronPage" id="TransactionDateString" placeholder="--- Select Date ---" autocomplete="off">
                                    @Html.ValidationMessageFor(model => model.TransactionDateString, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="txtBankCharge" class="col-form-label">Bank Charge:</label>
                                @Html.TextBoxFor(model => model.BankCharge, new { id = "txtBankCharge", @class = "form-control", placeholder = "Bank Charge", style = "max-width:100%" })
                                @Html.ValidationMessageFor(model => model.BankCharge, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Type</label>
                                @Html.DropDownListFor(model => model.Accounting_BankOrCashParantId, Model.BankOrCashParantList as SelectList, "==Select Type==", new { id = "ddlAccounting_BankOrCashParantId", @class = "form-control ddlReset", @required = "required", style = "max-width:100%" })
                                @Html.ValidationMessageFor(model => model.Accounting_BankOrCashParantId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="col-form-label">Bank/Cash</label>
                                @Html.DropDownListFor(model => model.Accounting_BankOrCashId, Model.BankOrCashGLList as SelectList, "== Select Bank/Cash==", new { id = "ddlPaymentToHeadGLId", @class = "form-control ddlReset", @required = "required", style = "max-width:100%" })
                                @Html.ValidationMessageFor(model => model.Accounting_BankOrCashId, "", new { @class = "text-danger" })
                            </div>
                        </div>



                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="ChequeNo" class="col-form-label">Cheque No:</label>
                                @Html.TextBoxFor(model => model.ChequeNo, new { id = "txtChequeNo", @class = "form-control", placeholder = "Cheque No", style = "max-width:100%" })
                                @Html.ValidationMessageFor(model => model.ChequeNo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="MoneyReceiptNo" class="col-form-label">Money Receipt No:</label>
                                @Html.TextBoxFor(model => model.MoneyReceiptNo, new { id = "txtMoneyReceiptNo", @class = "form-control", placeholder = "Money Receipt No", style = "max-width:100%" })
                                @Html.ValidationMessageFor(model => model.MoneyReceiptNo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="txtDescription" class="col-form-label">Reference:</label>
                                @Html.TextAreaFor(model => model.ReferenceNo, new { id = "txtReferenceNo", placeholder = "Reference", @required = "required", @class = "form-control", Rows = 1, style = "max-width:100%" })
                                @Html.ValidationMessageFor(model => model.ReferenceNo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <input type="submit" class="btn btn-warning" value="Update" />
                </div>
            </div>
        }
    </div>
</div>


@section Scripts {

    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

<script>
    $(document).ready(function () {

        $('.datepickeronPage').datepicker({
            dateFormat: 'dd-M-yy',
            showOn: 'both',
            buttonText: "<i class='fa fa-calendar'></i>",
            changeMonth: true,
            changeYear: true,
            yearRange: "1950:+150"
        });

    });



    var collaction = @Html.Raw(Json.Encode(Model.DataList));

        function deleteCollaction(id, name) {
            $("#hid").text(name);
            $("#masterId").val(id);
        }

        function editCollaction(id) {
            var LObj = collaction.find(x => x.PaymentMasterId === id);
           
            $("CCGId").val(LObj.CGId);
            $("#CPaymentMasterId").val(LObj.PaymentMasterId);
            var date = DateCustom(LObj.TransactionDate);
            $("#TransactionDateString").val(date);
            $("#txtBankCharge").val(LObj.BankCharge);
            $("#ddlAccounting_BankOrCashParantId").val(LObj.PaymentFromHeadGLId).change();
            $("#ddlPaymentToHeadGLId").val(LObj.PaymentToHeadGLId);
            $("#txtChequeNo").val(LObj.ChequeNo);
            $("#txtMoneyReceiptNo").val(LObj.MoneyReceiptNo);
            $("#txtReferenceNo").val(LObj.ChequeNo);

    }


    $("#ddlAccounting_BankOrCashParantId").change(function () {
        var bankOrCashParantId = $("#ddlAccounting_BankOrCashParantId").val();
        $.ajax({
            type: "GET",
            url: "@Url.Action("HeadGLByHead5ParentIdGet", "Vouchers")",
            datatype: "Json",
            data: { companyId: "@Model.CompanyId", parentId: bankOrCashParantId },
            success: function (data) {
            if (data) {
                $("#ddlPaymentToHeadGLId").empty();
            $(data).each(function (index, item) {
                $("#ddlPaymentToHeadGLId").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
            });
            }
            }
            });
    })


    function DateCustom(orderDate) {
        var dateString = orderDate.substr(6);
        var currentTime = new Date(parseInt(dateString));
        var month = currentTime.getMonth() + 1;
        if (month < 10) {
            month = "0" + month;
        }
        var day = currentTime.getDate();
        if (day < 10) {
            day = "0" + day;
        }
        var year = currentTime.getFullYear();
        var date = year + '-' + month + '-' + day;
        return date;
    }

</script>
}