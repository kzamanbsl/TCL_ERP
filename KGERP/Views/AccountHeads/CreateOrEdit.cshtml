@model KGERP.ViewModel.AccountHeadViewModel

@{
    ViewBag.Title = "CreateOrEdit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.AccountHead.AccountHeadId)
    @Html.HiddenFor(model => model.AccountHead.CompanyId)

<div class="form-horizontal">
    <h4>Account Head </h4>
    <hr style="border-color:#006747; padding:0px;margin-top: 10px;margin-bottom: 20px; border-width: 2px;" />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="col-md-6">
        <div class="form-group">
            @Html.LabelFor(model => model.AccountHead.ParentId, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.AccountHead.ParentHead.AccName, new { htmlAttributes = new { @class = "form-control", @name = "accountName", @id = "accountName" } })
                @Html.HiddenFor(x => x.AccountHead.ParentId, new { @id = "parentId", @name = "parentId" })
            </div>
        </div>
    </div>

    <div class="col-md-6">
        <div class="form-group">
            @Html.LabelFor(model => model.AccountHead.AccCode, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.AccountHead.AccCode, new { htmlAttributes = new { @class = "form-control", @id = "txtAccountCode" } })
                @Html.ValidationMessageFor(model => model.AccountHead.AccCode, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="col-md-6">
        <div class="form-group">
            @Html.LabelFor(model => model.AccountHead.AccName, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.AccountHead.AccName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AccountHead.AccName, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>



    <div class="col-md-6">
        <div class="form-group">
            @Html.LabelFor(model => model.AccountHead.Remarks, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.AccountHead.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AccountHead.Remarks, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    

    <div class="col-md-12">
        <div class="col-md-3">
            <a href="@Url.Action("Index")" class="btn btn-danger">
                <span class="glyphicon glyphicon-arrow-left"></span> Back
            </a>
        </div>
        <div class="col-md-6">
            @if (TempData["message"] != null)
            {
                <b class="text-danger">@TempData["message"]</b>
            }
        </div>
        <div class="col-md-3">
            <input type="submit"  value="Save"  class="btn btn-primary pull-right" />
        </div>
    </div>
</div>
}



@if (TempData["errMessage"] != null)
{
    <script type="text/javascript">
        window.onload = function () {
            alert("This Account Head Already Exists");
        };
    </script>
}


@if (TempData["DataSave"] != null)
{
    <script type="text/javascript">
        window.onload = function () {
            alert("Data Save Successfully!");
        };
    </script>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")


    <style type="text/css">
        .image {
            float: left;
            max-height: 50px;
            max-width: 50px;
            margin-right: 10px;
        }

        .name {
            margin: 0;
            padding: 0;
        }

        .username {
            display: block;
            font-weight: bold;
            margin-bottom: 1em;
        }

        .ui-autocomplete {
            max-height: 320px;
            overflow: auto;
        }
    </style>
    <script type="text/javascript">
        $(function () {
            $("#accountName").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/AccountHeads/AutoComplete/',
                        //data: "{ 'prefix': '" + request.term + "'}",
                        data: '{"prefix":"' + request.term + '"}',
                        dataType: "json",
                        type: "POST",
                        cache: true,
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            //alert(response.responseText);
                        },
                        failure: function (response) {
                            //alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#parentId").val(i.item.val);
                },
                minLength: 1,
                change: function (event, ui) {
                    loadNextAccountHead(ui.item.val);
                },
                cache: true

            }).focus(function () {
                $(this).autocomplete("search");
            });
        });



        function loadNextAccountHead(parentId) {
            $.ajax({
                url: '/AccountHeads/GetNextAccountHead?parentId=' + parentId,
                type: "GET",
                async: true,
                processData: false,
                cache: false,
                success: function (data) {

                    var result = JSON.parse(data);
                   
                    $('#txtAccountCode').val(result);
                    $('#txtAccountCode').prop("readonly", true);

                },
                error: function (xhr) {
                    alert('error');
                }
            });

        }
    </script>
}