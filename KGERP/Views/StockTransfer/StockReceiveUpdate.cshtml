@model KGERP.Service.ServiceModel.StockTransferModel
@using KGERP.Utility;
@{
    ViewData["Title"] = "Stock Transfer Receive";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int sl = 0;
    decimal totalTransferQty = 0;
    decimal totalReceivedQty = 0;
    string message = "";
}


<style type="text/css">
    input, select, textarea {
        max-width: 100%;
    }
</style>

<section class="content-header">
    <h3>
        @if (Model.StockTransferId > 0)
        {
            <span>
                Transfer of: <a target="_blank" href="~/StockTransfer/StockTransferReport?companyId=@Model.CompanyId&stockTransferIdId=@Model.StockTransferId">@Model.ChallanNo</a>
            </span>
        }
        else
        {
            <span>Stock Transfer</span>
        }
    </h3>
    <ol class="breadcrumb">
        <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i>Dashboard</a></li>
        <li class="active"><a href="@Url.Action("StockReceiveIndex","StockTransfer",new {companyId=Model.CompanyId })" class="link-black">Received List</a></li>
    </ol>
</section>

@using (Html.BeginForm("StockReceiveUpdate", "StockTransfer", FormMethod.Post))
{
    @Html.HiddenFor(model => model.StockTransferId)
    @Html.HiddenFor(model => model.CompanyId)<section class="content">
        <div class="row">
            <div class="box">
                <div class="box-danger">
                    <div class="box-body">
                        <div class="col-md-1"> </div>
                        <div class="col-md-10">
                            <table class="table">
                                <tbody>
                                    <tr>
                                        <td style="width:10%;">Receive Date</td>
                                        <td style="width:1%;">:</td>
                                        <td style="width:19%;">
                                            @if (Model.IsReceived == 1)
                                            {
                                                Model.ReceivedDate.Value.ToString("dd-MMM-yyyy");
                                            }
                                            else
                                            {
                                                @Html.EditorFor(model => model.ReceivedDate, new { htmlAttributes = new { @id = "receiveDate", @class = "datepicker", @style = "width:80%", @autocomplete = "off", @readonly = "readonly" } })
                                                @Html.ValidationMessageFor(model => model.ReceivedDate, "", new { @class = "text-danger" })
                                            }
                                        </td>

                                        <td style="width:10%;">Challan No</td>
                                        <td style="width:1%;">:</td>
                                        <td style="width:19%;">@Model.ChallanNo</td>

                                        <td style="width:10%;">Challan Date</td>
                                        <td style="width:1%;">:</td>
                                        <td style="width:19%;">@Model.TransferDate.Value.ToString("dd-MMM-yyyy")</td>
                                    </tr>

                                    <tr>
                                        <td>Transfer From</td>
                                        <td>:</td>
                                        <td>@Model.StockFrom</td>
                                        <td>Transfer To</td>
                                        <td>:</td>
                                        <td>@Model.StockTo</td>
                                        <td>Vehicle No</td>
                                        <td>:</td>
                                        <td>@Model.VehicleNo</td>
                                    </tr>
                                    <tr>
                                        <td>Truck Fare</td>
                                        <td>:</td>
                                        <td>@Model.TruckFare</td>
                                        <td>Labour Bill</td>
                                        <td>:</td>
                                        <td>@Model.LabourBill</td>
                                        <td>Received By</td>
                                        <td>:</td>
                                        <td>@Model.ReceivePerson</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        <div class="col-md-1"> </div>
                        <div class="table-responsive col-md-12  text-nowrap">
                            <table id="KgErpDataTable" class="table table-striped">
                                <thead style="background-color:#ddd;">
                                    <tr>
                                        <th style="padding:5px;text-align:center;">SL</th>
                                        <th style="padding:5px;text-align:left;">Product</th>
                                        <th style="padding:5px;text-align:left;">Unit</th>
                                        <th style="padding:5px;text-align:center;">Transfer Quantity</th>
                                        <th style="padding:5px;text-align:center;">Received Quantity</th>
                                        <th style="padding:5px;text-align:center;">Is Received</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (var i = 0; i < Model.Items.Count; i++)
                                    {
                                        totalTransferQty += Model.Items[i].TransferQty ?? 0;
                                        totalReceivedQty += Model.Items[i].ReceivedQty ?? 0;


                                        <tr>
                                            <td style="padding:5px">@(++sl)</td>
                                            <td style="padding:5px;text-align:left;">@Model.Items[i].ProductName</td>
                                            <td style="padding:5px;text-align:left;">@Model.Items[i].UnitName</td>
                                            <td style="padding:5px;text-align:right;">@String.Format("{0:0.000}", Model.Items[i].TransferQty)</td>
                                            <td style="padding:5px;text-align:right;">
                                                @if (Model.Items[@i].IsRecieved == 1)
                                                {
                                                    @String.Format("{0:0.000}", Model.Items[@i].ReceivedQty)
                                                }
                                                else
                                                {
                                                    <input required="true" type="number" class="form-control" name="Items[@i].ReceivedQty" value="@Model.Items[i].TransferQty" min="0" max="@Model.Items[i].TransferQty" />
                                                    @Html.ValidationMessageFor(model => model.Items[i].ReceivedQty, "", new { @class = "text-danger" })
                                                    <input class="form-control" type="hidden" name="Items[@i].StockTransferDetailId" value="@Model.Items[i].StockTransferDetailId" />
                                                }
                                            </td>
                                            <td style="padding:5px;text-align:right;">
                                                @if (Model.Items[i].IsItemChecked)
                                                {
                                                    @Html.CheckBoxFor(m => m.Items[@i].IsItemChecked, new { @checked = "checked", @readonly = "readonly" })
                                                }
                                                else
                                                {
                                                    @Html.CheckBoxFor(m => m.Items[@i].IsItemChecked)
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                                <tfoot style="background-color:#eee;">
                                    <tr>
                                        <th></th>
                                        <th colspan="2">TOTAL</th>
                                        <th style="padding:5px;text-align:right;">@String.Format("{0:0.000}", totalTransferQty) </th>
                                        <th style="padding:5px;text-align:right;">@String.Format("{0:0.000}", totalReceivedQty) </th>
                                        <th></th>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                    <div class="box-footer">
                        @if (Model.StockTransferId > 0)
                        {
                            <div class="row">
                                <div class="col-md-6"></div>
                                <div class="col-md-6">


                                    @if (Model.Status == (int)StockTransferStatusEnum.Reveived)
                                    {
                                        <button type="button" class="btn btn-warning"><i class="fa fa-check"></i> &nbsp; Received</button>
                                    }
                                    else if (Model.Status == (int)StockTransferStatusEnum.Submitted)
                                    {
                                        <button type="submit" class="btn btn-success"><i class="fa fa-save"></i> &nbsp; Receive</button>
                                    }
                                </div>
                            </div>
                        }

                    </div>
                </div>
            </div>
        </div>
    </section>


}



@section Scripts {

    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script type="text/javascript">
         var message = '@message';
         if(message){
            alert(message);
         }

        $(document).ready(function () {

            var $selectAll = $('#selectAll'); // main checkbox inside table thead
            var $table = $('.table'); // table selector
            var $tdCheckbox = $table.find('tbody input:checkbox'); // checboxes inside table body
            var tdCheckboxChecked = 0; // checked checboxes

            // Select or deselect all checkboxes depending on main checkbox change
            $selectAll.on('click', function () {
                $tdCheckbox.prop('checked', this.checked);
            });

            // Toggle main checkbox state to checked when all checkboxes inside tbody tag is checked
            $tdCheckbox.on('change', function (e) {
                debugger;
                tdCheckboxChecked = $table.find('tbody input:checkbox:checked').length; // Get count of checkboxes that is checked
                // if all checkboxes are checked, then set property of main checkbox to "true", else set to "false"
                $selectAll.prop('checked', (tdCheckboxChecked === $tdCheckbox.length));
            })
        });


        $(function () {
            $('.datepicker').datepicker({
                dateFormat: "mm/dd/yy",
                showOn: 'both',
                buttonText: "<i class='fa fa-calendar'></i>",
                changeMonth: true,
                changeYear: true,
                yearRange: "2001:+50"
            });
        });


        function changeStatus(id) {
            var receiveDate = $("#receiveDate").val();
            if (receiveDate == undefined || receiveDate == "") {
                alert("Please select Receive Date first");
                return false;
            }

            var stockTransferId = $("#stockTransferId_" + id).val();
            var stockTransferDetailId = $("#stockTransferDetailId_" + id).val();
            var receivedQty = $("#receivedQty_" + id).val();
            var productId = $("#productId_" + id).val();


            $.ajax({
                url: '/StockTransfer/StockReceiveConfirmStatus?stockTransferDetailId=' + stockTransferDetailId + '&receiveQty=' + receivedQty + "&stockTransferId=" + stockTransferId + "&receiveDate=" + receiveDate + "&productId="+ productId + "",
                type: "GET",
                async: true,
                dataType: "html",
                success: function (response) {
                    window.location.href = '@Url.Action("StockReceiveConfirm", "StockTransfer",new { stockTransferId=Model.StockTransferId})'
                },
                error: function (xhr) {
                    alert('error');
                }
            });
        }

    </script>
   
}
