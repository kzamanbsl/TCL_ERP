@model KGERP.Service.ServiceModel.StockTransferModel
@using KGERP.Utility;
@{
    ViewData["Title"] = "Material Transfer";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int sl = 0;
    decimal totalQty = 0;
}

<style type="text/css">
    input, select, textarea {
        max-width: 100%;
    }
</style>

<section class="content-header">
    <h3>
        @if (Model.StockTransferId > 0)
        {
            <span>
                Transfer of: <a target="_blank" href="~/StockTransfer/StockTransferReport?companyId=@Model.CompanyId&stockTransferIdId=@Model.StockTransferId">@Model.ChallanNo</a>
            </span>
        }
        else
        {
            <span>Material Transfer</span>
        }
    </h3>
    <ol class="breadcrumb">
        <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i>Dashboard</a></li>
        <li class="active"><a href="@Url.Action("Index","StockTransfer",new {companyId=Model.CompanyId })" class="link-black">Transfer List</a></li>
    </ol>
</section>

@using (Html.BeginForm("StockTransferSlave", "StockTransfer", FormMethod.Post, new { id = "stockTransferSlaveFormId", @class = "formValidator" }))
{
    <section class="content">
        <div class="row">
            <div class="box">

                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.StockTransferId, new { id = "hidStockTransferId" })
                @Html.HiddenFor(model => model.StockTransferDetailId, new { id = "hidStockTransferDetailId" })
                @Html.HiddenFor(model => model.ActionId, new { id = "ActionId" })
                @Html.HiddenFor(model => model.CompanyId, new { id = "CompanyFK" })

                <div class="box-danger">
                    <div class="box-body">
                        @if (Model.StockTransferId > 0)
                        {
                            if (Model.TransferDate.HasValue)
                            {
                                <input type="text" hidden id="txtTransferDate" value="@Model.TransferDate.Value.ToString("dd-MM-yyyy")" />
                            }
                            else
                            {
                                <input type="text" hidden id="txtTransferDate" value="@DateTime.Now.ToString("dd-MM-yyyy")" />
                            }

                            @Html.HiddenFor(model => model.StockIdFrom, new { id = "stockIdFrom" })

                            <div class="col-md-1"> </div>
                            <div class="col-md-10">
                                <table class="table">
                                    <tr>
                                        <th style="width:18%">
                                            Challan No
                                        </th>
                                        <th style="width:2%">:</th>
                                        <td style="width:30%"><label class="col-form-label">@Model.ChallanNo</label></td>

                                        <th style="width:18%"> Issue Date</th>
                                        <th style="width:2%">:</th>
                                        <td style="width:30%">
                                            @if (Model.TransferDate != null)
                                            {
                                                @Model.TransferDate.Value.ToString("dd-MM-yyyy")
                                            }
                                        </td>
                                    </tr>
                                    <tr>
                                        <th>Transfer From</th>
                                        <th>:</th>
                                        <td>@Model.StockFrom</td>

                                        <th>Transfer To</th>
                                        <th>:</th>
                                        <td> @Model.StockTo</td>
                                    </tr>
                                    <tr>
                                        <th>Vehicle No</th>
                                        <th>:</th>
                                        <td>@Model.VehicleNo</td>

                                        <th>Truck Fare</th>
                                        <th>:</th>
                                        <td>@Model.TruckFare</td>
                                    </tr>
                                    <tr>
                                        <th>Receive Person</th>
                                        <th>:</th>
                                        <td>@Model.ReceivePerson</td>

                                        <th>Phone No</th>
                                        <th>:</th>
                                        <td>@Model.ReceiverPhone</td>
                                    </tr>
                                    <tr>
                                        <th>Reference No</th>
                                        <th>:</th>
                                        <td>@Model.ReferenceNo</td>

                                        <th></th>
                                        <th></th>
                                        <td></td>
                                    </tr>
                                </table>
                            </div>
                            <div class="col-md-1"> </div>
                        }

                        <div class="box-body">
                            @if (Model.StockTransferId == 0)
                            {
                                <div class="row mb-2">
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label for="txtTransferDate" class="form-control-label">Transfer Date</label>
                                            <div class="">
                                                @Html.EditorFor(model => model.TransferDate, new { htmlAttributes = new { @class = "datepicker", @id = "txtTransferDate", @autocomplete = "off" } })
                                                @Html.ValidationMessageFor(model => model.TransferDate, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label class="control-label">Transfer From</label>
                                            <div class="">
                                                @Html.DropDownListFor(model => model.StockIdFrom, new SelectList(Model.StockFromList, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control searchingDropdown", @id = "stockIdFrom" })
                                                @Html.ValidationMessageFor(model => model.StockIdFrom, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label class="control-label">Transfer To</label>
                                            <div class="">
                                                @Html.DropDownListFor(model => model.StockIdTo, new SelectList(Model.StockToList, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control searchingDropdown", @id = "stockIdTo" })
                                                @Html.ValidationMessageFor(model => model.StockIdTo, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row mb-2">
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label for="txtVehicleNo" class="form-control-label">Vehicle No</label>
                                            <div class="">
                                                @Html.EditorFor(model => model.VehicleNo, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                                @Html.ValidationMessageFor(model => model.VehicleNo, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label class="control-label">Truck Fare</label>
                                            <div class="">
                                                @Html.EditorFor(model => model.TruckFare, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                                @Html.ValidationMessageFor(model => model.TruckFare, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label class="control-label">Labour bill</label>
                                            <div class="">
                                                @Html.EditorFor(model => model.LabourBill, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                                @Html.ValidationMessageFor(model => model.LabourBill, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row mb-2">
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label for="" class="form-control-label">Receive Person</label>
                                            <div class="">
                                                @Html.EditorFor(model => model.ReceivePerson, new { htmlAttributes = new { @class = "form-control", @name = "receiverName", @id = "receiverName" } })
                                                @Html.HiddenFor(x => x.ReceivedBy, new { @id = "receivedBy", @name = "receivedBy" })
                                                @Html.ValidationMessageFor(model => model.ReceivedBy, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label class="control-label">Phone No</label>
                                            <div class="">
                                                @Html.EditorFor(model => model.ReceiverPhone, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @id = "receiverPhone" } })
                                                @Html.ValidationMessageFor(model => model.ReceiverPhone, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label class="control-label">Reference No</label>
                                            <div class="">
                                                @Html.EditorFor(model => model.ReferenceNo, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                                @Html.ValidationMessageFor(model => model.ReferenceNo, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }

                            @if (Model.IsReceived == 0 && Model.Status == (int)StockTransferStatusEnum.Draft)
                            {
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group" style="padding:0px">
                                            <label for="message-text" class="col-form-label">Material/Item Name:</label>
                                            @Html.EditorFor(model => model.ProductName, new {htmlAttributes = new{ @autocomplete = "on", @class = "form-control", @name = "Material/Item Name", @id = "txtProductName" }})
                                            @Html.HiddenFor(model => model.ProductId, new { id = "hfProductId" })
                                            @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    @*<div class="col-md-2">
                                            <div class="form-group">
                                                <label>Stock Available Quantity</label>
                                                <div class="input-group">
                                                    <input type="text" id="stockAvailableQty" class="form-control"
                                                           autocomplete="off" style="text-align:right" readonly />
                                                    @Html.HiddenFor(model => model.UnitPrice, new { id = "hidUnitPrice" })
                                                </div>
                                            </div>
                                        </div>*@
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label>Quantity</label>
                                            <div class="input-group">
                                                @Html.TextBoxFor(model => model.TransferQty, new { id = "txtQuantity", @class = "form-control", @style = "width:100%;border:1px black solid", placeholder = "Quantity", required = "Required" })
                                                @Html.ValidationMessageFor(model => model.TransferQty, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <label>&nbsp;</label>
                                        <button type="submit" id="transCreateBtn" class="btn btn-primary btn-block">
                                            <i class='fa fa-plus'></i>
                                            @if (Model.StockTransferId > 0)
                                            {
                                                <span> Add Item</span>
                                            }
                                            else
                                            {
                                                <span> Create</span>
                                            }
                                        </button>
                                    </div>
                                </div>
                            }
                        </div>

                        @if (Model.StockTransferId > 0)
                            {
                                @Html.HiddenFor(model => model.StockTransferDetailId, new { id = "hidSlaveID" })
                                <div class="table-responsive col-md-12  text-nowrap">
                                    <table id="KgErpDataTable" class="table table-striped">
                                        <thead style="background-color:#ddd;">
                                            <tr>
                                                <th style="padding:5px;text-align:center;">SL</th>
                                                <th style="padding:5px;text-align:left;">Material/Item Name</th>
                                                <th style="padding:5px;text-align:left;">Unit</th>
                                                <th style="padding:5px;text-align:center;">Quantity</th>
                                                @if (Model.Status == (int)POStatusEnum.Draft)
                                                {
                                                    <th style="padding:5px;text-align:center;">Action</th>
                                                }
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in Model.Items)
                                            {
                                                totalQty += @item.TransferQty ?? 0;
                                                <tr>
                                                    <td style="padding:5px">@(++sl)</td>
                                                    <td style="padding:5px;text-align:left;">@item.ProductName</td>
                                                    <td style="padding:5px;text-align:left;">@item.UnitName</td>
                                                    <td style="padding:5px;text-align:center;">@String.Format("{0:0.000}", item.TransferQty)</td>
                                                    @{ if (Model.Status == (int)StockTransferStatusEnum.Draft)
                                                        {
                                                            <td style="padding:5px;text-align:center;">
                                                                <a id="@item.StockTransferDetailId" onclick=" makeEditble(@item.StockTransferDetailId);" class="linkPointer" title="Edit"><i class="fa fa-edit" aria-hidden="true"></i></a>

                                                                <a id="@item.StockTransferDetailId" onclick="makeDeletable(@item.StockTransferDetailId)" class="linkPointer" data-toggle="modal" data-target="#deleteTransferSlaveModal" title="Delete" data-placement="top"><i class="glyphicon glyphicon-trash" aria-hidden="true"></i></a>
                                                            </td>
                                                        }
                                                    }
                                                </tr>
                                            }
                                        </tbody>
                                        <tfoot style="background-color:#eee;">
                                            <tr>
                                                <th></th>
                                                <th colspan="2">TOTAL</th>
                                                <th style="padding:5px;text-align:center;">@String.Format("{0:0.000}", totalQty) </th>
                                                @if (Model.Status == (int)StockTransferStatusEnum.Draft)
                                                {
                                                    <th></th>
                                                }
                                            </tr>
                                        </tfoot>
                                    </table>
                                </div>
                            }
                      
                    </div>
                    <div class="box-footer">

                    </div>
                </div>
            </div>
        </div>
    </section>
}

@using (Html.BeginForm("StockTransferSubmit", "StockTransfer", FormMethod.Post, new { @class = "formValidator" }))
{

    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="modal fade" id="submitIssueModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b><span>@Model.ChallanNo</span></b></h5>
                </div>
                <div class="modal-body">
                    @Html.HiddenFor(model => model.StockTransferId, new { id = "hidsubmitStockTransferId" })
                    @Html.HiddenFor(model => model.CompanyId, new { id = "submitCompanyFK" })

                    @Html.HiddenFor(model => model.ActionId, new { id = "submitActionId" })
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div style="text-align:center">
                        <h3>Are you sure to submit this Transfer ?</h3>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="col-md-3">
                        <button type="button" onclick="resetIssueForm()" class="btn btn-warning fa fa-close" data-dismiss="modal">&nbsp;NO</button>
                    </div>
                    <div class="col-md-9">
                        <button type="submit" id="btnsave" style="width:100%" class="btn btn-primary fa fa-remove">&nbsp;<span>Yes</span></button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


@using (Html.BeginForm("DeleteStockTransferSlave", "StockTransfer", FormMethod.Post, new { id = "deleteTransferSlaveFormId", @class = "formValidator" }))
{
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="modal fade" id="deleteTransferSlaveModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b>Delete Transfer Material/Item</b></h5>
                </div>
                <div class="modal-body">
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.StockTransferDetailId, new { id = "hidDeleteTransSlaveId" })
                    @Html.HiddenFor(model => model.StockTransferId, new { id = "hidDeleteTransferId" })
                    @Html.HiddenFor(model => model.CompanyId, new { id = "deleteCompanyFK" })
                    @Html.HiddenFor(model => model.ActionId, new { id = "deleteActionId" })

                    <div style="text-align:center">
                        <h3>Are you sure to Delete this Transfer Material/Item?</h3>
                    </div>
                </div>

                <div class="modal-footer">
                    <div class="col-md-3">
                        <button type="button" onclick="resetIssueSlaveForm()" class="btn btn-warning fa fa-close" data-dismiss="modal">&nbsp;NO</button>
                    </div>
                    <div class="col-md-9">
                        <button type="submit" id="btnsave" style="width:100%" class="btn btn-primary fa fa-remove">&nbsp; Delete</button>
                    </div>
                </div>

            </div>
        </div>
    </div>
}



@section scripts {

    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

<script type="text/javascript">

        $('.datepicker').datepicker({
            dateFormat: "dd/mm/yy",
            showOn: 'both',
            buttonText: "<i class='fa fa-calendar'></i>",
            changeMonth: true,
            changeYear: true,
            yearRange: "2001:+50"
        });

        $(document).ready(function () {

            $(function () {

            $("#txtProductName").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/StockTransfer/AutoCompleteProduct/",
                        dataType: "json",
                        data: {
                            companyId: @Model.CompanyId,
                            prefix: request.term,
                            productType: "R"
                        },
                        type: "GET",
                        cache: true,
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            alert(response.responseText);
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#hfProductId").val(i.item.val);
                    $("#txtProductName").val(i.item.val);
                },
                minLength: 1,
                change: function (event, ui) {

                    loadStockAvailableQuantity(ui.item.val);
                }
            }).focus(function () {
                $(this).autocomplete("search");
            });

        });

            function loadStockAvailableQuantity(productId) {

                var stockIdForm = $('#stockIdFrom').val();
                var companyId = $('#CompanyFK').val();
                var date = $('#txtTransferDate').val();

            $.ajax({
                url: "/StockTransfer/GetStockAvailableQuantity/",
                dataType: "json",
                data: {
                    companyId: companyId, productId: productId, stockFrom: stockIdForm,  selectedDate:date

                    },
                type: "GET",
                async: true,
                success: function (data) {
                    $('#stockAvailableQty').val(data.OpeningQty);
                    $('#hidUnitPrice').val(data.OpeningRate);

                    if (result < 0) {
                        $("#stockAvailableQty").css('color', 'red');
                        $("#stockAvailableQty").css('font-weight', 'bold');
                    }
                    else {
                        $("#stockAvailableQty").css('color', 'green');
                        $("#stockAvailableQty").css('font-weight', 'bold');
                    }
                },
                error: function (xhr) {
                }
            });
        }
        });

        $(function () {
            $("#receiverName").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Employee/EmployeeAutoComplete/',
                        data: '{"prefix":"' + request.term + '"}',
                        dataType: "json",
                        type: "POST",
                        cache: true,
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                        },
                        failure: function (response) {
                        }
                    });
                },
                select: function (e, i) {
                    $("#receivedBy").val(i.item.val);
                },
                minLength: 1,
                change: function (event, ui) {
                    loadEmployeeInformation(ui.item.val);
                }

            }).focus(function () {
                $(this).autocomplete("search");
            });
        });

        function loadEmployeeInformation(id) {
            $.ajax({
                url: '/Employee/GetEmployeeInformation?id=' + id,
                type: "GET",
                async: true,
                processData: false,
                cache: false,
                success: function (data) {
                    var result = JSON.parse(data);
                    $('#receiverPhone').val(result.MobileNo);
                },
                error: function (xhr) {
                    alert('error');
                }
            });
        }

        function makeDeletable(rowId) {
       $('#hidDeleteTransSlaveId').val(rowId);
       $('#deleteActionId').val(3);
   }

        function resetTransSlaveForm() {
     $('#transSlaveFormId')[0].reset();
     $('#ActionId').val(1);
   }

        function makeEditble(rowId) {

       $.ajax({
             type: "POST",
             url: "@Url.Action("SingleStockTransferSlave", "StockTransfer")",
             datatype: "Json",
             data: { id: rowId },
             success: function (data) {
                 $('#transCreateBtn').html("<i class='fa fa-edit'></i>&nbsp;Update");
                 $("#hidStockTransferId").val(data.StockTransferId);
                 $('#ActionId').val(2);
                 $("#CompanyFK").val(data.CompanyId);
                 $("#txtProductName").val(data.ProductName);
                 $("#hfProductId").val(data.ProductId);
                 $("#txtQuantity").val(data.TransferQty);
                 $("#hidStockTransferDetailId").val(data.StockTransferDetailId)
                 window.scrollTo({ top: 0, behavior: 'smooth' });
             }
            });
       }

</script>
}