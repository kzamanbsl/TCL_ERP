@model KGERP.Service.Implementation.Warehouse.VMStockAdjustDetail
@using KGERP.Utility;


@{
    ViewData["Title"] = "Sales Item Adjustment";
    Layout = "~/Views/Shared/_Layout.cshtml";

    int sl = 0;

}

<style type="text/css">

    input, select, textarea {
        max-width: 100%;
    }
</style>

<section class="content-header">
    <h1>
        @if (Model.StockAdjustId > 0)
        {
            <span>
                Item Adjustment History of: <a target="_blank" href="~/Procurement/ProcurementSalesOrderDetailsReport?companyId=@Model.CompanyFK&orderMasterId=@Model.StockAdjustId">@Model.InvoiceNo</a>
            </span>
        }
        else
        {
            <span>
                Item Adjustment
            </span>
        }


    </h1>
    <ol class="breadcrumb">
        <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i>Dashboard</a></li>
        <li class="active">Sales Item Adjustment</li>
    </ol>
</section>
@using (Html.BeginForm("GCCLProcurementSalesItemAdjustment", "Warehouse", FormMethod.Post, new { id = "procurementSalesItemAdjustmentFormId", @class = "formValidator" }))
{
    <section class="content">
        <div class="row">
            <div class="box">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.StockAdjustId, new { id = "hidOrderMasterId" })

                @Html.HiddenFor(model => model.ActionId, new { id = "ActionId" })
                @Html.HiddenFor(model => model.CompanyFK, new { id = "CompanyFK" })

                <div class="box-danger">

                    <!-- /.box-header -->
                    <div class="box-body">
                        @if (Model.StockAdjustId > 0)
                        {
                            <div class="col-md-1"> </div>
                            <div class="col-md-10">
                                <table class="table">
                                    <tr>
                                        <td width="15%"><b>Adjustment No</b></td>
                                        <td width="1%">:</td>
                                        <th width="34%">@Model.InvoiceNo</th>
                                        <td width="15%"><b>Delivery Date</b></td>
                                        <td width="1%">:</td>
                                        <td width="34%">@Model.AdjustDate.ToString("dd-MM-yyyy")</td>
                                    </tr>
                                    <tr>
                                        <th>Remarks</th>
                                        <th>:</th>
                                        <td>@Model.Remarks</td>
                                        <th>Created By</th>
                                        <th>:</th>
                                        <td>@Model.CreatedBy</td>
                                    </tr>
                                </table>
                            </div>
                            <div class="col-md-1"> </div>
                        }
                        <div class="box-body">

                            @if (Model.StockAdjustId == 0)
                            {
                                <div class="row">
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>Adjust Date</label>
                                            <input name="AdjustDate" asp-for="AdjustDate" type="text" value="@DateTime.Today.ToString("yyyy-MM-dd")" required="required" class="datePicker form-control" id="txtDeliveryDate" placeholder="Adjust Date" autocomplete="off">
                                            @Html.ValidationMessageFor(model => model.AdjustDate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-9">
                                        <div class="form-group">
                                            <label for="txtDescription" class="col-form-label">Remarks:</label>
                                            @Html.TextAreaFor(model => model.Remarks, new { id = "txtDescription", placeholder = "Description", @class = "form-control", rows = 2 })
                                            @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            }
                            <div class="row">
                                <div class="col-md-5">
                                    <div class="form-group" style="padding:0px">
                                        <label for="message-text" class="col-form-label">Finish Item:</label>
                                        @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @autocomplete = "on", @class = "form-control", @name = "Product Name", @id = "txtProductName" } })
                                        @Html.HiddenFor(model => model.ProductId, new { id = "ddlRProductFK" })                                

                                        @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label>Less Qty</label>
                                        <div class="input-group">
                                            @Html.TextBoxFor(model => model.LessQty, new { id = "txtLessQty", @class = "form-control", @style = "width:100%;border:1px black solid", placeholder = "Short Quantity" })
                                            @Html.ValidationMessageFor(model => model.LessQty, "", new { @class = "text-danger" })

                                            <div class="input-group-addon">
                                                <span class="txtUnitName"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label>Excess Qty</label>
                                        <div class="input-group">
                                            @Html.TextBoxFor(model => model.ExcessQty, new { id = "txtOverQty", @class = "form-control", @style = "width:100%;border:1px black solid", placeholder = "Excess Quantity" })
                                            @Html.ValidationMessageFor(model => model.ExcessQty, "", new { @class = "text-danger" })

                                            <div class="input-group-addon">
                                                <span class="txtUnitName"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Costing Price</label>
                                        <div class="input-group">
                                            @Html.TextBoxFor(model => model.UnitPrice, new { id = "txtUnitPrice", type = "number", step = "0.01", @class = "form-control", @style = "width:100%;border:1px black solid", placeholder = "Purchasing Price", required = "Required" })
                                            @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })

                                            <div class="input-group-addon">
                                                <span class="txtUnitName"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                        <div class="box-footer">
                            <div class="row">
                                <div class="col-md-8">

                                </div>
                                <div class="col-lg-4 col-md-4">
                                    <button type="submit" id="poCreateBtn" class="btn btn-primary btn-block">
                                        <i class='fa fa-plus'></i>
                                        @if (Model.StockAdjustId > 0)
                                        {
                                            <span>Add Item In Adjustment</span>
                                        }
                                        else
                                        {
                                            <span>Create New Adjustment</span>
                                        }
                                    </button>
                                </div>
                            </div>
                        </div>

                        <!--Body Will by Start Here-->
                        @{
                            if (Model.StockAdjustId > 0)
                            {
                                decimal GTotal = 0;
                                decimal GOverTotal = 0;

                                @Html.HiddenFor(model => model.ID, new { id = "hidSlaveID" })
                                <div class="table-responsive col-md-12  text-nowrap">
                                    <table id="KgErpDataTable" class="table table-striped">
                                        <thead>
                                            <tr>
                                                <th>SL</th>
                                                <th class="center">Product Name </th>
                                                <th class="center">Short Quantity</th>
                                                <th class="center">Over Quantity</th>
                                                <th class="center">Unit Price </th>
                                                <th class="center">Total Short Price </th>
                                                <th class="center">Total Over Price </th>

                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in Model.DataListSlave)
                                            {
                                                GTotal += item.Amount;
                                                GOverTotal += item.OverAmount;

                                                <tr>
                                                    <td>@(++sl)</td>
                                                    <td>@item.ProductSubCategory @item.ProductName</td>
                                                    <td>@item.LessQty @item.UnitName</td>
                                                    <td>@item.ExcessQty @item.UnitName</td>


                                                    <td>@item.UnitPrice</td>
                                                    <td>@item.Amount</td>
                                                    <td>@item.OverAmount</td>


                                                </tr>
                                            }
                                        </tbody>
                                        <tfoot>
                                            <tr>
                                                <th>SL</th>
                                                <th colspan="4">Total </th>

                                                <th class="center">@GTotal </th>
                                                <th class="center">@GOverTotal </th>

                                            </tr>
                                        </tfoot>
                                    </table>

                                </div>
                            }
                        }
                    </div>



                    <div class="box-footer">
                        <div class="row">
                            <div class="col-md-2">

                            </div>
                            <div class="col-md-5">
                                <a target="_blank" class="btn btn-warning btn-block" style="width:100%" href="~/Warehouse/ProcurementSalesItemAdjustmentReport?companyId=@Model.CompanyFK&stockAdjustId=@Model.StockAdjustId">Adjust Report of @Model.InvoiceNo</a>

                            </div>
                            <div class="col-md-5">
                                @if (!Model.IsFinalized)
                                {
                                    <a onclick="makeStockAdjustIdSubmitable(@Model.StockAdjustId);" class="btn btn-success btn-block" style="width:100%" data-toggle="modal" data-target="#submitStockAdjustModal" title="Submit" data-placement="top"><i class="fa fa-fingerprint" aria-hidden="true"></i>Submit</a>

                                }
                                else
                                {
                                    <button class="btn btn-success btn-block" style="width:100%" disabled="disabled">Submitted</button>

                                }

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <div class="modal fade" id="deleteModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b>Delete Challan Item</b></h5>
                </div>
                <div class="modal-body">
                    <div style="text-align:center">
                        @Html.HiddenFor(model => model.ID, new { Value = "", id = "challanSlaveId" })

                        <h3>Are you sure to delete?</h3>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" id="btncloseandreset" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="submit" id="btnsave" class="btn btn-primary">&nbsp;Delete</button>&nbsp;

                </div>
            </div>
        </div>
    </div>
}


@using (Html.BeginForm("ProcurementSalesItemAdjustment", "Warehouse", FormMethod.Post, new { id = "submitProcurementSalesItemAdjustmentFormId", @class = "formValidator" }))
{
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="modal fade" id="submitStockAdjustModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b>Submit Adjustment</b></h5>
                </div>
                <div class="modal-body">

                    @Html.HiddenFor(model => model.CompanyFK, new { id = "submitCompanyFK" })
                    @Html.HiddenFor(model => model.StockAdjustId, new { id = "submitStockAdjustId" })
                    @Html.HiddenFor(model => model.ActionId, new { id = "submitActionId" })

                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div style="text-align:center">
                        <h3>Are you sure to Submit this Adjustment?</h3>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="col-md-3">
                        <button type="button" class="btn btn-warning fa fa-close" data-dismiss="modal">&nbsp;NO</button>
                    </div>
                    <div class="col-md-9">
                        <button type="submit" id="btnsave" style="width:100%" class="btn btn-primary fa fa-remove">&nbsp; Submit</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section scripts {

    <script type="text/javascript">

        function makeStockAdjustIdSubmitable(rowId) {
            $("#submitStockAdjustId").val(rowId)
            $('#submitCompanyFK').val("@Model.CompanyFK");
            $('#submitActionId').val(10);
        }


        function makeDeletale(rowId) {
            $('#hidDeleteOrderDetailId').val(rowId);
            $('#deleteActionId').val(3);
                                                    }
        function resetProcurementPurchaseRequisitionSlaveForm() {
            $('#procurementSalesOrderSlaveFormId')[0].reset();
            $('#ActionId').val(1);
        }


        $(document).ready(function () {
            //

            $('#datePickerById').datepicker({
                format: "yyyy-mm-dd",
                todayHighlight: true,
                autoclose: true,
                clearBtn: true
            }).on('changeDate', function (ev) {
                if ($(this).parents('form') && $(this).attr('required')) {
                    $(this).parents('form').bootstrapValidator('revalidateField', $(this));
                }
            });


              $("#txtProductName").autocomplete({
                source: function (request, response) {

                    $.ajax({
                        url:"@Url.Action("GCCLAutoCompleteRawPackingMaterialsGet", "Configuration")",// '/AccountHeads/AutoComplete/',
                        //data: "{ 'prefix': '" + request.term + "'}",
                        data: { companyId: "@Model.CompanyFK", prefix: request.term },
                        dataType: "json",
                        type: "get",
                        cache: true,
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            //alert(response.responseText);
                        },
                        failure: function (response) {
                            //alert(response.responseText);
                        }
                    });
                },

            select: function (e, i) {
               
                    $("#ddlRProductFK").val(i.item.val);

                    $.ajax({
                        type: "GET",
                        url: "@Url.Action("CommonProductByID", "Configuration")",
                        datatype: "Json",
                        data: { id: i.item.val },
                        success: function (data) {
                    
                            var items = "";
                            if (data) {

                                $('.txtUnitName').text(data.UnitName);
                                $('#txtUnitPrice').val(data.CostingPrice);



                                @*var customerTypeFK = $("#hidCustomerTypeFk").val();
                                if (customerTypeFK == "@((int)CustomerType.Dealer)") {
                                    $("#txtUnitPrice").val(data.TPPrice);

                                }
                                if (customerTypeFK == "@((int)CustomerType.Retail)") {
                                    $("#txtUnitPrice").val(data.MRPPrice);

                                }*@

                            }
                        }
                    });
                $('#txtProductName').focus();
               // $('#txtProductUnitPrice').focus();


                },
                minLength: 1,
                cache: true

            }).focus(function () {
                $(this).autocomplete("search");
            });





        });
            function makeEditble(rowId) {
             
            $.ajax({

                  type: "POST",
                  url: "@Url.Action("SingleOrderDetails", "Procurement")",
                  datatype: "Json",
                  data: { id: rowId },
                  success: function (data) {
                
                      $('#poCreateBtn').html("<i class='fa fa-edit'></i>&nbsp;Update");
                      $("#hidOrderMasterId").val(data.OrderMasterId);
                      $('#ActionId').val(2);
                      $("#CompanyFK").val(data.CompanyFK);
                      $("#txtProductName").val(data.ProductName);
                      $("#ddlRProductFK").val(data.FProductId);

                      $("#txtPurchaseQuantity").val(data.Qty);
                      $('#txtUnitPrice').val(data.UnitPrice);
                      $("#hidOrderDetailId").val(data.OrderDetailId)
                      $('.txtUnitName').text(data.UnitName);
                      window.scrollTo({ top: 0, behavior: 'smooth' });
                  }
                 });
            }


    </script>
}