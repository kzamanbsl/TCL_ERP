
@{
    ViewData["Title"] = "Store In";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<style type="text/css">

    input, select, textarea {
        max-width: 100%;
    }
</style>

@model KGERP.Service.Implementation.Warehouse.VMWarehousePOReceivingSlave
<section class="content-header">
    <h1>
        @if (Model.MaterialReceiveId > 0)
        {
            <span>
                Receiving History of Challan No
                <a target="_blank" href="~/Warehouse/WareHousePOReceivingSlaveReport?companyId=@Model.CompanyFK&materialReceiveId=@Model.MaterialReceiveId">@Model.ChallanCID</a>
                @if (Model.CompanyFK == 24)
                {
                    <a target="_blank" href="~/Report/GCCLPurchseInvoiceReport?companyId=@Model.CompanyFK&materialReceiveId=@Model.MaterialReceiveId&reportName=GCCLPurchaseInvoiceReports">Purchase Invoice</a>

                }
            </span>
        }
        else
        {
            <span>
                Store -in Information
            </span>
        }


    </h1>
    <ol class="breadcrumb">
        <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i>Dashboard</a></li>
        <li><a href="~/Warehouse/WareHousePOReceivingSlave">Store In</a></li>
        <li class="active">Store in Information</li>
    </ol>
</section>
@using (Html.BeginForm("GCCLWarehousePOReceivingSlave", "Warehouse", FormMethod.Post, new { id = "wareHousePOReceivingSlaveFromID", @class = "formValidator" }))
{
    <section class="content">
        <div class="row">
            <div class="box">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(x => x.CompanyFK, new { id = "CompanyFK" })

                <div class="box-danger">
                    <div class="box-header">

                    </div>
                    <!-- /.box-header -->
                    <div class="box-body">
                        @if (Model.MaterialReceiveId > 0)
                        {
                            @Html.HiddenFor(x => x.CompanyFK, new { id = "CompanyFK" })


                            <div class="col-md-1"> </div>
                            <div class="col-md-10">
                                <table class="table">
                                    <tr>
                                        <td><b>Challan</b></td>
                                        <td>:</td>
                                        <td><b>@Model.ChallanCID</b></td>

                                        <td><b>Store Info</b></td>
                                        <td>:</td>
                                        <td>@Model.StoreName</td>

                                    </tr>
                                    <tr>
                                        <td width="18%"><b>Supplier Challan</b></td>
                                        <td width="5%">:</td>
                                        <td width="27%">@Model.Challan</td>

                                        <td width="18%"><b>Challan Date</b></td>
                                        <td width="5%">:</td>
                                        <td width="27%">@Model.ChallanDate</td>
                                
                                    </tr>
                                    <tr>
                                        <td><b>Purchase Order</b></td>
                                        <td>:</td>
                                        @*<td><a href="#" title="See All Receiving History of This PO">@Model.POCID</a> </td>*@
                                        <td><a href="~/Warehouse/WareHousePOSlaveReceivingDetailsByPO/@Model.Procurement_PurchaseOrderFk" target="_blank" title="See All Receiving History of This PO">@Model.POCID</a> </td>

                                        <td><b>PO Date</b></td>
                                        <td>:</td>
                                        <td>@Model.PODate.Value.ToString("dd/MM/yyyy")</td>
                                    </tr>
                                    <tr>
                                        <td><b>Supplier Name</b></td>
                                        <td>:</td>
                                        <td>@Model.SupplierName</td>

                                        <td><b>Delivery Address</b></td>
                                        <td>:</td>
                                        <td>@Model.DeliveryAddress</td>
                                    </tr>
                                </table>
                            </div>
                            <div class="col-md-1"> </div>

                        }
                        else
                        {


                            <div class="row">
                                <!-- left column -->
                                <div class="col-md-6">
                                    <!-- general form elements -->
                                    <!-- /.box-header -->
                                    <!-- form start -->
                                    <div class="box-body">
                                        <div class="form-group">
                                            <label>Challan No</label>

                                            @Html.TextBoxFor(model => model.Challan, new { @class = "form-control ", @placeholder = "Challan No", @required = "required", data_bv_message = "Challan no is required.", })
                                            @Html.ValidationMessageFor(model => model.Challan, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="form-group">
                                            <label>Challan Date</label>
                                            @*@Html.EditorFor(model => model.ChallanDate, new {id = "txtDate", @class = "datePicker form-control ", @placeholder = "Challan Date", @required = "required", data_bv_message = "Challan date is required.", autocomplete = "off" })*@

                                            <input name="ChallanDate" asp-for="ChallanDate" type="text" value="@DateTime.Now.ToString("yyyy-MM-dd")" required="required" class="datePicker form-control" id="txtDate" placeholder="Challan Date" autocomplete="off">

                                            @Html.ValidationMessageFor(model => model.ChallanDate, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="form-group">
                                            <label for="message-text" class="col-form-label"> Received By:</label>
                                            @Html.EditorFor(model => model.EmployeeName, new { htmlAttributes = new { @class = "form-control", @name = "receiverName", @id = "receiverName" } })
                                            @Html.HiddenFor(x => x.ReceivedBy, new { @id = "receivedBy", @name = "receivedBy" })
                                        </div>

                                    </div>
                                    <!-- /.box-body -->
                                    <!-- /.box -->
                                </div>
                                <!--/.col (left) -->
                                <!-- left column -->
                                <div class="col-md-6">
                                    <!-- general form elements -->
                                    <!-- /.box-header -->
                                    <!-- form start -->

                                    <div class="box-body">
                                        <div class="form-group" style="padding:0px">
                                            <label>Purchase Order Number</label>
                                            @Html.EditorFor(model => model.POCID, new { htmlAttributes = new { @autocomplete = "on", @class = "form-control", @name = "Requisition CID", @id = "txtPOCID" } })

                                            @Html.HiddenFor(model => model.Procurement_PurchaseOrderFk, new { id = "ddlProcurementPurchaseOrderFk" })
                                            @Html.ValidationMessageFor(model => model.Procurement_PurchaseOrderFk, "", new { @class = "text-danger" })

                                        </div>

                                        <table id="poDetailsTable" class="table">
                                            <tr>
                                                <td>Supplier</td>
                                                <td>
                                                    @Html.HiddenFor(x => x.Common_SupplierFK, new { id = "hiddenCommonSupplierFK" })
                                                    <span id="txtSupplierNaame"></span>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    PO Date
                                                </td>
                                                <td><span id="txtApprovedDate"></span></td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    Delivery Address
                                                </td>
                                                <td><span id="txtDeliveryAddress"></span></td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    Delivery Date
                                                </td>
                                                <td><span id="txtDeliveryDate"></span></td>
                                            </tr>
                                            @*<tr>
                                                <td>
                                                   Recieve Date
                                                </td>
                                                <td><span id="txtRcvDate"></span></td>
                                            </tr>*@

                                        </table>
                                    </div>

                                </div>
                                <!-- /.box-body -->

                            </div>

                            <br />
                            <div class="col-md-12">
                                <div class="box">

                                    <div class="box-footer">
                                        <div id="procurementPurchaseOrderSlaveData"></div>
                                    </div>
                                </div>
                                <!-- /.box -->
                            </div>
                        }


                        <!--Body Will by Start Here-->



                        @{
                            if (Model.MaterialReceiveId > 0)
                            {
                                <div class="box-header" style="clear:both">
                                    <h4><b>Received Item:</b> </h4>
                                </div>
                                <div class="table-responsive col-md-12 text-nowrap">
                                    <table id="KgErpDataTable" class="table table-striped">
                                        <thead>
                                            <tr>
                                                <th>SL</th>

                                                <th class="center">Item Name </th>
                                                <th class="center">PO Quantity</th>
                                                <th class="center">Received Quantity</th>
                                                <th class="center">Total Received</th>
                                                <th>Return Quantity</th>
                                                <th class="center">Remaining Quantity</th>

                                            </tr>
                                        </thead>
                                        @{
                                            int sl = 0;
                                        }
                                        <tbody>
                                            @foreach (var item in Model.DataListSlave)
                                            {
                                                <tr>
                                                    <td>@(++sl)</td>
                                                    <td>@item.ProductSubCategory @item.ProductName</td>
                                                    <td>@item.POQuantity</td>
                                                    <th>@item.ReceivedQuantity</th>
                                                    <td>@item.PriviousReceivedQuantity</td>
                                                    <td>@item.ReturnQuantity</td>
                                                    <td>@item.RemainingQuantity</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            }               
                        }
                    </div>
                    <div class="box-footer">
                        <div class="row">
                            <div class="col-md-2">

                            </div>
                            <div class="col-md-5">
                                <a target="_blank" class="btn btn-warning btn-block" style="width:100%" href="~/Warehouse/WareHousePOReceivingSlaveReport?companyId=@Model.CompanyFK&materialReceiveId=@Model.MaterialReceiveId">Challan Report of @Model.ChallanCID</a>
                            </div>
                            <div class="col-md-5">
                                @if (!Model.IsSubmitted)
                                {
                                    <a onclick="makeMaterialReceiveSubmitable(@Model.MaterialReceiveId);" class="btn btn-success btn-block" style="width:100%" data-toggle="modal" data-target="#submitProdReferenceModal" title="Submit" data-placement="top"><i class="fa fa-fingerprint" aria-hidden="true"></i>Submit</a>

                                }
                                else
                                {
                                    <button class="btn btn-success btn-block" style="width:100%" disabled="disabled">Submitted</button>

                                }

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <div class="modal fade" id="deleteModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b>Delete Challan Item</b></h5>
                </div>
                <div class="modal-body">
                    <div style="text-align:center">
                        @Html.HiddenFor(model => model.ID, new { Value = "", id = "challanSlaveId" })

                        <h3>Are you sure to delete?</h3>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" id="btncloseandreset" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="submit" id="btnsave" class="btn btn-primary">&nbsp;Delete</button>&nbsp;

                </div>
            </div>
        </div>
    </div>
}



@using (Html.BeginForm("GCCLWarehousePOReceivingSlave", "Warehouse", FormMethod.Post, new { id = "submitGCCLPOReceivingSlaveFormId", @class = "formValidator" }))
{
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="modal fade" id="submitProdReferenceModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b>Submit</b></h5>
                </div>
                <div class="modal-body">

                    @Html.HiddenFor(model => model.CompanyFK, new { id = "submitCompanyFK" })
                    @Html.HiddenFor(model => model.MaterialReceiveId, new { id = "submitMaterialReceiveId" })
                    @Html.HiddenFor(model => model.ActionId, new { id = "submitActionId" })

                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div style="text-align:center">
                        <h3>Are you sure to Submit this Production?</h3>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="col-md-3">
                        <button type="button" onclick="resetProcurementPurchaseRequisitionSlaveForm()" class="btn btn-warning fa fa-close" data-dismiss="modal">&nbsp;NO</button>
                    </div>
                    <div class="col-md-9">
                        <button type="submit" id="btnsave" style="width:100%" class="btn btn-primary fa fa-remove">&nbsp; Submit</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section scripts {

    <script type="text/javascript">
        function makeMaterialReceiveSubmitable(rowId) {
            $("#submitMaterialReceiveId").val(rowId)
            $('#submitCompanyFK').val("@Model.CompanyFK");
            $('#submitActionId').val(10);
        }


        $(document).ready(function () {
            $('.formValidator').bootstrapValidator();
            //$("#poDetailsTable").hide();
            $("#chkIsDefineBin input:checkbox").change(function () {
                var ischecked = $(this).is(':checked');
                if (ischecked) {
                    alert('uncheckd ' + $(this).val());
                }
                else {
                    alert('uncheckd ' + $(this).val());

                }


            });

            $("#txtPOCID").autocomplete({
                source: function (request, response) {

                    $.ajax({
                        url:"@Url.Action("AutoCompletePOGet", "Warehouse")",// '/AccountHeads/AutoComplete/',
                        //data: "{ 'prefix': '" + request.term + "'}",
                        data: { companyId: "@Model.CompanyFK", prefix: request.term },
                        dataType: "json",
                        type: "get",
                        cache: true,
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            //alert(response.responseText);
                        },
                        failure: function (response) {
                            //alert(response.responseText);
                        }
                    });
                },

                select: function (e, i) {
                    $("#ddlProcurementPurchaseOrderFk").val(i.item.val);

                    $.ajax({
                    type: "POST",
                    url: "@Url.Action("ProcurementPurchaseOrderDetails", "Warehouse")",
                    datatype: "Json",
                        data: { id: i.item.val },
                     success: function (data) {
                 
                         $("#poDetailsTable").show();
                         $("#hiddenCommonSupplierFK").val(data.Common_SupplierFK);
                         $("#txtSupplierNaame").text(data.SupplierName);
                         var apprDate = DateCustom(data.PODate);
                         $('#txtApprovedDate').text(apprDate);
                         var RcvDate = DateCustom(data.ReceivedDate);
                         $('#txtRcvDate').text(RcvDate);
                         $("#txtDeliveryAddress").text(data.DeliveryAddress);
                         var deliveryDate = DateCustom( data.DeliveryDate);

                         $("#txtDeliveryDate").text(deliveryDate);


                    }
                });

                 $.ajax({
                    type: "POST",
                    url: "@Url.Action("ProcurementPurchaseOrderSlaveData", "Warehouse")",
                    datatype: "Json",
                     data: { poId: i.item.val },

                     success: function (data) {
                 
                         $("#procurementPurchaseOrderSlaveData").html(data);
                    }
                });

                },
                minLength: 1,
                cache: true

            }).focus(function () {
                $(this).autocomplete("search");
            });

            $("#receiverName").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Employee/EmployeeAutoComplete/',
                        //data: "{ 'prefix': '" + request.term + "'}",
                        data: '{"prefix":"' + request.term + '", "productType":"F"}',
                        dataType: "json",
                        type: "POST",
                        cache: true,
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            //alert(response.responseText);
                        },
                        failure: function (response) {
                            //alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#receivedBy").val(i.item.val);
                },
                minLength: 1,
                cache: true

            }).focus(function () {
                $(this).autocomplete("search");
            });
        });
        function DateCustom(orderDate) {
            var dateString = orderDate.substr(6);
            var currentTime = new Date(parseInt(dateString));
            var month = currentTime.getMonth() + 1;
            if (month < 10) {
                month = "0" + month;
            }
            var day = currentTime.getDate();
            var year = currentTime.getFullYear();
            var date = year + "-" + month + "-" + day;
            return date;
        }

        function makeDeletable(id) {
            if (id !== null) {
                $('#challanSlaveId').val(id);
                $('#ActionId').val(3);

            }
        }
        function resetForm() {
            $('#deliveryChallanSlaveFormId')[0].reset();
            $('#ActionId').val(1);
        }

    </script>
}