@model KGERP.ViewModel.EmployeeViewModel
@using KGERP.Utility
@{
    /**/

    ViewBag.Title = "Create";
}
<style>
    class {
        padding: 70px;
        border: 1px solid #4CAF50;
    }
</style>

@using (Html.BeginForm("CreateOrEdit", "Employee", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal" style="padding-left:20px">
        <div class="row">
            @{ if (Model.Employee.Id > 0)
                {
                    <div class="header"><h4>Update Employee Information</h4></div>
                }
                else
                {
                    <div class="header"><h4>Add New Employee</h4></div>
                }
            }
        </div>


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Employee.Id)
        <div class="row">
            <hr style="border-color:red; padding:0px;margin-top: 10px;margin-bottom: 10px; border-width: 2px;" />
            <!--begin tabs going in narrow content -->
            <ul class="nav nav-tabs sidebar-tabs" id="sidebar" role="tablist">
                <li class="active"><a href="#tab-1" role="tab" data-toggle="tab">Employee Basic Information</a></li>
                <li><a href="#tab-2" role="tab" data-toggle="tab">Personal Information</a></li>
                <li><a href="#tab-3" role="tab" data-toggle="tab">Job Information</a></li>
                <li><a href="#tab-4" role="tab" data-toggle="tab">Contact Information</a></li>
                <li><a href="#tab-5" role="tab" data-toggle="tab">Bank Information</a></li>
                <li><a href="#tab-6" role="tab" data-toggle="tab">Picture</a></li>
                <li><a href="#tab-7" role="tab" data-toggle="tab">Signature</a></li>
            </ul><!--/.nav-tabs.sidebar-tabs -->

            <!-- Tab panes -->
            <div class="tab-content">
                <div class="tab-pane active" id="tab-1">
                    <div class="panel panel-info">
                        <div class="panel-heading" style="background-color:#4CAF50;color:#FFFFFF"><b>Employee Basic Information</b></div>
                        <div class="panel-body">
                            <div class="form-group">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.Label("Employee Id", htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.Employee.EmployeeId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.Label("Reporting Authority", htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.DropDownListFor(model => model.Employee.ManagerId, new SelectList(Model.Managers, "Value", "Text"), "---Select---", new { @class = "searchingDropdown form-control input-sm" })
                                            @Html.ValidationMessageFor(model => model.Employee.ManagerId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Employee.CompanyId, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.DropDownListFor(model => model.Employee.CompanyId, new SelectList(Model.Companies, "Value", "Text"), "---Select---", new { @class = "searchingDropdown form-control input-sm", @data_show_subtext = "true", @data_live_search = "true", required = "required" })
                                            @Html.ValidationMessageFor(model => model.Employee.CompanyId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Employee.CardId, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.Employee.CardId, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Employee.Name, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.Employee.Name, new { htmlAttributes = new { @class = "form-control" }, required = "required" })
                                            @Html.ValidationMessageFor(model => model.Employee.Name, "", new { @class = "text-danger" })

                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Employee.ShortName, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.Employee.ShortName, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Employee.EmployeeOrder, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.Employee.EmployeeOrder, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Employee.Active, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.CheckBoxFor(model => model.Employee.Active, true)
                                            @*@Html.DropDownListFor(model => model.Employee.Active, new SelectList(Model.Actives, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control" })*@
                                        </div>
                                    </div>
                                </div>

                                @*<div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Employee.SalaryTag, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.Employee.SalaryTag, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                </div>*@
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.Label("Project", htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.DropDownListFor(model => model.Employee.StockInfoId, new SelectList(Model.StoreInfos, "Value", "Text"), "---Select---", new { @class = "searchingDropdown form-control input-sm" })
                                            @Html.ValidationMessageFor(model => model.Employee.StockInfoId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Employee.Remarks, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.TextAreaFor(model => model.Employee.Remarks, 4, 51, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                </div>
                               
                            </div>
                        </div>
                    </div>
                </div><!--/.tab-pane -->

                <div class="tab-pane" id="tab-2">
                    <div class="panel panel-info">
                        <div class="panel-heading" style="background-color:#4CAF50;color:#FFFFFF"><b>Employee Personal Information</b></div>
                        <div class="panel-body">


                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.FatherName, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.Employee.FatherName, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.MotherName, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.Employee.MotherName, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.MaritalTypeId, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(model => model.Employee.MaritalTypeId, new SelectList(Model.MaritalTypes, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control" })

                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.DateOfMarriage, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.Employee.DateOfMarriage, new { htmlAttributes = new { @class = "datepicker", @style = "width:240px", @placeholder = "dd/mm/yyyy", @autocomplete = "off" } })

                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.SpouseName, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.Employee.SpouseName, new { htmlAttributes = new { @class = "form-control" } })

                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.Employee.DateOfBirth, new { htmlAttributes = new { @class = "datepicker", @style = "width:240px", @placeholder = "dd/mm/yyyy", @autocomplete = "off" } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.NationalId, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.Employee.NationalId, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.GenderId, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(model => model.Employee.GenderId, new SelectList(Model.Genders, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control" })
                                        @Html.ValidationMessageFor(model => model.Employee.GenderId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.BloodGroupId, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(model => model.Employee.BloodGroupId, new SelectList(Model.BloodGroups, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control" })
                                    </div>
                                </div>
                            </div>


                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.ReligionId, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(model => model.Employee.ReligionId, new SelectList(Model.Religions, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.DrivingLicenseNo, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.Employee.DrivingLicenseNo, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.PassportNo, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.Employee.PassportNo, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.Label("Birth Certificate No", htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.Employee.TinNo, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.SocialId, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.Employee.SocialId, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>

                </div><!--/.tab-pane -->

                <div class="tab-pane" id="tab-3">
                    <div class="panel panel-info">
                        <div class="panel-heading" style="background-color:#4CAF50;color:#FFFFFF"><b>Job Information</b></div>
                        <div class="panel-body">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.JoiningDate, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.Employee.JoiningDate, new { htmlAttributes = new { @class = "datepicker", @style = "width:240px", @placeholder = "dd /mm/yyyy", @autocomplete = "off" } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.ProbationEndDate, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.Employee.ProbationEndDate, new { htmlAttributes = new { @class = "datepicker", @style = "width:240px", @placeholder = "dd /mm/yyyy", @autocomplete = "off" } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.PermanentDate, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.Employee.PermanentDate, new { htmlAttributes = new { @class = "datepicker", @style = "width:240px", @placeholder = "dd /mm/yyyy", @autocomplete = "off" } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.DepartmentId, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(model => model.Employee.DepartmentId, new SelectList(Model.Departments, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control", required = "required" })
                                        @Html.ValidationMessageFor(model => model.Employee.DepartmentId, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.DesignationId, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(model => model.Employee.DesignationId, new SelectList(Model.Designations, "Value", "Text"), "---Select---", new { @id = "designationId", @class = "dropdownsize form-control", required = "required" })
                                        @Html.ValidationMessageFor(model => model.Employee.DesignationId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.EmployeeCategoryId, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(model => model.Employee.EmployeeCategoryId, new SelectList(Model.EmployeeCategories, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.JobStatusId, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(model => model.Employee.JobStatusId, new SelectList(Model.JobStatus, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control" })

                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.ServiceTypeId, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(model => model.Employee.ServiceTypeId, new SelectList(Model.JobTypes, "Value", "Text"), "---Select---", new { @class = "form-control" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.OfficeTypeId, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(model => model.Employee.OfficeTypeId, new SelectList(Model.OfficeTypes, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control" })

                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.ShiftId, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(model => model.Employee.ShiftId, new SelectList(Model.Shifts, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control" })

                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.GradeId, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(model => model.Employee.GradeId, new SelectList(Model.SalaryGrades, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control" })
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>

                </div><!--/.tab-pane -->

                <div class="tab-pane" id="tab-4">

                    <div class="panel panel-info">
                        <div class="panel-heading" style="background-color:#4CAF50;color:#FFFFFF"><b>Contact Information</b></div>
                        <div class="panel-body">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.PresentAddress, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.Employee.PresentAddress, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.PermanentAddress, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.Employee.PermanentAddress, new { htmlAttributes = new { @class = "form-control" } })

                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.CountryId, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(model => model.Employee.CountryId, new SelectList(Model.Countries, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control" })
                                    </div>
                                </div>
                            </div>
                            @*<div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Employee.DistrictId, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-8">
                                            @Html.DropDownListFor(model => model.Employee.DistrictId, new SelectList(Model.Districts, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control" })
                                        </div>
                                    </div>
                                </div>*@
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.DivisionId, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(model => model.Employee.DivisionId, new SelectList(Model.Divisions, "Value", "Text"), "---Select---", htmlAttributes: new { @class = "dropdownsize form-control", @id = "ddlDivision" })
                                        @Html.ValidationMessageFor(model => model.Employee.DivisionId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.DistrictId, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(model => model.Employee.DistrictId, new SelectList(Model.Districts, "Value", "Text"), "---Select---", htmlAttributes: new { @class = "dropdownsize form-control", @id = "ddlDistrict" })
                                        @*@Html.ValidationMessageFor(model => model.Employee.DistrictId, "", new { @class = "text-danger" })*@
                                    </div>
                                </div>
                            </div>


                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.UpzillaId, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(model => model.Employee.UpzillaId, new SelectList(Model.Upazilas, "Value", "Text"), "---Select---", htmlAttributes: new { @class = "dropdownsize form-control", @id = "ddlThanaUpazila" })
                                        @*@Html.ValidationMessageFor(model => model.Employee.UpzillaId, "", new { @class = "text-danger" })*@
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.Telephone, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.Employee.Telephone, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.MobileNo, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.Employee.MobileNo, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.OfficeEmail, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.Employee.OfficeEmail, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.Email, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.Employee.Email, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.PABX, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.Employee.PABX, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6" style="display:none">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.FaxNo, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.Employee.FaxNo, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>

                <div class="tab-pane" id="tab-5">
                    <div class="panel panel-info">
                        <div class="panel-heading" style="background-color:#4CAF50;color:#FFFFFF"><b>Bank Information</b></div>
                        <div class="panel-body">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.BankId, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(model => model.Employee.BankId, new SelectList(Model.Banks, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control", @id = "ddlBank" })
                                        @*@Html.ValidationMessageFor(model => model.Employee.BankId, "", new { @class = "text-danger" })*@
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.BankBranchId, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(model => model.Employee.BankBranchId, new SelectList(Model.BankBranches, "Value", "Text"), "--Select--", new { @class = "dropdownsize form-control", @id = "ddlBankBranch" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.BankAccount, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.Employee.BankAccount, new { htmlAttributes = new { @class = "form-control" } })
                                        @*@Html.ValidationMessageFor(model => model.Employee.BankAccount, "", new { @class = "text-danger" })*@
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Employee.DisverseMethodId, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(model => model.Employee.DisverseMethodId, new SelectList(Model.DisverseMethods, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control" })
                                        @*@Html.ValidationMessageFor(model => model.Employee.DisverseMethodId, "", new { @class = "text-danger" })*@
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>

                </div>

                <div class="tab-pane" id="tab-6">
                    <div class="panel panel-info">
                        <div class="panel-heading" style="background-color:#4CAF50;color:#FFFFFF"><b>Picture</b></div>
                        <div class="panel-body">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="file">Upload Image</label>
                                    <input class="btn btn-success" type="file" name="image" id="image" style="width: 100%;" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <img height="300" width="300" src="@Url.Content(Model.Employee.ImagePath)" alt="User Image">

                                </div>
                            </div>
                        </div>
                    </div>

                </div>

                <div class="tab-pane" id="tab-7">
                    <div class="panel panel-info">
                        <div class="panel-heading" style="background-color:#4CAF50;color:#FFFFFF"><b>Signature</b></div>
                        <div class="panel-body">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="file">Upload Signature</label>
                                    <input class="btn btn-success" type="file" name="signature" id="signature" style="width: 100%;" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <img height="300" width="300" src="@Url.Content(Model.Employee.SignaturePath)" alt="User Signature">

                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div><!--/.tab-content -->

        </div>



        <div class="panel-body">

            <div class="col-md-offset-6 col-md-6">
                <div class="form-group">
                    <div class="col-md-offset-9">
                        <input type="submit" value="@Model.Employee.ButtonName" class="btn btn-primary" />
                        @*<input type="submit" value="@Model.Employee.ButtonName" onclick="javascript: return SubmitForm();" class="btn btn-info" />*@
                    </div>
                </div>
            </div>
        </div>
    </div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script type="text/javascript">
        $(document).ready(function () {
            // Enable Live Search.
            $('#designationId').attr('data-live-search', true);

            //// Enable multiple select.
            //$('#CountryList').attr('multiple', true);
            //$('#CountryList').attr('data-selected-text-format', 'count');

            $('.select').selectpicker(
                {
                    width: '100%',
                    style: 'btn-warning',
                    size: 6,
                    iconBase: 'fa',
                    tickIcon: 'fa-check'
                });
        });

        $(function () {
            $("#managerName").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Employee/EmployeeAutoComplete/',
                        //data: "{ 'prefix': '" + request.term + "'}",
                        data: '{"prefix":"' + request.term + '", "productType":"F"}',
                        dataType: "json",
                        type: "POST",
                        cache: true,
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            //alert(response.responseText);
                        },
                        failure: function (response) {
                            //alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#managerId").val(i.item.val);
                },
                minLength: 1,
                cache: true

            }).focus(function () {
                $(this).autocomplete("search");
            });
        });

        $('#ddlBank').change(function () {
            $.ajax({
                type: "post",
                url: "/BankBranch/GetBranchByBank",
                data: { bankId: $('#ddlBank').val() },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    var bankBranch = "<select>";
                    bankBranch = bankBranch + '<option value="">--Select--</option>';
                    for (var i = 0; i < data.length; i++) {
                        bankBranch = bankBranch + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    bankBranch = bankBranch + '</select>';
                    $('#ddlBankBranch').html(bankBranch);
                }
            });
        });

        $(document).ready(function () {
            $('.selectpicker').selectpicker({
                liveSearch: true,
                width: 270,
                showSubtext: true
            });
        });


        $('#ddlDivision').change(function () {
            //var text = $('#ddlDivision option:selected').text();
            $.ajax({
                type: "post",
                url: "/Employee/GetDistrictByDivisionId",
                data: { divisionId: $('#ddlDivision').val() },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    var district = "<select>";
                    district = district + '<option value="">--Select--</option>';
                    for (var i = 0; i < data.length; i++) {
                        district = district + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    district = district + '</select>';
                    $('#ddlDistrict').html(district);
                }
            });
        });

        //Bind Upzila base on District Selection
        $('#ddlDistrict').change(function () {
            //data: { districtId: $('#ddlDistrict option:selected').text() },
            $.ajax({
                type: "post",
                url: "/Employee/GetUpzilaByDistrictId",
                data: { districtId: $('#ddlDistrict').val() },

                datatype: "json",
                traditional: true,
                success: function (data) {
                    var upazila = "<select>";
                    upazila = upazila + '<option value="">--Select--</option>';
                    for (var i = 0; i < data.length; i++) {
                        upazila = upazila + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    upazila = upazila + '</select>';
                    $('#ddlThanaUpazila').html(upazila);
                }
            });
        });
    </script>

}