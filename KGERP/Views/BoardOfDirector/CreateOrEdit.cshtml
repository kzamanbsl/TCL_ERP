@model KGERP.ViewModel.BoardOfDirectorViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("CreateOrEdit", "BoardOfDirector", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return jQueryAjaxPost(this);" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.BoardOfDirector.BoardOfDirectorId)
    @Html.HiddenFor(x => x.BoardOfDirector.CompanyId)

    <div class="form-horizontal">
        <h4>Member @Model.BoardOfDirector.ButtonName</h4>
        <hr style="border-color:#ff0000; padding:0px;margin-top: 5px;margin-bottom: 5px; border-width: 2px;" />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.BoardOfDirector.MemberName, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.BoardOfDirector.MemberName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BoardOfDirector.MemberName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.BoardOfDirector.StartDate, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.BoardOfDirector.StartDate, new { htmlAttributes = new { @class = "datepicker", @placeholder = "dd/mm/yyyy", @autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.BoardOfDirector.StartDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.BoardOfDirector.EndDate, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.BoardOfDirector.EndDate, new { htmlAttributes = new { @class = "datepicker", @placeholder = "dd/mm/yyyy", @autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.BoardOfDirector.EndDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.BoardOfDirector.MemberOrder, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.BoardOfDirector.MemberOrder, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BoardOfDirector.MemberOrder, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.BoardOfDirector.MemberImage, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        <img src="@Url.Content(Model.BoardOfDirector.MemberImage)" style="margin:5px;" height="150" width="150" id="imagePreview" />
                        <input type="file" name="MemberImageUpload" accept="image/jpg, image/jpeg, image/png" onchange="showImagePreview(this, document.getElementById('imagePreview'))" />
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.BoardOfDirector.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.BoardOfDirector.DateOfBirth, new { htmlAttributes = new { @class = "datepicker", @placeholder = "dd/mm/yyyy", @autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.BoardOfDirector.DateOfBirth, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.BoardOfDirector.NID, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.BoardOfDirector.NID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BoardOfDirector.NID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.BoardOfDirector.FatherName, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.BoardOfDirector.FatherName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BoardOfDirector.FatherName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.BoardOfDirector.MotherName, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.BoardOfDirector.MotherName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BoardOfDirector.MotherName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.BoardOfDirector.Spouse, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.BoardOfDirector.Spouse, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BoardOfDirector.Spouse, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.BoardOfDirector.PresentAddress, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.BoardOfDirector.PresentAddress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BoardOfDirector.PresentAddress, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.BoardOfDirector.PermanentAdress, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.BoardOfDirector.PermanentAdress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BoardOfDirector.PermanentAdress, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.BoardOfDirector.Phone, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.BoardOfDirector.Phone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BoardOfDirector.Phone, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.BoardOfDirector.HomePhone, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.BoardOfDirector.HomePhone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BoardOfDirector.HomePhone, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.BoardOfDirector.OfficePhone, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.BoardOfDirector.OfficePhone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BoardOfDirector.OfficePhone, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.BoardOfDirector.Email, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.BoardOfDirector.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BoardOfDirector.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.BoardOfDirector.EducationQualificationId, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.DropDownListFor(model => model.BoardOfDirector.EducationQualificationId, new SelectList(Model.EducationQualifications, "Value", "Text"), "--Select--", htmlAttributes: new { @class = "dropdownsize form-control" })
                        @Html.ValidationMessageFor(model => model.BoardOfDirector.EducationQualificationId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.BoardOfDirector.ProfessionId, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.DropDownListFor(model => model.BoardOfDirector.ProfessionId, new SelectList(Model.Professions, "Value", "Text"), "--Select--", htmlAttributes: new { @class = "dropdownsize form-control" })
                        @Html.ValidationMessageFor(model => model.BoardOfDirector.ProfessionId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.BoardOfDirector.Organization, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.BoardOfDirector.Organization, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BoardOfDirector.Organization, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.BoardOfDirector.Designation, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.BoardOfDirector.Designation, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BoardOfDirector.Designation, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.BoardOfDirector.IsActive, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.BoardOfDirector.IsActive)
                            @Html.ValidationMessageFor(model => model.BoardOfDirector.IsActive, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-offset-3 col-md-3">
                <div class="form-group">
                    <a href="@Url.Action("Index",new { companyId=Model.BoardOfDirector.CompanyId})" class="btn btn-danger">
                        <span class="glyphicon glyphicon-remove-circle"></span>   Close
                    </a>
                    <button type="submit" class="btn btn-primary" onclick="javascript: return SubmitForm();" style="margin-left: 20px;"><span class="glyphicon glyphicon-floppy-disk"></span>@Model.BoardOfDirector.ButtonName</button>
                </div>
            </div>

        </div>
    </div>
}


@section Scripts
{
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")
    <script type="text/javascript">

        //JQuery Ajax Form Submit Begin
        function jQueryAjaxPost(form) {
            $validator.unobtrusive.parse(form);
            if ($(form).valid()) {
                var ajaxConfig = {
                    type: "POST",
                    url: from.action,
                    data: new FormData(form),
                    success: function (response) {
                        var url = '@Url.Action("Index", "ECMember")';
                        window.location.href = url;
                    }
                };

                if ($(form).attr('enctype') == "multipart/form-data") {
                    ajaxConfig["contentType"] = false;
                    ajaxConfig["processData"] = false;
                }
                $ajax(ajaxConfig);
            }
            return false;
        }

        //JQuery Ajax Form Submit End

        //Image Preview Begin
        function showImagePreview(imageUploader, previewImage) {
            if (imageUploader.files && imageUploader.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $(previewImage).attr('src', e.target.result);
                }
                reader.readAsDataURL(imageUploader.files[0]);
            }
        }

        //Image Preview End



    </script>
}
