@model KGERP.Service.Implementation.Procurement.VMSalesOrderSlave
@using KGERP.Utility;


@{
    ViewData["Title"] = "Customer Opening";
    Layout = "~/Views/Shared/_Layout.cshtml";

    int sl = 0;
    double TotalPrice = 0;
}

<style type="text/css">

    input, select, textarea {
        max-width: 100%;
    }
</style>

<section class="content-header">
    <h1>
        <span>
            Customer Opening
        </span>

    </h1>
    <ol class="breadcrumb">
        <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i>Dashboard</a></li>
        <li class="active">Customer Opening</li>
    </ol>
</section>
@using (Html.BeginForm("ProcurementSalesOrderSlaveCustomerOpening", "Procurement", FormMethod.Post, new { id = "procurementSalesOrderSlaveCustomerOpeningFormId", @class = "formValidator" }))
{
    <section class="content">
        <div class="row">
            <div class="box">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                @Html.HiddenFor(model => model.ActionId, new { id = "ActionId" })
                @Html.HiddenFor(model => model.CompanyFK, new { id = "CompanyFK" })


                <div class="box-danger">

                    <!-- /.box-header -->
                    <div class="box-body">

                        <div class="box-body">

                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Opening Date</label>
                                        <input name="OrderDate" asp-for="OrderDate" type="text" value="@DateTime.Today.ToString("yyyy-MM-dd")" required="required" class="datePicker form-control" id="txtOrderDate" placeholder="Date" autocomplete="off">
                                        @Html.ValidationMessageFor(model => model.OrderDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-group" style="padding:0px">
                                        <label for="message-text" class="col-form-label">Customer:</label>

                                        @Html.EditorFor(model => model.CommonCustomerName, new { htmlAttributes = new { @autocomplete = "on", @class = "form-control", @name = "Customer Name", @id = "txtCustomerName" } })

                                        @Html.HiddenFor(model => model.CustomerId, new { id = "ddlCustomerId" })

                                        @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Opening Balance</label>
                                        @Html.TextBoxFor(model => model.UnitPrice, new { id = "txtUnitPrice", @class = "form-control", @style = "width:100%;border:1px black solid", placeholder = "Purchasing Price", required = "Required" })
                                        @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <label for="txtDescription" class="col-form-label">Description:</label>
                                        @Html.TextAreaFor(model => model.Remarks, new { id = "txtRemarks", placeholder = "Description", @class = "form-control", rows = 2 })
                                        @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="box-footer">
                            <div class="row">
                                <div class="col-md-8">

                                </div>
                                <div class="col-lg-4 col-md-4">
                                    <button type="submit" id="poCreateBtn" class="btn btn-primary btn-block">
                                        <i class='fa fa-plus'></i>
                                        <span>Save</span>
                                    </button>
                                </div>
                            </div>
                        </div>

                        <!--Body Will by Start Here-->
                        <div class="table-responsive col-md-12  text-nowrap">
                            <table id="KgErpDataTable" class="table table-striped">
                                <thead>
                                    <tr>
                                        <th style="padding:5px;text-align:center;">SL</th>
                                        <th style="padding:5px;text-align:left;">Reference No</th>
                                        <th style="padding:5px;text-align:center;">Opening Date</th>
                                        <th style="padding:5px;text-align:center;">Customer</th>
                                        <th style="padding:5px;text-align:center;">Description</th>

                                        <th style="padding:5px;text-align:right;">Balance</th>

                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.DataListSlave)
                                    {

                                    <tr>
                                        <td style="padding:5px">@(++sl)</td>
                                        <td style="padding:5px;text-align:left;">@item.OrderNo</td>
                                        <td style="padding:5px;text-align:center;">@item.OrderDate.ToShortDateString()</td>
                                        <td style="padding:5px;text-align:center;">@item.CommonCustomerName</td>
                                        <td style="padding:5px;text-align:center;">@item.Remarks</td>

                                        <td style="padding:5px;text-align:right;">@String.Format("{0:0.00}", item.TotalAmount)</td>

                                    </tr>
                                    }
                                </tbody>


                            </table>
                        </div>
                    </div>
                    <div class="box-footer">
                       
                    </div>
                </div>
            </div>
        </div>
    </section>
}

@section scripts {

    <script type="text/javascript">

        function makeDeletale(rowId) {
            $('#hidDeleteOrderMasterId').val(rowId);
            $('#deleteActionId').val(3);
                                                    }
                                                    function resetProcurementPurchaseRequisitionSlaveForm() {
                                                        $('#procurementSalesOrderSlaveFormId')[0].reset();
          $('#ActionId').val(1);
                                                    }

        $(document).ready(function () {
            $('.formValidator').bootstrapValidator();

            $("#ddlFinalDestinationCountryFk").val(19).change();
              $("#txtProductName").autocomplete({
                source: function (request, response) {
                    //console.log(request);
                    //console.log(response);

                    $.ajax({
                        url:"@Url.Action("AutoCompleteProductGet", "Configuration")",// '/AccountHeads/AutoComplete/',
                        //data: "{ 'prefix': '" + request.term + "'}",
                        data: { companyId: "@Model.CompanyFK", prefix: request.term, productType : "F" },
                        dataType: "json",
                        type: "get",
                        cache: true,
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            //alert(response.responseText);
                        },
                        failure: function (response) {
                            //alert(response.responseText);
                        }
                    });
                },

            select: function (e, i) {
                console.log(i);
                    $("#ddlRProductFK").val(i.item.val);

                    $.ajax({
                        type: "GET",
                        url: "@Url.Action("CommonProductByID", "Configuration")",
                        datatype: "Json",
                        data: { id: i.item.val },
                        success: function (data) {
                            console.log(data);
                            var items = "";
                            if (data) {

                                $('.txtUnitName').text(data.UnitName);

                                var customerTypeFK = $("#hidCustomerTypeFk").val();
                                if (customerTypeFK == "@((int)CustomerTypeEnum.Dealer)") {
                                    $("#txtUnitPrice").val(data.TPPrice);

                                }
                                if (customerTypeFK == "@((int)CustomerTypeEnum.Retail)") {
                                    $("#txtUnitPrice").val(data.MRPPrice);

                                }

                            }
                        }
                    });
                    $('#txtProductName').focus();

                },
                minLength: 1,
                cache: true

            }).focus(function () {
                $(this).autocomplete("search");
            });
            $("#txtCustomerName").autocomplete({
                source: function (request, response) {
                    //console.log(request);
                    //console.log(response);

                    $.ajax({
                        url:"@Url.Action("GetAutoCompleteSCustomer", "Procurement")",// '/AccountHeads/AutoComplete/',
                        //data: "{ 'prefix': '" + request.term + "'}",
                        data: { prefix: request.term, companyId: "@Model.CompanyFK" },
                        dataType: "json",
                        type: "get",
                        cache: true,
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                           response($.map(data, function (item) {
                               return item;
                           }))
                        },
                        error: function (response) {
                                                                        //alert(response.responseText);
                        },
                        failure: function (response) {
                                                                        //alert(response.responseText);
                        }
                    });
                },

                select: function (e, i) {
                    $("#ddlCustomerId").val(i.item.val);
                    $("#hidCustomerTypeFk").val(i.item.CustomerTypeFK);


                    },
                minLength: 1,
                cache: true

            }).focus(function () {
                $(this).autocomplete("search");
            });



            $("#TermsAndConditionid").change(function () {
                                                            var termsAndConditionid = $('#TermsAndConditionid').val();
                $.ajax({
                                                            type: "GET",
                    url: "@Url.Action("GetTermNCondition", "Procurement")",
                    datatype: "Json",
                    data: { id: termsAndConditionid },
                    success: function (data) {
                        $('#txtTermsAndCondition').empty();
                        $('#txtTermsAndCondition').append(data.description);

                                                                }
                                                            });
                                                        });



            $("#ddlSupplierPaymentMethodEnumFK").change(function () {
                var paymethod = $("#ddlSupplierPaymentMethodEnumFK").val();
                if (paymethod === "@((int)VendorsPaymentMethodEnum.LC)") {
                    $("#piReletedDivId").show();
                }
                else {
                    $("#piReletedDivId").hide();
                }

            })


        });
            function makeEditble(rowId) {
                console.log(rowId);
            $.ajax({

                  type: "POST",
                  url: "@Url.Action("SingleOrderDetails", "Procurement")",
                  datatype: "Json",
                  data: { id: rowId },
                  success: function (data) {
                      console.log(data);
                      $('#poCreateBtn').html("<i class='fa fa-edit'></i>&nbsp;Update");
                      $("#hidOrderMasterId").val(data.OrderMasterId);
                      $('#ActionId').val(2);
                      $("#CompanyFK").val(data.CompanyFK);
                      $("#txtProductName").val(data.ProductName);
                      $("#ddlRProductFK").val(data.FProductId);

                      $("#txtPurchaseQuantity").val(data.Qty);
                      $('#txtUnitPrice').val(data.UnitPrice);
                      $("#hidOrderDetailId").val(data.OrderDetailId)
                      $('.txtUnitName').text(data.UnitName);
                      window.scrollTo({ top: 0, behavior: 'smooth' });
                  }
                 });
            }

        function makeSubmitble(rowId) {
                // console.log(rowId);
                $.ajax({
                        type: "POST",
                        url: "@Url.Action("GetSinglOrderMastersGet", "Procurement")",
                        datatype: "Json",
                    data: { orderMasterId: rowId },
                        success: function (data) {
                            console.log(data);
                            $('#submitOrDraftPOCIDText').text(data.OrderNo);

                            if (data.Status == 0) {
                                $('.submitOrDraftText').text("Make Submit");
                            }
                            else {
                                $('.submitOrDraftText').text("Make Draft");

                            }
                        }
                 });
                $('#hidsubmitProcurementPurchaseOrderId').val(rowId);
            }
    </script>
}