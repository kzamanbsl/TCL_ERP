@model KGERP.Data.CustomModel.ReportCustomModel


<style type="text/css">

    input, select, textarea {
        max-width: 100%;
    }
</style>
<section class="content-header">
    <h1>
        Material  Bill Generate Report <span style="color:indianred"> @Model.CompanyName</span>
    </h1>
    <ol class="breadcrumb">
        <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i>Dashboard</a></li>
        <li class="active">Material  Bill Generate Report</li>
    </ol>
</section>
<section class="content">
    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm("MaterialBillGenerate", "Report", FormMethod.Post, new { id = "AccountingMovementformId", @class = "formValidator", @target = "_blank", @enctype = "multipart/form-data" }))
            {
                <div class="box">
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="box-danger">

                        <!-- /.box-header -->
                        <div class="box-body">
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(model => model.CompanyId, new { @id = "CompanyId" })
                            @Html.HiddenFor(model => model.ReportName)

                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label for="message-text" class="col-form-label">Supplier<sup class="text-danger" title="Required">*</sup></label>
                                        @Html.EditorFor(model => model.SupplierName, new { htmlAttributes = new { @class = "form-control", @name = "supplier", @id = "supplier", @autocomplete = "on" } })
                                        @*@Html.HiddenFor(x => x.Common_SupplierFK, new { @id = "supplierId", @name = "supplierId" })*@
                                        @Html.ValidationMessageFor(model => model.SupplierName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label for="message-text" class="col-form-label">Work Order Number<sup class="text-danger" title="Required">*</sup></label>
                                        @Html.DropDownListFor(model => model.Procurement_PurchaseOrderFk, new SelectList(Enumerable.Empty<SelectListItem>(), "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control searchingDropdown", @id = "ddlPurchaseOrderNo" })
                                        @Html.ValidationMessageFor(model => model.Procurement_PurchaseOrderFk, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                                @*<div class="col-md-3">
                                        <div class="form-group">
                                            <label class="form-label">Select Project<sup class="text-danger" title="Required">*</sup></label>
                                            @Html.DropDownListFor(model => model.CostCenterId, new SelectList(Enumerable.Empty<SelectListItem>()), "==Select Project==", new { id = "ddlCostCenterId", @class = "form-control searchingDropdown", style = "width:100%", required = "requried" })
                                            @Html.ValidationMessageFor(model => model.CostCenterId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>*@
                                <div class="col-md-6">
                                    @*<div class="form-group">
                                            <label class="control-label">Stock Location:</label>
                                            <div class="">
                                                @Html.DropDownListFor(model => model.StockId, new SelectList(Model.Stocks, "Value", "Text"), "==Select Location==", new { @class = "form-control searchingDropdown", @id = "stockInfoId", required = "required" })
                                                @Html.ValidationMessageFor(model => model.StockId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>*@
                                </div>
                            </div>

                        </div>
                        <div class="box-footer">
                            <div class="col-md-5">
                            </div>
                            <div class="col-md-3">
                                <select class="pull-right" style="color:#ffffff; background-color:#dd4b39;height:34px;font-size:15px;width:100%;" name="ReportType" id="ReportType">
                                    <option value="PDF">PDF</option>
                                    <option value="EXCEL">EXCEL</option>
                                    <option value="WORD">WORD</option>
                                </select>
                            </div>
                            <div class="col-md-3">
                                <input type="submit" name="EXPORT" value="EXPORT" class="btn btn-success pull-right" style="width:100%" formtarget="_blank" />
                            </div>
                            <div class="col-md-1">
                            </div>
                        </div>

                    </div>
                </div>
            }


        </div>

    </div>
</section>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")



    <script>
        $(function () {


        });

        // Get project list by project type id
        function GetProjectListByProjectTypeId() {
            var getProjectTypeId = $("#projectTypeId option:selected");
            var showProjectList = $("#ddlCostCenterId");

            $.ajax({
                type: "GET",
                url: "/BillRequisition/GetProjectList",
                dataType: "json",
                data: { id: getProjectTypeId.val() },
                success: function (data) {
                    showProjectList.empty();
                    showProjectList.append("<option selected disabled>==Select Project==</option>");

                    $.each(data, function (index, item) {
                        showProjectList.append($('<option>', {
                            value: item.CostCenterId,
                            text: item.Name
                        }));
                    });
                }
            });
        };


        $("#supplier").autocomplete({
            source: function (request, response) {

               /* var companyId = $("#CompanyFK").val();*/
                $.ajax({
                    url: "@Url.Action("GetSupplierAutoComplete", "Warehouse")",
                    data: { companyId: @(KGERP.Utility.CompanyInfo.CompanyId), prefix: request.term },
                    dataType: "json",
                    type: "get",
                    cache: true,
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        response($.map(data, function (item) {
                            return item;
                        }))
                    },
                    error: function (response) {
                        //alert(response.responseText);
                    },
                    failure: function (response) {
                        //alert(response.responseText);
                    }
                });
            },

            select: function (e, i) {
                $("#supplierId").val(i.item.val);

            },
            minLength: 1,
            change: function (event, ui) {
                console.log(ui);
                if (ui.item) {
                    loadOpenedPurchaseaOrderDropDown(ui.item.val);
                }
            },
            cache: true


        }).focus(function () {
            $(this).autocomplete("search");
        });



        function loadOpenedPurchaseaOrderDropDown(vendorId) {
            $.ajax({
                type: "post",
                url: "/Warehouse/GetPO",
                data: { vendorId },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    var PurchaseOrder = "<select>";
                    PurchaseOrder = PurchaseOrder + '<option value="">--Select--</option>';
                    for (var i = 0; i < data.length; i++) {
                        PurchaseOrder = PurchaseOrder + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    PurchaseOrder = PurchaseOrder + '</select>';
                    $('#ddlPurchaseOrderNo').html(PurchaseOrder);
                }
            });
        }
    </script>
}





