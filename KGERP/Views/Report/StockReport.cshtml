@model KGERP.Data.CustomModel.ReportCustomModel

<div class="row">
    <div class="col-md-12" style="background-color:#f1f1f1;padding:5px">
        <span style="font-size:20px;color:#000000">@Model.Title</span>
    </div>
</div>
<br />
@using (Html.BeginForm("GetStockReportDepoWise", "Report", FormMethod.Get, new { @id = "idForm" }))
{

    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.CompanyId)
    @Html.HiddenFor(model => model.ReportName)
    @Html.HiddenFor(model => model.ProductType)
    <div class="row">

        <div class="col-md-3">
            <div class="form-group">
                @Html.Label("From Date", htmlAttributes: new { @class = "control-label" })
                <br />
                @Html.EditorFor(model => model.StrFromDate, new { htmlAttributes = new { @class = "datepicker", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.StrFromDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group">
                @Html.Label("To Date", htmlAttributes: new { @class = "control-label" })
                <br />
                @Html.EditorFor(model => model.StrToDate, new { htmlAttributes = new { @class = "datepicker", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.StrToDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group">
                @Html.Label("Stock", htmlAttributes: new { @class = "control-label" })
                <br />
                @Html.DropDownListFor(model => model.StockId, new SelectList(Model.Stocks, "Value", "Text"), new { @class = "dropdownsize form-control", @id = "ddlStockInfoId", @onchange = "getInvoiceNo()" })
            </div>

        </div>
        <div class="col-md-3">
            <div class="form-group pull-left">
                <br />
                <input type="submit" name="EXPORT" value="EXPORT" class="btn btn-success pull-right" formtarget="_blank" />
                <select class="pull-right" style="color:#ffffff; background-color:#dd4b39;height:34px;font-size:15px" name="ReportType" id="ReportType">
                    <option value="PDF">PDF</option>
                    <option value="EXCEL">EXCEL</option>
                    <option value="WORD">WORD</option>
                </select>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script>
        $(document).ready(function () {
            $('.datepicker').datepicker({
                dateFormat: "mm/dd/yy",
                showOn: 'both',
                buttonText: "<i class='fa fa-calendar'></i>",
                changeMonth: true,
                changeYear: true,
                yearRange: "2001:+50"
            });
        });
        $('#btnAdd').unbind("click").bind("click", function () {
            var form = $('#idForm');
            var url = "/Vouchers/CreateTempVoucher";

            $.ajax({
                type: "POST",
                url: url,
                dataType: "html",
                data: form.serialize(),
                beforeSend: function () {

                },
                success: function (resp) {
                    $('#divVoucherGrid').html(resp);
                },
                error: function (request, status, error) {
                    alert("Error");
                }
            });

        });



        $(function () {
            $("#accountName").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/HeadGLs/AutoComplete/',
                        //data: "{ 'prefix': '" + request.term + "'}",
                        data: '{"prefix":"' + request.term + '"}',
                        dataType: "json",
                        type: "POST",
                        cache: true,
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            //alert(response.responseText);
                        },
                        failure: function (response) {
                            //alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#accountHeadId").val(i.item.val);
                },
                minLength: 1,
                cache: true

            }).focus(function () {
                $(this).autocomplete("search");
            });
        });








    </script>
}





