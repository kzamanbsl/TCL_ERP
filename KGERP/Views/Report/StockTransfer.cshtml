@model KGERP.Data.CustomModel.ReportCustomModel
@{
    ViewData["Title"] = "Balance Sheet Report";
    Layout = "~/Views/Shared/_Layout.cshtml";

}
<style type="text/css">

    input, select, textarea {
        max-width: 100%;
    }
</style>
<section class="content-header">
    <h1>
        Stock Transfer Report
    </h1>
    <ol class="breadcrumb">
        <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i>Dashboard</a></li>
        <li class="active">Stock Transfer Report</li>
    </ol>
</section>
<section class="content">
    <div class="row">
        @using (Html.BeginForm("GetStockTransferConsolidatedReport", "Report", FormMethod.Get, new { id = "stockTransferReportformId", @class = "formValidator", @target = "_blank", @enctype = "multipart/form-data" }))
    {

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.CompanyId)

        <div class="col-md-3">
            <div class="form-group">
                @Html.Label("From Date", htmlAttributes: new { @class = "control-label" })
                <br />
                @Html.EditorFor(model => model.StrFromDate, new { htmlAttributes = new { @class = "datepicker", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.StrFromDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group">
                @Html.Label("To Date", htmlAttributes: new { @class = "control-label" })
                <br />
                @Html.EditorFor(model => model.StrToDate, new { htmlAttributes = new { @class = "datepicker", @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.StrToDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                @Html.Label("Depot", htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.StockId, new SelectList(Model.Stocks, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control", @id = "ddlStockInfoId", @onchange = "getInvoiceNo()" })
                @Html.ValidationMessageFor(model => model.StockId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                @Html.Label("Select Report", htmlAttributes: new { @class = "control-label" })
                @Html.RadioButtonFor(m => m.ReportName, Model.StockTransferDelivery) Delivery
                @Html.RadioButtonFor(m => m.ReportName, Model.StockTransferReceive) Receive
                @Html.RadioButtonFor(m => m.ReportName, Model.StockTransferStock) Stock
            </div>
        </div>
        <div class="col-md-8">
            <div class="form-group pull-left">
                <input type="submit" name="EXPORT" value="EXPORT" class="btn btn-success pull-right" formtarget="_blank" />
                <select class="pull-right" style="color:#ffffff; background-color:#dd4b39;height:34px;font-size:15px" name="ReportType" id="ReportType">
                    <option value="EXCEL">EXCEL</option>
                </select>
            </div>
        </div>

}
    </div>
</section>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script>
        $(document).ready(function () {
            $('.datepicker').datepicker({
                dateFormat: "mm/dd/yy",
                showOn: 'both',
                buttonText: "<i class='fa fa-calendar'></i>",
                changeMonth: true,
                changeYear: true,
                yearRange: "2001:+50"
            });
        });


    </script>
}




