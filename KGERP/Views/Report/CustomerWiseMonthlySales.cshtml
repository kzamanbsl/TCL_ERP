@model KGERP.Data.CustomModel.ReportCustomModel

<div class="row">
    <div class="col-md-12" style="background-color:#f1f1f1;padding:5px">
        <span style="font-size:20px;color:#000000">@Model.Title</span>
    </div>
</div>
<br />
@using (Html.BeginForm("GetCustomerWiseMonthlySalesReport", "Report", FormMethod.Get, new { @id = "idForm" }))
{
    <div class="form-horizontal">
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.CompanyId)
        @Html.HiddenFor(model => model.ProductType)
        @Html.HiddenFor(model => model.ReportName)
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Customer", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.HiddenFor(x => x.VendorId, htmlAttributes: new { @id = "VendorId", @Name = "VendorId" })
                        @Html.EditorFor(model => model.Customer, new { htmlAttributes = new { @class = "form-control", @name = "VendorName", @id = "txtVendor" } })
                        @Html.ValidationMessageFor(model => model.Customer, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Year, new SelectList(Model.Years, "Value", "Text"), "--Select--", htmlAttributes: new { @class = "dropdownsize form-control" })
                        @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.FromMonth, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.FromMonth, new SelectList(Model.Months, "Value", "Text"), "--Select--", htmlAttributes: new { @class = "dropdownsize form-control" })
                        @Html.ValidationMessageFor(model => model.FromMonth, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.ToMonth, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.ToMonth, new SelectList(Model.Months, "Value", "Text"), "--Select--", htmlAttributes: new { @class = "dropdownsize form-control" })
                        @Html.ValidationMessageFor(model => model.ToMonth, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-9"></div>
            <div class="col-md-offset-8">
                <div class="form-group" style="margin-left: 35px;">
                    <br />
                    <select class="pull-left" style="color:#ffffff; background-color:#dd4b39;height:34px;font-size:15px" name="ReportType" id="ReportType">
                        <option value="PDF">PDF</option>
                        <option value="EXCEL">EXCEL</option>
                        <option value="WORD">WORD</option>
                    </select>
                    <input type="submit" name="EXPORT" value="EXPORT" class="btn btn-success pull-left" formtarget="_blank" />
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script>
        $(function () {
            $("#txtVendor").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Vendor/AutoComplete/',
                        data: "{ 'prefix': '" + request.term + "'}",
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            alert(response.responseText);
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#VendorId").val(i.item.val);
                },

            }).focus(function () {
                $(this).autocomplete("search");
            });
        });
    </script>
}





