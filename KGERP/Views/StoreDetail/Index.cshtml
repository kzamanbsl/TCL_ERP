@model KGERP.ViewModel.StoreDetailViewModel

@{
    ViewBag.Title = "Store Detail Information";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <table class="table table-bordered">
        <tr style="background-color:#009270;color:#FFFFFF">
            <td colspan="6">
                <b>Store Master</b>
                <a href="@Url.Action("Index","Store")" class="btn btn-openid pull-right" title="Back to Store">
                    <span class="fa fa-arrow-left"></span> Back
                </a>
            </td>

        </tr>
        <tr style="background-color:white;color:black">
            <td><b>Receive</b> Code</td>
            <td>@Model.Store.ReceivedCode</td>
            <td><b>Stock</b></td>
            @*<td>@Model.Store.StockInfo.Name</td>*@
            <td><b>Receive Date</b></td>
            <td>@Model.Store.ReceivedDate.Value.ToString("dd MMM yyyy")</td>
        </tr>
    </table>
</div>

<div class="row">
    @using (Html.BeginForm("CreateOrEdit", "StoreDetail", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <table class="table table-bordered">
            <tr style="background-color:#009270;color:#FFFFFF">
                <td colspan="6">Stoke Detail</td>
            </tr>
            <tr style="background-color:white;color:black">
                <td colspan="6">
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.StoreDetail.StoreId)
                        @Html.HiddenFor(model => model.StoreDetail.StoreDetailId)
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.StoreDetail.BatchId, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.StoreDetail.BatchId, htmlAttributes: new { @class = "form-control col-md-8", @readonly = "readonly" })
                                </div>

                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.StoreDetail.ProductCategoryId, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(model => model.StoreDetail.ProductCategoryId, new SelectList(Model.ProductCategories, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control", @id = "ddlProductCategory" })

                                    @*@Html.ValidationMessageFor(model => model.Employee.CompanyId, "", new { @class = "text-danger" })*@
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.StoreDetail.ProductSubCategoryId, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(model => model.StoreDetail.ProductSubCategoryId, new SelectList(Model.ProductSubCategories, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control", @id = "ddlProductSubCategory" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.StoreDetail.ProductId, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(model => model.StoreDetail.ProductId, new SelectList(Model.Products, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control", @id = "ddlProduct" })
                                </div>
                            </div>
                        </div>
                        @*<div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.StoreDetail.UnitId, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(model => model.StoreDetail.UnitId, new SelectList(Model.Units, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control" })
                                </div>
                            </div>
                        </div>*@
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.StoreDetail.UnitPrice, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.StoreDetail.UnitPrice, htmlAttributes: new { @class = "form-control col-md-8", @id = "unitPrice", @onchange = "getTotalAmount()" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.StoreDetail.Qty, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.StoreDetail.Qty, htmlAttributes: new { @class = "form-control col-md-8", @id = "qty", @onchange = "getTotalAmount()" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.StoreDetail.TotalAmount, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.StoreDetail.TotalAmount, htmlAttributes: new { @class = "form-control col-md-8", @readonly = "readonly", @id = "totalAmount" })
                                </div>

                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-8">
                                @if (TempData["message"] != null)
                                {
                                <div class="alert alert-danger alert-dismissible fade in">
                                    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                                    <strong>Error!</strong>  @TempData["message"]
                                </div>
                                }
                            </div>
                            <div class="col-md-4">
                                <input type="submit" value="@Model.StoreDetail.ButtonName" class="btn btn-info pull-right" />
                            </div>

                        </div>
                    </div>
                </td>
            </tr>
        </table>

    }
</div>

<div class="row">
    <div class="col-md-6">
        <div class="form-group">
            <h4><b>Store Detail Information</b></h4>
        </div>
    </div>
    <div class="col-md-2 pull-right">
        <div class="form-group">
            <a href="@Url.Action("Index", new {storeId= ViewBag.StoreId })" class="btn btn-primary pull-right">
                <span class="glyphicon glyphicon-user"></span> Add
            </a>
        </div>
    </div>
</div>

<div class="row">
    <table class="table table-striped table-responsive">

        <tr style="background-color:#009270;color:#FFFFFF">
            <th>
                @Html.DisplayNameFor(model => model.StoreDetail.BatchId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StoreDetail.ProductId)
            </th>
            <th>

                @Html.DisplayNameFor(model => model.StoreDetail.UnitId)
            </th>
            <th>

                @Html.DisplayNameFor(model => model.StoreDetail.UnitPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StoreDetail.Qty)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.StoreDetail.TotalAmount)
            </th>
            <th>

                @Html.DisplayNameFor(model => model.StoreDetail.UnitId)
            </th>
            <th class="text-center">Action</th>
        </tr>

        @foreach (var item in Model.StoreDetails)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.BatchId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Product.ProductName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Unit.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UnitPrice)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Qty)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TotalAmount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Unit.Name)
                </td>
                <td class="text-center">
                    <a href="@Url.Action("Index", new {id=item.StoreDetailId,storeId=item.StoreId})" title="Edit" class="btn btn-info btn-xs">
                        <i class="fa fa-edit" aria-hidden="true"></i>
                    </a>

                    <a href="@Url.Action("Delete", new { id = item.StoreDetailId,storeId=item.StoreId })" title="Delete" class="btn btn-danger btn-xs">
                        <i class="fa fa-trash" aria-hidden="true"></i>
                    </a>
                </td>
            </tr>
        }

    </table>
</div>

@section Scripts {

    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script type="text/javascript">

        $(document).ready(function () {
            $('input[type=datetime]').datepicker({
                dateFormat: "dd/M/yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "2001:+50"
            });
        });

        $('#ddlProductCategory').change(function () {
            $.ajax({
                type: "post",
                url: "/ProductSubCategories/GetProductSubCategorySelectModelsByProductCategory",
                data: { productCategoryId: $('#ddlProductCategory').val() },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    var ProductSubCategory = "<select>";
                    ProductSubCategory = ProductSubCategory + '<option value="">--Select--</option>';
                    for (var i = 0; i < data.length; i++) {
                        ProductSubCategory = ProductSubCategory + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    ProductSubCategory = ProductSubCategory + '</select>';
                    $('#ddlProductSubCategory').html(ProductSubCategory);
                }
            });
        });


        $('#ddlProductSubCategory').change(function () {
            $.ajax({
                type: "post",
                url: "/Products/GetProductSelectModelsByProductSubCategory",
                data: { productSubCategoryId: $('#ddlProductSubCategory').val() },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    var Product = "<select>";
                    Product = Product + '<option value="">--Select--</option>';
                    for (var i = 0; i < data.length; i++) {
                        Product = Product + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    Product = Product + '</select>';
                    $('#ddlProduct').html(Product);
                }
            });
        });


        function getTotalAmount() {

            var unitPrice = $('#unitPrice').val();
            var qty = $('#qty').val();
            $('#totalAmount').val(unitPrice * qty);
        }

    </script>
}