
@using PagedList.Mvc;
@model PagedList.IPagedList<KGERP.Service.ServiceModel.SaleReturnModel>
@using PagedList;
@{
    /**/

    ViewBag.Title = "Index";
}
<link href="~/Content/CustomCss/search-form.css" rel="stylesheet" />
<div class="row">
    @using (Html.BeginForm("Index", "SaleReturn", FormMethod.Get, new { @class = "example" }))
    {
        <div class="col-md-5">
            @Html.Label("Old Sales Reuturn List", new { @style = "font-size:20px" })
        </div>
        <div class="col-md-6">
            <div class="col-md-4">
                @Html.Editor("searchDate", new { htmlAttributes = new { @autocomplete = "off", @class = "datepicker pull-left", @placeholder = "dd/mm/yyyy" } })
            </div>
            <div class="col-md-8">
                @Html.Hidden("companyId")
                @Html.Editor("searchText", new { htmlAttributes = new { @autocomplete = "off", @placeholder = "Search..", @style = "width:75%" } })
                <button type="submit"><i class="fa fa-search "></i></button>
            </div>
        </div>
        <div class="col-md-1">
            <a href="@Url.Action("OldCreate", new { id = 0,companyId=Request.QueryString["companyId"],productType=Request.QueryString["productType"] })" class="btn btn-primary pull-right">
                <span class="glyphicon glyphicon-plus-sign"></span> New Return
            </a>
        </div>
    }

</div>

<div class="row">
    <hr style="border-color:#ff0000; padding:0px;margin-top: 5px;margin-bottom: 5px; border-width: 2px;" />
    <table class="table table-striped table-responsive">
        <tr style="background-color:#4CAF50;color:#FFFFFF">
            <th>SL</th>
            <th>
                @Html.DisplayNameFor(model => model.First().CustomerId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().SaleReturnNo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().ReturnDate)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.First().ReceivedBy)
            </th>
            <th style="text-align:center">
                Report
            </th>
        </tr>

        @foreach (var item in Model.Select((x, i) => new { Data = x, Index = i }))
        {
        <tr>
            <td>
                @((item.Index + 1) + (Model.PageNumber - 1) * Model.PageSize)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Data.Vendor.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Data.SaleReturnNo)
            </td>
            <td>
                @item.Data.ReturnDate.ToString("dd MMM yyyy")
            </td>

            <td>
                @("[" + item.Data.Employee.EmployeeId + "] " + item.Data.Employee.Name)
            </td>

            <td style="text-align:center">

                <a href="@Url.Action("GetSalesReturnReport","Report", new {saleReturnId=item.Data.SaleReturnId,reportName="SalesReturn"})" target="_blank" class="btn btn-primary btn-xs">
                    Download
                </a>

            </td>

        </tr>
        }
    </table>

    @if (Model.PageCount > 1)
    {
        <span class="btn btn-success">
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        </span>
        <span class="checkbox">
            @Html.PagedListPager(Model, Page_No => Url.Action("Index", "SaleReturn", new { companyId = Request.QueryString["companyId"], Page_No, Sorting_Order = Request.QueryString["Search"], SearchDate = Request.QueryString["searchDate"], SearchText = Request.QueryString["searchText"] }))
        </span>
    }
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script type="text/javascript">
      
    </script>

}

















