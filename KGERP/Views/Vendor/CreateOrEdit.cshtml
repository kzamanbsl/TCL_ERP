@model KGERP.ViewModel.VendorViewModel
@using KGERP.Utility
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";




}

<style type="text/css">

    input, select, textarea {
        max-width: 100%;
    }
</style>

<section class="content-header">
    <h1>
        @if (Request.QueryString["vendorTypeId"].ToString().Equals("1"))
        {
            <span>Supplier</span>
        }
        else if (Request.QueryString["vendorTypeId"].ToString().Equals("2"))
        {
            <span>
                Customer
            </span>
        }
        else if (Request.QueryString["vendorTypeId"].ToString().Equals("3"))
        {
            <span>
                Rent Company
            </span>
        }
    </h1>
    <ol class="breadcrumb">
        <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i>Dashboard</a></li>
        <li class="active">Dealer / Customer</li>
    </ol>
</section>
<section class="content">
    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm("CreateOrEdit", "Vendor", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return jQueryAjaxPost(this);" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.AntiForgeryToken()
                @Html.HiddenFor(x => x.Vendor.Condition)
                @Html.HiddenFor(x => x.Vendor.CompanyId)
                <div class="box">
                    <div class="box-danger">
                        <!-- /.box-header -->
                        <div class="box-body">
                            <div class="row">

                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="message-text" class="col-form-label">Dealer/Customer Name:</label>
                                        @Html.TextBoxFor(model => model.Name, new { id = "txtCustomerName", @class = "form-control", @placeholder = "Customer Name", required = "required" })
                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="message-text" class="col-form-label">Phone:</label>
                                        @Html.TextBoxFor(model => model.Phone, new { id = "txtPhone", @class = "form-control", @placeholder = "Contact" })
                                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="message-text" class="col-form-label">Email:</label>
                                        @Html.TextBoxFor(model => model.Email, new { id = "txtEmail", @class = "form-control", @placeholder = "Email" })
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                            </div>
                            <div class="row">


                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="message-text" class="col-form-label">Division:</label>
                                        @Html.DropDownListFor(model => model.Common_DivisionFk, Model.DivisionList as SelectList, "--Division--", new { id = "ddlCommon_DivisionFk", @class = "form-control", required = "true" })
                                        @Html.ValidationMessageFor(model => model.Common_DivisionFk, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="message-text" class="col-form-label">District:</label>
                                        @Html.DropDownListFor(model => model.Common_DistrictsFk, Model.DistrictList as SelectList, "--District--", new { id = "ddlCommon_DistrictsFk", @class = "form-control", required = "true" })
                                        @Html.ValidationMessageFor(model => model.Common_DistrictsFk, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="message-text" class="col-form-label">Upazila:</label>
                                        @Html.DropDownListFor(model => model.Common_UpazilasFk, Model.UpazilasList as SelectList, "--Upazila--", new { id = "ddlCommon_UpazilasFk", @class = "form-control", required = "true" })
                                        @Html.ValidationMessageFor(model => model.Common_UpazilasFk, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>


                            <div class="row" style="border-bottom:2px dotted black">

                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="message-text" class="col-form-label">NID NO:</label>
                                        @Html.TextBoxFor(model => model.NID, new { id = "txtNID", @class = "form-control", @placeholder = "NID NO", required = "required" })
                                        @Html.ValidationMessageFor(model => model.NID, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-8">
                                    <div class="form-group">
                                        <label for="message-text" class="col-form-label">Address:</label>
                                        @Html.TextAreaFor(model => model.Address, new { id = "txtAddress", @class = "form-control", @placeholder = "Address" })
                                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>



                            <div class="form-group">
                                <div class="col-md-3">
                                    @*<button type="button" onclick="resetForm()" class="btn btn-secondary" data-dismiss="modal">Reset</button>*@
                                </div>
                                <div class="col-md-9">
                                    <button type="submit" id="btnSave" class="btn btn-primary btn-block"><i class='fa fa-plus'></i> Add</button>
                                </div>
                            </div>
                        </div>
                        <div class="box-footer">
                        </div>

                    </div>
                </div>
            }


        </div>

    </div>
</section>






@using (Html.BeginForm("CreateOrEdit", "Vendor", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return jQueryAjaxPost(this);" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.Vendor.Condition)
    @Html.HiddenFor(x => x.Vendor.CompanyId)
    <div class="row">
        <div class="col-md-6">
            <span style="font-size:20px;font-weight:bold">
                @if (Request.QueryString["vendorTypeId"].ToString().Equals("1"))
                {
                    <text>Supplier</text>
                }

                else if (Request.QueryString["vendorTypeId"].ToString().Equals("2"))
                {
                    <text>Customer</text>
                }
                else if (Request.QueryString["vendorTypeId"].ToString().Equals("3"))
                {
                    <text>Rent Company</text>
                }
            </span>
        </div>
    </div>
    <hr style="border-color:#ff0000; padding:0px;margin-top: 10px;margin-bottom: 10px; border-width: 2px;" />
    <div class="form-horizontal">
        <div class="row">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Vendor.VendorId)
            @Html.HiddenFor(model => model.Vendor.VendorTypeId, new { id = "vendorTypeId" })

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Vendor.HeadGLId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.Vendor.HeadGLId, new SelectList(Model.CustomerCodes, "Value", "Text"), "--Select--", new { @class = "dropdownsize form-control" })
                        @Html.ValidationMessageFor(model => model.Vendor.HeadGLId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Vendor.Name, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Vendor.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Vendor.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Vendor.ContactName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Vendor.ContactName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Vendor.ContactName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Vendor.NID, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Vendor.NID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Vendor.NID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group" style='display:@((Model.Vendor.VendorTypeId == 1 || Model.Vendor.VendorTypeId == 3)? "None":"inline")'>
                    @Html.LabelFor(model => model.Vendor.CustomerType, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        Cash
                        @Html.RadioButtonFor(model => model.Vendor.CustomerType, "Cash", new { @id = "cash", @name = "Vendor.CustomerType" })
                        Credit
                        @Html.RadioButtonFor(model => model.Vendor.CustomerType, "Credit", new { @id = "credit", @name = "Vendor.CustomerType" })
                    </div>
                </div>
                <div class="form-group" id="divCreditCommission" style="display:none">
                    @Html.LabelFor(model => model.Vendor.CreditCommission, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Vendor.CreditCommission, new { htmlAttributes = new { @class = "form-control", @id = "txtCreditCommission" } })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Vendor.ImageUrl, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <img src="@Url.Content(Model.Vendor.ImageUrl)" style="margin:5px;" height="150" width="150" id="imagePreview" />
                        <input type="file" name="VendorImageUpload" accept="image/jpg, image/jpeg, image/png" onchange="showImagePreview(this, document.getElementById('imagePreview'))" />
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Vendor.CountryId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.Vendor.CountryId, new SelectList(Model.Countries, "Value", "Text"), "---Select---", htmlAttributes: new { @class = "dropdownsize form-control" })
                        @Html.ValidationMessageFor(model => model.Vendor.CountryId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Vendor.State, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Vendor.State, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Vendor.State, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Vendor.DistrictId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.Vendor.DistrictId, new SelectList(Model.Districts, "Value", "Text"), "---Select---", htmlAttributes: new { @class = "dropdownsize form-control", @id = "ddlDistrict" })
                        @Html.ValidationMessageFor(model => model.Vendor.DistrictId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Vendor.UpazilaId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.Vendor.UpazilaId, new SelectList(Model.Upazilas, "Value", "Text"), "--Select--", new { @class = "dropdownsize form-control", @id = "ddlUpazila" })
                        @Html.ValidationMessageFor(model => model.Vendor.UpazilaId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            @if (Model.Vendor.VendorTypeId == 2)
            {
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Vendor.ZoneId, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.Vendor.ZoneId, new SelectList(Model.Zones, "Value", "Text"), "--Select--", new { @class = "dropdownsize form-control", @id = "ddlUpazila" })
                            @Html.ValidationMessageFor(model => model.Vendor.ZoneId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            }

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Vendor.Phone, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Vendor.Phone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Vendor.Phone, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Vendor.Email, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Vendor.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Vendor.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>


        </div>
        <div class="row">

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Vendor.Address, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Vendor.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Vendor.Address, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Vendor.NomineeName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Vendor.NomineeName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Vendor.NomineeName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Vendor.NomineePhone, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Vendor.NomineePhone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Vendor.NomineePhone, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Vendor.NomineeImageUrl, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <img src="@Url.Content(Model.Vendor.NomineeImageUrl)" style="margin:5px;" height="150" width="150" id="nomineeImagePreview" />
                        <input type="file" name="NomineeImageUpload" accept="image/jpg, image/jpeg, image/png" onchange="showNomineeImagePreview(this, document.getElementById('nomineeImagePreview'))" />
                    </div>

                </div>
            </div>
        </div>
        <div class="creditParty row" style="display:none">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.Label("Credit Ratio", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Vendor.CreditRatioFrom, new { htmlAttributes = new { @class = "", @style = "width: 125px;max-width: 140px; " } })
                        @Html.ValidationMessageFor(model => model.Vendor.CreditRatioFrom, "", new { @class = "text-danger" })
                        <b>/</b>
                        @Html.EditorFor(model => model.Vendor.CreditRatioTo, new { htmlAttributes = new { @class = "", @style = "width: 125px;max-width: 140px; " } })
                        @Html.ValidationMessageFor(model => model.Vendor.CreditRatioTo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Vendor.CreditLimit, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Vendor.CreditLimit, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Vendor.CreditLimit, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="creditParty row" style="display:none">
            @if (Model.Vendor.VendorTypeId == 2)
            {
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Vendor.MonthlyTarget, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Vendor.MonthlyTarget, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Vendor.MonthlyTarget, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Vendor.YearlyTarget, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Vendor.YearlyTarget, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Vendor.YearlyTarget, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Vendor.MonthlyIncentive, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Vendor.MonthlyIncentive, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Vendor.MonthlyIncentive, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Vendor.YearlyIncentive, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Vendor.YearlyIncentive, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Vendor.YearlyIncentive, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="row">
            @*@if (Model.Vendor.VendorTypeId == 2)
                {
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Vendor.SpecialDiscount, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Vendor.SpecialDiscount, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                    </div>
                }*@
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Vendor.Remarks, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Vendor.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="creditParty col-md-6" style="display:none">
                <div class="form-group">
                    @Html.LabelFor(model => model.Vendor.NoOfCheck, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Vendor.NoOfCheck, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
            </div>
            <div class="creditParty col-md-6" style="display:none">
                <div class="form-group">
                    @Html.Label("Check No (Comma Separated)", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Vendor.CheckNo, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
            </div>
            <div class="creditParty col-md-6" style="display:none">
                <div class="form-group">
                    @Html.LabelFor(model => model.Vendor.ClosingTime, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.Vendor.ClosingTime, new SelectList(Model.Months, "Value", "Text"), "---Select---", htmlAttributes: new { @class = "dropdownsize form-control", @id = "ddlDistrict" })
                        @Html.ValidationMessageFor(model => model.Vendor.ClosingTime, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            @*@if (Model.Vendor.VendorTypeId == 2)
                {
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Vendor.IsCarrying, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.Vendor.IsCarrying, new { htmlAttributes = new { @style = "margin-left:1px" } })
                                    @Html.ValidationMessageFor(model => model.Vendor.IsCarrying, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                }*@
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Vendor.IsActive, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Vendor.IsActive, new { htmlAttributes = new { @style = "margin-left:1px" } })
                            @Html.ValidationMessageFor(model => model.Vendor.IsActive, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    @if (Model.Vendor.CompanyId == 8)
                    {
                        <b style="margin-left:20px;color:#32527B">@Model.Vendor.Condition</b>
                    }
                    <input type="submit" value="@Model.Vendor.ButtonName" id="apply" class="btn btn-success pull-right" style="margin-left:2px" />
                    <a href="@Url.Action("Index",new { companyId=Model.Vendor.CompanyId, vendorTypeId=Model.Vendor.VendorTypeId,isActive=Model.Vendor.IsActive})" class="btn btn-danger pull-right">
                        Close <i class="fa fa-close" aria-hidden="true"></i>
                    </a>
                </div>
            </div>
        </div>

    </div>



}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script type="text/javascript">

        $(function () {
            var inputValue = $('input[name="Vendor.CustomerType"]:checked').val();
                if (inputValue == 'Credit') {
                    $('#divCreditCommission').show();
                    $('.creditParty').show();
                }
                else {
                    $('#txtCreditCommission').val(0);
                    $('#divCreditCommission').hide();
                    $('.creditParty').hide();
                }


        })
        //JQuery Ajax Form Submit Begin
        function jQueryAjaxPost(form) {
            $validator.unobtrusive.parse(form);
            if ($(form).valid()) {
                var ajaxConfig = {
                    type: "POST",
                    url: from.action,
                    data: new FormData(form),
                    success: function (response) {
                        var url = '@Url.Action("Index", "Vendor",new { companyId=Request.QueryString["companyId"], vendorTypeId= Request.QueryString["vendorTypeId"] })';
                        window.location.href = url;
                    }
                };

                if ($(form).attr('enctype') == "multipart/form-data") {
                    ajaxConfig["contentType"] = false;
                    ajaxConfig["processData"] = false;
                }
                $ajax(ajaxConfig);
            }
            return false;
        }

        //JQuery Ajax Form Submit End

        //Image Preview Begin
        function showImagePreview(imageUploader, previewImage) {
            if (imageUploader.files && imageUploader.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $(previewImage).attr('src', e.target.result);
                }
                reader.readAsDataURL(imageUploader.files[0]);
            }
        }

        //Image Preview End

        //Nominee Image Preview Begin
        function showNomineeImagePreview(imageUploader, previewImage) {
            if (imageUploader.files && imageUploader.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $(previewImage).attr('src', e.target.result);
                }
                reader.readAsDataURL(imageUploader.files[0]);
            }
        }

        //Nominee Image Preview End




        $('#ddlZone').change(function () {
            $.ajax({
                type: "post",
                url: "/HeadGLs/GetTeritorySelectModelsByZone",
                data: { zoneId: $('#ddlZone').val() },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    var SubZone = "<select>";
                    SubZone = SubZone + '<option value="">--Select--</option>';
                    for (var i = 0; i < data.length; i++) {
                        SubZone = SubZone + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    SubZone = SubZone + '</select>';
                    $('#ddlTeritory').html(SubZone);
                }
            });
        });

        $('#ddlDistrict').change(function () {
            $.ajax({
                type: "post",
                url: "/Upazila/GetUpazilaSelectModelsByDistrict",
                data: { districtId: $('#ddlDistrict').val() },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    var Upazila = "<select>";
                    Upazila = Upazila + '<option value="">--Select--</option>';
                    for (var i = 0; i < data.length; i++) {
                        Upazila = Upazila + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    Upazila = Upazila + '</select>';
                    $('#ddlUpazila').html(Upazila);
                }
            });
        });

        $('input[type="radio"]').click(function () {
            var inputValue = $(this).attr("value");
            if (inputValue == 'Credit') {
                $('#txtCreditCommission').val(0.5);
                $('#divCreditCommission').show();
                $('.creditParty').show();
            }
            else {
                $('#txtCreditCommission').val(0);
                $('#divCreditCommission').hide();
                $('.creditParty').hide();
            }

        });

        $('#ddlUpazila').change(function () {
            if (!$('#ddlUpazila').val()) {
                alert("Plese Select an Upazila");
                return false;
            }
            $.ajax({
                type: "post",
                url: "/Vendor/GetAutoGeneratedVendorCode",
                data: { upazilaId: $('#ddlUpazila').val(), vendorTypeId: $('#vendorTypeId').val() },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    $('#txtVendor').val(data);
                },
                error: function () {
                    alert("error");
                }
            });
        });

    </script>

}
