@model KGERP.Service.ServiceModel.CompanyModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm("CreateOrEdit", "Company", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return jQueryAjaxPost(this);" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.CompanyId)

<div class="form-horizontal">
    <h4>Company @Model.ButtonName</h4>
    <hr style="border-color:#ff0000; padding:0px;margin-top: 5px;margin-bottom: 5px; border-width: 2px;" />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ShortName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ShortName, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OrderNo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OrderNo, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CompanyType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CompanyType, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MushokNo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MushokNo, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Fax, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Fax, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.IsCompany, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsCompany)
                @Html.ValidationMessageFor(model => model.IsCompany, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsActive)
                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CompanyLogo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            <img src="@Url.Content(Model.CompanyLogo)" style="margin:5px;" height="150" width="150" id="imagePreview" />
            <input type="file" name="CompanyLogoUrlUpload" accept="image/jpg, image/jpeg, image/png" onchange="showImagePreview(this, document.getElementById('imagePreview'))" />
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.CompanyLogoUpload, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            <img src="@Url.Content(Model.CompanyLogo)" style="margin:5px;" height="150" width="150" id="imagePreview" />
            <input type="file" name="CompanyLogoUpload" accept="image/jpg, image/jpeg, image/png" onchange="showImagePreview(this, document.getElementById('imagePreview'))" />
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-3 col-md-10">
            <a href="@Url.Action("Index",new {companyId=Model.CompanyId, productType=Request.QueryString["productType"]})" class="btn btn-danger">
                <span class="glyphicon glyphicon-remove-circle"></span>   Close
            </a>
            <button type="submit" class="btn btn-primary" onclick="javascript: return SubmitForm();" style="margin-left: 20px;"><span class="glyphicon glyphicon-floppy-disk"></span>@Model.ButtonName</button>
        </div>
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script type="text/javascript">

        //JQuery Ajax Form Submit Begin
        function jQueryAjaxPost(form) {
            $validator.unobtrusive.parse(form);
            if ($(form).valid()) {
                var ajaxConfig = {
                    type: "POST",
                    url: from.action,
                    data: new FormData(form),
                    success: function (response) {
                        var url = '@Url.Action("Index", "Company")';
                        window.location.href = url;
                    }
                };

                if ($(form).attr('enctype') == "multipart/form-data") {
                    ajaxConfig["contentType"] = false;
                    ajaxConfig["processData"] = false;
                }
                $ajax(ajaxConfig);
            }
            return false;
        }

        //JQuery Ajax Form Submit End

        //Image Preview Begin
        function showImagePreview(imageUploader, previewImage) {
            if (imageUploader.files && imageUploader.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $(previewImage).attr('src', e.target.result);
                }
                reader.readAsDataURL(imageUploader.files[0]);
            }
        }

        //Image Preview End

  

    </script>

}