
@model KGERP.Service.ServiceModel.AttendenceApproveApplicationModel

@{
    ViewBag.Title = "CreateOnFieldTour";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div style="padding:inherit;font-family: Arial">
    <div class="row">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div>
                <div><h4><b>Request for On Field/ Tour</b></h4></div>
            </div>

            <hr style="border-color:red; padding:0px;margin-top: 0px;margin-bottom: 20px; border-width: 2px;" />
            <div class="form-horizontal">

                <div class="panel panel-info col-md-12">
                    <div class="panel-body">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)

                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="control-label col-md-4">Employee Id</label>
                                <div class="col-md-8">
                                    <input type="text" id="empId" value="@ViewBag.EmployeeId" class="form-control" readonly />
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="control-label col-md-4">Employee Name</label>
                                <div class="col-md-8">
                                    <input type="text" value="@ViewBag.EmployeeName" class="form-control disabled" readonly />
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ApproveFor, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(model => model.ApproveFor, new SelectList(@ViewBag.AppType, "Value", "Text"), "---Select---", new { @id = "ddApproval", @class = "dropdownsize form-control" })
                                    @Html.ValidationMessageFor(model => model.ApproveFor, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6" id="fromDateDiv">
                            <div class="form-group row">
                                <label class="control-label col-md-4">Start Date</label>
                                <div class="col-md-8">
                                    <input type="datetime" class="datepicker" id="fromDate" name="FromDateForOnField" style="width:240px" value="@ViewBag.FromDate" onchange="ValidateEndDate()" autocomplete="off" required>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6" id="toDateDiv">
                            <div class="form-group row">
                                <label class="control-label col-md-4"> End Date</label>
                                <div class="col-md-8">
                                    <input type="datetime" class="datepicker" id="toDate" name="ToDateForOnField" style="width:240px" value="@ViewBag.ToDate" onchange="ValidateEndDate()" autocomplete="off" required>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6" id="TourDays">
                            <div class="form-group">
                                @Html.LabelFor(model => model.TourDays, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.TourDays, new { htmlAttributes = new { @class = "form-control", @id = "txtTourDays", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.TourDays, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6" id="divOnFieldDate">
                            <div class="form-group row">
                                <label class="control-label col-md-4">On Field Date</label>
                                <div class="col-md-8">
                                    <input type="datetime" class="datepicker" id="OnFieldDate" style="width:240px" name="OnFieldDate" autocomplete="off" required>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="control-label col-md-4" id="resonLabel">Reason</label>
                                @* @Html.LabelFor(model => model.Resion, new { @id = "resonLabel", htmlAttributes = new { @class = "control-label col-md-4" } })*@
                                <div class="col-md-8">
                                    <textarea rows="3" cols="50" id="searchInput" name="Resion"></textarea>
                                    @*@Html.EditorFor(model => model.Resion, new { @id = "searchInput", htmlAttributes = new { @class = "form-control" } })*@
                                    @*@Html.ValidationMessageFor(model => model.Resion, "", new { @class = "text-danger" })*@
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6 ">
                            <div class="form-group">
                                <div class="col-md-offset-4 left" style="padding-left:15px">
                                    <input type="submit" data-confirm="Are you sure to submit your application?" id="btnResuest" value="Request" class="btn btn-info" disabled />
                                    @Html.ActionLink("Cancel", "GetOnFieldTourStatus", null, new { @class = "btn btn-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                    @if (@ViewBag.Message != null)
                    {
                        <div class="alert alert-warning" role="alert">
                            <strong>@ViewBag.Message</strong>
                        </div>
                    }

                </div>
            </div>


        }
    </div>

</div>

@section Scripts {

    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")
    <script type='text/javascript'>
        $(function () {
            $('#searchInput').keyup(function () {
                if ($(this).val() == '') {
                    //Check to see if there is any text entered
                    // If there is no text within the input ten disable the button
                    $('#btnResuest').prop('disabled', true);
                } else {
                    //If there is text in the input, then enable the button
                    $('#btnResuest').prop('disabled', false);
                }
            });
        });
    </script>
    <script type="text/javascript">

        $(document).ready(function () {
 
            $("#divOnFieldDate").hide();
            $('#fromDateDiv').hide();
            $('#toDateDiv').hide();
            $('#TourDays').hide();
            $("#resonLabel").text("Location");
 

            function myFunction() {
               // document.getElementById('btnResuest').disabled = true;
                var nameInput = document.getElementById('reson').value;
                if (nameInput != "") {
                    alert("Empty");
                    document.getElementById('btnResuest').disabled = false;
                }
            } 

        });


        $('#ddApproval').change(function () {
            var val = $(this).val();

            if (val == "On Field Duty") {
                $('#divOnFieldDate').show();
                $('#fromDateDiv').hide();
                $('#toDateDiv').hide();
                $('#TourDays').hide();
            }

            else {
                $('#divOnFieldDate').hide();
                $('#fromDateDiv').show();
                $('#toDateDiv').show();
                $('#TourDays').show();
            }
        });


        function ValidateEndDate() {
            var startDate = $('#fromDate').val();
            var endDate = $('#toDate').val();
            var ddApproval = $('#ddApproval').val();

            if (startDate != '' && endDate != '') {
                if (Date.parse(startDate) > Date.parse(endDate)) {
                    $('#toDate').val('');
                    $('#txtTourDays').val('');
                    alert("Start Date should not be greater than End Date");
                    return;
                } 
                var startDate = $('#fromDate').val();
                var start_Date = startDate.split("/");

                var d = parseInt(start_Date[0], 10),
                    m = parseInt(start_Date[1], 10),
                    y = parseInt(start_Date[2], 10);
                var start = new Date(y, m - 1, d);

                var endDate = $('#toDate').val();
                var end_Date = endDate.split("/");
                var d = parseInt(end_Date[0], 10),
                    m = parseInt(end_Date[1], 10),
                    y = parseInt(end_Date[2], 10);
                var end = new Date(y, m - 1, d);


                var timeDiff = Math.abs(start.getTime() - end.getTime());
                var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));
                diffDays = diffDays++;

                if (end < start) {
                    $('#txtTourDays').val(diffDays * -1);
                    return false;
                }
                $('#txtTourDays').val(diffDays + 1);
            }
            return false;
        }




        jQuery(document).ready(function () {

                jQuery('[data-confirm]').click(function (e) {
                if (!confirm(jQuery(this).attr("data-confirm"))) {
                    e.preventDefault();
                   window.location.href = '@Url.Action("GetOnFieldTourStatus", "AttendenceApproval")';
                }
            });
        });

    </script>
}



