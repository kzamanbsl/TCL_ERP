@using PagedList.Mvc;
@model PagedList.IPagedList<KGERP.Data.CustomModel.AttendenceApprovalAction>
@using PagedList;

@{
    ViewBag.Title = "HrAdminActionOnFieldDuty";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    @using (Html.BeginForm("HrAdminActionOnFieldDuty", "AttendenceApproval", FormMethod.Get))
    {
        <div class="col-md-6">
            <h4>
                <b>
                    HR Approval OnField/ Tour
                </b>
            </h4>
        </div>
        <div class="col-md-6 input-group">
            <div class="col-md-10">@Html.TextBox("searchText", null, new { @autocomplete = "off", @class = "form-control", @placeholder = "Search..." })</div>
            <div class="col-md-2 input-append">
                <button type="submit" class="btn btn-success left"><i class="fa fa-search"></i></button>
            </div>
        </div>

    }
</div>

<hr style="border-color:red; padding:0px;margin-top: 10px;margin-bottom: 20px; border-width: 2px;" />
<div style="width:auto">
    <table class="table table-striped">
        <tr style="background-color:#009270;color:#FFFFFF">
            <th>
                SL
            </th>
            <th>
                ID
            </th>
            <th>
                Name
            </th>
            <th>
                Department
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().ApplicationDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().ApproveFor)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().FromDateForOnField)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().ToDateForOnField)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().TourDays)
            </th>
            <th>
                Location
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().ManagerStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().HrStatus)
            </th>
            <th>
                Action
            </th>
        </tr>

        @foreach (var item in Model.Select((x, i) => new { Data = x, Index = i }))
        {
            <tr>
                <td>
                    @((item.Index + 1) + (Model.PageNumber - 1) * Model.PageSize)
                </td>
                <td>
                    @*@("[" + item.Data.EmployeeId + "] " + " " + item.Data.Name + " / " + item.Data.Department + " / " + item.Data.Designation)*@
                    @Html.DisplayFor(modelItem => item.Data.EmployeeId)
                </td>
                <td>
                    <span title="@("Designation : "+item.Data.Designation)">@item.Data.Name</span>
                    @*@Html.DisplayFor(modelItem => item.Data.Name)*@
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Data.Department)
                </td>
                <td nowrap>
                    @Html.DisplayFor(modelItem => item.Data.ApplicationDate)
                </td>
                <td nowrap>
                    @Html.DisplayFor(modelItem => item.Data.ApproveFor)
                </td>
                <td nowrap>
                    @Html.DisplayFor(modelItem => item.Data.FromDateForOnField)
                </td>
                <td nowrap>
                    @Html.DisplayFor(modelItem => item.Data.ToDateForOnField)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Data.TourDays)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Data.Resion)
                </td>
                <td nowrap>
                    @if (item.Data.ManagerStatus == 0)
                    {
                        <span class="btn btn-warning btn-xs" style="width:70px">Pending</span>
                    }
                    @if (item.Data.ManagerStatus == 1)
                    {
                        <span class="btn btn-success btn-xs" style="width:70px">Approved</span>
                    }

                    @if (item.Data.ManagerStatus == 2)
                    {
                        <span class="btn btn-danger btn-xs" style="width:70px">Denied</span>
                    }
                </td>

                <td nowrap>
                    @if (item.Data.HrStatus == 0)
                    {
                        <span class="btn btn-info btn-xs" style="width:70px">New</span>
                    }
                    @if (item.Data.HrStatus == 1)
                    {
                        <span class="btn btn-success btn-xs" style="width:70px">Approved</span>
                    }

                    @if (item.Data.HrStatus == 2)
                    {
                        <span class="btn btn-danger btn-xs" style="width:70px">Denied</span>
                    }
                </td>
                <td style="width:70px">
                    @if (item.Data.ManagerStatus != 0 && item.Data.HrStatus == 0)
                    {
                        using (Html.BeginForm("HrApproveOnFieldTour", "AttendenceApproval", FormMethod.Get))
                        {<input type="hidden" id="id" name="id" value="@item.Data.Id" />
                            <input type="hidden" id="status" name="status" value="Approved" />
                            <div id="approveModal" class="modal fade" role="dialog">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                                            <h4 class="modal-title">HR Comments</h4>
                                        </div>
                                        <div class="modal-body">
                                            <input type="text" name="comments" class="form-control" required min="5" />

                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-danger btn-xs" data-dismiss="modal">Close</button>
                                            <input id="submit" type="submit" class="btn btn-success btn-xs pull-right" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }



                        using (Html.BeginForm("HrDeniedOnFieldTour", "AttendenceApproval", FormMethod.Get))
                        {<input type="hidden" id="id" name="id" value="@item.Data.Id" />
                            <input type="hidden" id="status" name="status" value="Approved" />
                            <div id="deniedModal" class="modal fade" role="dialog">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                                            <h4 class="modal-title">HR Comments</h4>
                                        </div>
                                        <div class="modal-body">
                                            <input type="text" name="comments" class="form-control" required min="5" />
                                            <input type="hidden" name="type" value="Manager" />
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-danger btn-xs" data-dismiss="modal">Close</button>
                                            <input id="submit" type="submit" class="btn btn-success btn-xs pull-right" />

                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        <a class="btn btn-success btn-xs" href="@Url.Action("HrApproveOnFieldTour", "AttendenceApproval", new { id = item.Data.Id })" title="Approve">
                            <i class="fa fa-check" aria-hidden="true"></i>
                        </a>
                        @*<button id="approve" class="btn btn-success btn-xs" data-toggle="modal" data-target="#approveModal" title="Approve"><i class="fa fa-check" aria-hidden="true"></i></button>*@
                        <button id="denied" class="btn btn-danger btn-xs" data-toggle="modal" data-target="#deniedModal" title="Denied"><i class="fa fa-check" aria-hidden="true"></i></button>

                    }

                </td>
            </tr>
        }

    </table>

</div>
@if (Model.PageCount > 1)
{
    <span class="btn btn-success">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    </span>
    <span class="checkbox">
        @Html.PagedListPager(Model, Page_No => Url.Action("HrAdminActionOnFieldDuty", "AttendenceApproval",
                new { Page_No, Sorting_Order = Request.QueryString["searchText"] }))
    </span>
}



