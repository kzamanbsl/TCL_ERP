@using PagedList.Mvc;
@model PagedList.IPagedList<KGERP.Service.ServiceModel.KgReCrmModel>
@using PagedList;
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("DailyDealingOfficer", "KGRECRM", FormMethod.Get))
{
    <div class="row">
        <div class="col-md-12">


            @*<table class="spacing-table">
                    <tr>
                        <td class="col-md-1">
                            <label for="startDate" style="padding-top:8px">From Date</label>
                        </td>
                        <td class="col-md-3">
                            <input class="datepicker pull-left" id="startDate" name="startDate" value="@ViewBag.FromDate" autocomplete="off">
                        </td>
                        <td class="col-md-1">
                            <label for="endDate" style="padding-top:8px">To Date</label>
                        </td>
                        <td class="col-md-3">
                            <input class="datepicker pull-left" id="endDate" name="endDate" value="@ViewBag.ToDate" autocomplete="off">
                        </td>
                        <td>
                            @Html.Editor("searchText", new { htmlAttributes = new { @autocomplete = "off", value = "", @placeholder = "Search..." } })
                            <button type="submit"><i class="fa fa-search "></i></button>
                        </td>

                    </tr>
                </table>*@

            <table class="spacing-table">
                <tr>
                    <td class="tdRightAlign">
                        @Html.LabelFor(model => model.First().ResponsibleOfficer)
                    </td>
                    <td style="background-color: #E9EDBE; vertical-align: middle;">
                        @Html.DropDownListFor(model => model.First().ResponsibleOfficer, new SelectList(ViewBag.ResponsiblePersons, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control", @id = "dealingOfficer", @style = "width: 250px;" })
                    </td>

                    <td class="tdRightAlign">
                        <label for="startDate">From Date</label>
                    </td>
                    <td class="tdRightAlign">
                        <input type="datetime" class="form-control datepicker " id="startDate" name="startDate" autocomplete="off">
                    </td>
                    <td class="tdRightAlign">
                        <label for="endDate" style="padding-top:8px">To Date</label>
                    </td>
                    <td class="tdRightAlign">
                        <input type="datetime" class="form-control datepicker " id="endDate" name="endDate" autocomplete="off">
                    </td>
                </tr>
            </table>
        </div>
    </div>
    <div class="row">
        <div class="col-md-11">
            <div class="col-md-4">
                <h4><b>KGRE Client List</b></h4>
            </div>
            <div class="col-md-4">
                <div class="col-md-8"></div>
                <div class="col-md-4">
                    <button type="submit" class="btn btn-success">Search&nbsp;<i class="fa fa-search"></i></button>
                </div>
            </div>

        </div>
    </div>
}

<hr class="redHorizontalLine" />
<div style="width: 100%; height: 100%; overflow-x: visible; overflow-y: scroll;">
    <style>
        table td th {
            border: solid 1px #fab;
            width: 100px;
            word-wrap: inherit;
        }
    </style>

    <table class="table">
        <tr style="background-color:#009270;color:#FFFFFF">
            <th>
                SL.
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().CreatedDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().ResponsibleOfficer)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().FullName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Designation)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().DepartmentOrInstitution)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().SourceOfMedia)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.First().MobileNo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().StatusLevel)
            </th>
            <th>Action</th>
        </tr>

        @foreach (var item in Model.Select((x, i) => new { Data = x, Index = i }))
        {
            <tr>
                <td>
                    @((item.Index + 1) + (Model.PageNumber - 1) * Model.PageSize)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Data.CreatedDate)
                </td>
                <td nowrap>
                    <span title="@("Name : "+item.Data.ResponsibleOfficer)">@item.Data.ResponsibleOfficer</span>
                </td>
                <td>
                    @if (@item.Data.FullName != null)
                    {
                        @Html.DisplayFor(modelItem => item.Data.FullName)
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Data.Designation)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Data.DepartmentOrInstitution)
                </td>
                <td nowrap>
                    @Html.DisplayFor(modelItem => item.Data.SourceOfMedia)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Data.MobileNo)
                </td>

                @if (item.Data.StatusLevel == "New")
                {
                    <td style="background-color:navajowhite;">
                        @Html.DisplayFor(modelItem => item.Data.StatusLevel)
                    </td>
                }
                else
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.Data.StatusLevel)
                    </td>
                }
                <td>
                    <a href="@Url.Action("CreateOrEdit", new { id = item.Data.ClientId,
                    companyId = (int)Session["CompanyId"]> 0 ? (int)Session["CompanyId"] : 0, })" title="Edit Case" class="btn btn-success btn-xs">
                        Details
                    </a>
                </td>
            </tr>
        }
    </table>
    @if (Model.PageCount > 1)
    {
        <span class="btn btn-success">
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        </span>
        <span class="checkbox">
            @Html.PagedListPager(Model, Page_No =>
                Url.Action("DailyDealingOfficer", "KGRECRM",
                new
                     {
                         Page_No,
                         Sorting_Order = Request.QueryString["Search"],
                    ResponsibleOfficer = Request.QueryString["ResponsibleOfficer"],
                    SourceOfMedia = Request.QueryString["datetime"]
                }))
        </span>
    }
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script type="text/javascript">

        $(document).ready(function () {
            $('input[type=datetime]').datepicker({
                dateFormat: "dd-M-yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-60:+0"
            });

        });
    </script>}