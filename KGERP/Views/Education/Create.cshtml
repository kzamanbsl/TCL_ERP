@model KGERP.ViewModel.EducationViewModel
@{

    ViewBag.Title = "Add or Edit";
}

<div class="row" style="background-color:#32527B;color:#FFFFFF">
    @if (Model.Education.EducationId > 0)
    {
        <span style="font-size:20px;padding:10px;font-weight:bold">Education Update</span>
    }
    else
    {
        <span style="font-size:20px;padding:10px;font-weight:bold">Education Create</span>
    }
</div>
<br />
@using (Html.BeginForm("CreateOrEdit", "Education", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Education.EducationId)
    @Html.HiddenFor(model => model.Education.Id)

<div class="form-horizontal">
    <div class="form-group">
        @Html.LabelFor(model => model.Education.ExaminationId, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-9">
            @Html.DropDownListFor(model => model.Education.ExaminationId, new SelectList(Model.Examinations, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control" })
            @Html.ValidationMessageFor(model => model.Education.ExaminationId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Education.SubjectId, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-9">
            @Html.DropDownListFor(model => model.Education.SubjectId, new SelectList(Model.Subjects, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control" })          
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Education.InstituteId, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-9">
            @Html.DropDownListFor(model => model.Education.InstituteId, new SelectList(Model.Institutions, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Education.PassingYear, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-9">
            @Html.DropDownListFor(model => model.Education.PassingYear, new SelectList(Model.Years, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Education.RollNo, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-9">
            @Html.EditorFor(model => model.Education.RollNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Education.RollNo, "", new { @class = "text-danger" })
        </div>

    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Education.RegNo, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-9">
            @Html.EditorFor(model => model.Education.RegNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Education.RegNo, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Education.Result, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-9">
            @Html.EditorFor(model => model.Education.Result, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Education.Result, "", new { @class = "text-danger" })
        </div>

    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Education.Remarks, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-9">
            @Html.EditorFor(model => model.Education.Remarks, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Education.Remarks, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Education.CertificateName, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-9">
            @Html.TextBoxFor(model => model.Education.CertificateUpload, "", new { @type = "file", @class = "btn btn-success" })
        </div>
    </div>



    <div class="col-md-offset-4 col-md-4">
        <div class="form-group">
            <a href='@Url.Action("Index")?id=@Model.Education.Id' class="btn btn-danger">
                <span class="glyphicon glyphicon-remove-circle"></span>   Close
            </a>
            <button type="submit" class="btn btn-primary" onclick="javascript: return SubmitForm();" style="margin-left: 20px;"><span class="glyphicon glyphicon-floppy-disk"></span>@Model.Education.ButtonName</button>
        </div>
    </div>

</div>

}







