@{
    ViewData["Title"] = "Vendor Payment";
    Layout = "~/Views/Shared/_Layout.cshtml";

}
@model KGERP.Service.Implementation.VMPayment

<style type="text/css">
    input, select, textarea {
        max-width: 100%;
    }
</style>

<section class="content-header">
    <h1>
        Vendor Payment of @Model.CommonCustomerCode-@Model.CommonCustomerName
    </h1>
    <ol class="breadcrumb">
        <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i>Dashboard</a></li>
        <li class="active">Vendor Payment</li>
    </ol>
</section>
<section class="content">
    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm("PurchaseOrdersByID", "Collection", FormMethod.Post, new { id = "orderMasterByIDformId", @class = "formValidator", @enctype = "multipart/form-data" }))
            {
                <div class="box">
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    @Html.HiddenFor(model => model.ActionId, new { id = "ActionId" })
                    @Html.HiddenFor(model => model.CompanyFK, new { id = "CompanyFK" })
                    @Html.HiddenFor(model => model.CustomerId, new { id = "hidCustomerId" })
                    @Html.HiddenFor(model => model.PaymentMasterId, new { id = "hidPaymentMasterId" })

                    <div class="box-danger">
                        <div style="margin: 10px 0;">

                            @if (Model.PaymentMasterId == 0)
                            {
                                <table class="table table-bordered">
                                    <tr>
                                        <th>Bank Name</th>
                                        <td>@Model.BankName</td>
                                        <th>Branch Name</th>
                                        <td>@Model.BranchName</td>
                                    </tr>
                                    <tr>
                                        <th>A/C Name</th>
                                        <td>@Model.ACName</td>
                                        <th>A/C No</th>
                                        <td>@Model.ACNo</td>
                                    </tr>
                                </table>
                            }

                            <div class="box-body">
                                @if (Model.PaymentMasterId > 0)
                                {
                                    @Html.HiddenFor(model => model.BankAccountInfoId, new { id = "hidBankAccountInfo", value = Model.BankAccountInfoId })
                                    <div class="col-md-1"> </div>
                                    <div class="col-md-10">
                                        <table class="table">
                                            <tr>
                                                <th style="width:18%">
                                                    Payment No
                                                </th>
                                                <th style="width:2%">:</th>
                                                <td style="width:30%">
                                                    <label class="col-form-label">@Model.PaymentNo</label>
                                                </td>
                                                <th style="width:18%">Collection Date</th>
                                                <th style="width:2%">:</th>
                                                <td style="width:30%">@Model.TransactionDate.ToString("dd-MM-yyyy")</td>
                                            </tr>
                                            <tr>
                                                <th style="width:18%">
                                                    Collection From
                                                </th>
                                                <th style="width:2%">:</th>
                                                <td style="width:30%">
                                                    @Model.PaymentFromHeadGLName

                                                </td>
                                                <th style="width:18%">Collection To</th>
                                                <th style="width:2%">:</th>
                                                <td style="width:30%">@Model.PaymentToHeadGLName</td>
                                            </tr>
                                            <tr>
                                                <th style="width:18%">
                                                    Reference
                                                </th>
                                                <th style="width:2%">:</th>
                                                <td style="width:30%">
                                                    <label class="col-form-label">@Model.ReferenceNo</label>
                                                </td>
                                                <th style="width:18%">Bank Charge</th>
                                                <th style="width:2%">:</th>
                                                <th style="width:30%">@Model.BankCharge</th>
                                            </tr>
                                        </table>
                                    </div>
                                    <div class="col-md-1"> </div>
                                }

                                @if (Model.PaymentMasterId == 0)
                                {
                                    <div class="row">
                                        <div class="col-md-4" id="inputChequeDate">
                                            <div class="form-group">
                                                <label class="form-label">Payment Date<sup class="text-danger" title="Required"><b>*</b></sup></label>
                                                <input name="TransactionDate" asp-for="TransactionDate" type="text" class="datePicker form-control" id="txtChqDate" placeholder="Payment Date" autocomplete="off">
                                                @Html.ValidationMessageFor(model => model.TransactionDate, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="bankInfo col-md-4">
                                            <div class="form-group">
                                                <label class="form-label">Select Bank<sup class="text-danger" title="Required"><b>*</b></sup></label>
                                                @Html.DropDownListFor(model => model.BankId, new SelectList(Model.BankList.OrderBy(order => order.Text), "Value", "Text"), "==Select Bank==", new { id = "ddlBankId", @class = "form-control searchingDropdown", style = "width:100%" })
                                                @Html.ValidationMessageFor(model => model.BankId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="bankInfo col-md-4">
                                            <div class="form-group">
                                                <label class="form-label">Select Branch<sup class="text-danger" title="Required"><b>*</b></sup></label>
                                                @Html.DropDownListFor(model => model.BranchId, new SelectList(Model.BranchList.OrderBy(order => order.Text), "Value", "Text"), "==Select Branch==", new { id = "ddlBankBranchId", @class = "form-control searchingDropdown", style = "width:100%" })
                                                @Html.ValidationMessageFor(model => model.BranchId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="bankInfo col-md-4">
                                            <div class="form-group">
                                                <label class="form-label">Account Number<sup class="text-danger" title="Required"><b>*</b></sup></label>
                                                @Html.DropDownListFor(model => model.BankAccountInfoId, new SelectList(Model.AccountNoList.OrderBy(order => order.Text), "Value", "Text"), "==Select Account No==", new { id = "ddlBankAccountInfoId", @class = "form-control searchingDropdown", style = "width:100%" })
                                                @Html.ValidationMessageFor(model => model.BankAccountInfoId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="bankInfo col-md-4">
                                            <div class="form-group">
                                                <label class="form-label">Cheque Book<sup class="text-danger" title="Required"><b>*</b></sup></label>
                                                @Html.DropDownListFor(model => model.ChequeBookId, Model.ChequeBookList as SelectList, "==Select Cheque Book==", new { id = "ddlCheqeBookId", @class = "form-control searchingDropdown", style = "width:100%", required = "required" })
                                                @Html.ValidationMessageFor(model => model.ChequeBookId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="col-md-4" id="inputChequeNo">
                                            <div class="form-group">
                                                <label class="form-label">Cheque No<sup class="text-danger" title="Required"><b>*</b></sup></label>
                                                @Html.TextBoxFor(model => model.MoneyReceiptNo, new { id = "txtChqNo", @class = "form-control", placeholder = "Cheque No", @readonly = "true" })
                                                @Html.ValidationMessageFor(model => model.MoneyReceiptNo, "", new { id = "chequeNoValidationMessage", @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    @*<div class="row">
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                <label>Payment Type :</label>
                                                @Html.DropDownListFor(model => model.Accounting_BankOrCashParantId, Model.BankOrCashParantList as SelectList, "==Select Payment Type==", new { id = "ddlAccounting_BankOrCashParantId", @class = "form-control ddlReset", style = "width:100%", required = "required" })
                                                @Html.ValidationMessageFor(model => model.Accounting_BankOrCashParantId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                <label>Bank/Cash :</label>
                                                @Html.DropDownListFor(model => model.Accounting_BankOrCashId, Model.BankOrCashGLList as SelectList, new { id = "ddlAccounting_BankOrCashId", @class = "form-control searchingDropdown", style = "width:100%", required = "required" })
                                                @Html.ValidationMessageFor(model => model.Accounting_BankOrCashId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="col-md-4">
                                            <div class="form-group">
                                                <label for="txtDescription" class="col-form-label">Reference No :</label>
                                                @Html.TextAreaFor(model => model.ReferenceNo, new { id = "txtReferenceNo", placeholder = "Reference no", @class = "form-control", Rows = 1, required = "required" })
                                                @Html.ValidationMessageFor(model => model.ReferenceNo, "", new { @class = "text-danger" })
                                            </div>
                                        </div>*@
                                    @*<div class="col-md-2 text-right">
                                            <div class="form-group">
                                                @Html.CheckBoxFor(model => model.IsAdjust, new { id = "checkboxAdjust", @class = "form-check" })
                                                <label for="checkboxAdjust" class="form-check-label">Adjust From Deposit?</label>
                                            </div>
                                        </div>*@
                                    @*</div>*@
                                }


                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label for="message-text" class="col-form-label">Work Order No<sup class="text-danger" title="Required"><b>*</b></sup></label>
                                            @Html.DropDownListFor(model => model.PurchaseOrderId, Model.OrderMusterList as SelectList, "==Work Order No==", new { id = "ddlPurchaseOrderId", @class = "searchingDropdown form-control", required = "true" })
                                            @Html.ValidationMessageFor(model => model.PurchaseOrderId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label for="txtDescription" class="col-form-label">Payable Amount<sup class="text-danger" title="Required"><b>*</b></sup></label>
                                            <input name="PayableAmount" id="payableAmount" value="@(Convert.ToDecimal(Model.PayableAmountDecimal) - (Convert.ToDecimal(Model.OutAmount) + Convert.ToDecimal(Model.ReturnAmount)))" readonly="readonly" asp-for="PayableAmount" type="text" class="form-control">
                                            @Html.ValidationMessageFor(model => model.PayableAmount, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label for="txtOutAmount" class="col-form-label">Payment Amount<sup class="text-danger" title="Required"><b>*</b></sup></label>
                                            <input name="OutAmount" asp-for="OutAmount" type="text" required="required" class="form-control" id="txtOutAmount" placeholder="Payment amount">
                                            @Html.ValidationMessageFor(model => model.OutAmount, "", new { id = "validOutAmount", @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="box-footer">
                                <div class="row">
                                    <div class="col-md-4"></div>
                                    <div class="col-md-4"></div>
                                    <div class="col-md-4">
                                        <button type="submit" id="poCreateBtn" class="btn btn-primary btn-block">
                                            <i class='fa fa-plus'></i>
                                            <span>Payment to @Model.CommonCustomerName</span>
                                        </button>
                                    </div>
                                </div>
                            </div>

                            @if (Model.PaymentMasterId > 0)
                            {
                                <div class="box-danger">
                                    <div class="box-header"></div>
                                    <!-- /.box-header -->
                                    <div class="box-body">
                                        <div class="table-responsive">
                                            <table id="KgErpDataTable" class="table table-striped">
                                                <thead>
                                                    <tr>
                                                        <th>SL</th>
                                                        <th>
                                                            WO No
                                                        </th>
                                                        <th>
                                                            WO Date
                                                        </th>

                                                        <th style="text-align:right;">
                                                            Payment Amount
                                                        </th>
                                                    </tr>
                                                </thead>
                                                @{int sl = 0;
                                                    decimal paidTotal = 0;
                                                }
                                                <tbody>
                                                    @foreach (var item in Model.DataList)
                                                    {
                                                        paidTotal += item.OutAmount ?? 0;
                                                        <tr>
                                                            <td>@(++sl)</td>
                                                            <td>
                                                                @item.OrderNo
                                                            </td>
                                                            <td>
                                                                @item.OrderDate.ToString("dd-MM-yyyy")
                                                            </td>

                                                            <td style="text-align:right;">
                                                                @item.OutAmount
                                                            </td>


                                                        </tr>
                                                    }
                                                </tbody>
                                                <tfoot>
                                                    <tr>
                                                        <th></th>
                                                        <th colspan="2">
                                                            Total Amount
                                                        </th>

                                                        <th style="text-align:right;">
                                                            @paidTotal
                                                        </th>

                                                    </tr>
                                                </tfoot>
                                            </table>
                                        </div>
                                    </div>

                                    <div class="box-footer">
                                        <div class="row">

                                            <div class="col-md-8"></div>
                                            <div class="col-md-4">
                                                @if (!Model.IsFinalized)
                                                {
                                                    <a onclick="makeProdReferenceSubmitable(@Model.PaymentMasterId);" class="btn btn-success btn-block" style="width:100%" data-toggle="modal" data-target="#submitPaymentMasterIdModal" title="Submit" data-placement="top"><i class="fa fa-fingerprint" aria-hidden="true"></i>Submit</a>

                                                }
                                                else
                                                {
                                                    <button class="btn btn-success btn-block" style="width:100%" disabled="disabled">Submitted</button>

                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }

            @using (Html.BeginForm("PurchaseOrdersByID", "Collection", FormMethod.Post, new { id = "orderMasterByIDFormId", @class = "formValidator" }))
            {
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="modal fade" id="submitPaymentMasterIdModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close pull-right" data-dismiss="modal" aria-label="Close">
                                    &times;
                                </button>
                                <h5 class="modal-title"><b>Submit</b></h5>
                            </div>
                            <div class="modal-body">

                                @Html.HiddenFor(model => model.CompanyFK, new { id = "submitCompanyFK" })
                                @Html.HiddenFor(model => model.PaymentMasterId, new { id = "submitPaymentMasterId" })
                                @Html.HiddenFor(model => model.ActionId, new { id = "submitActionId" })
                                @Html.HiddenFor(model => model.CustomerId, new { id = "submitCustomerId" })


                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                <div style="text-align:center">
                                    <h3>Are you sure to submit this?</h3>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <div class="col-md-3">
                                    <button type="button" class="btn btn-warning fa fa-close" data-dismiss="modal">&nbsp;NO</button>
                                </div>
                                <div class="col-md-9">
                                    <button type="submit" id="btnsave" style="width:100%" class="btn btn-primary fa fa-remove">&nbsp; Submit</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }


        </div>

    </div>
</section>

@section scripts {

    <script type="text/javascript">

        function makeProdReferenceSubmitable(rowId) {
            $("#submitPaymentMasterId").val(rowId)
            $('#submitCompanyFK').val("@Model.CompanyFK");
            $('#submitCustomerId').val("@Model.CustomerId");
            $('#submitActionId').val(10);
        }

        $(document).ready(function () {

            $("#ddlPurchaseOrderId").change(function () {
                var purchaseOrderId = $('#ddlPurchaseOrderId').val();
                $.ajax({
                       type: "GET",
                    url: "@Url.Action("GetPurchaseOrderPayableValue", "Procurement")",
                    datatype: "Json",
                    data: { companyId: "@Model.CompanyFK", purchaseOrderId: purchaseOrderId },
                    success: function (data) {

                        $('#txtOutAmount').val(data);
                        $('#payableAmount').val(data);
                    }
                });
            });


            $('#txtOutAmount').on('input', function () {
                var payableValue = parseFloat($('#payableAmount').val()) || 0;
                var AmountValue = parseFloat($('#txtOutAmount').val()) || 0;
                if (AmountValue <= payableValue ) {
                    $("#validOutAmount").text("");
                }
                else {
                    $('#txtOutAmount').val(payableValue);

                    $("#validOutAmount").text("Amount cannot exceed the Payable amount!");
                }
            });

            $("#ddlAccounting_BankOrCashParantId").change(function () {
                var bankOrCashParantId = $("#ddlAccounting_BankOrCashParantId").val();
                $.ajax({
                    type: "GET",
                    url: "@Url.Action("HeadGLByHead5ParentIdGet", "Vouchers")",
                    datatype: "Json",
                         data: { companyId: "@Model.CompanyFK", parentId: bankOrCashParantId},
                         success: function (data) {
                         var items = "";
                            if (data) {
                            $("#ddlAccounting_BankOrCashId").empty();
                            $(data).each(function (index, item) {
                                $("#ddlAccounting_BankOrCashId").append("<option value='" + item.Value + "'>" + item.Text + "</option>");
                            });
                        }
                    }
                });
            })
        });

        $('#ddlBankId').on('change', function (event) {
            var bankId = $("#ddlBankId option:selected").val();
            var showBarnchList = $("#ddlBankBranchId");
            $.ajax({
                type: "GET",
                url: "/ChequeRegister/GetBranchBybankId",
                dataType: "json",
                data: { bankId: bankId },
                success: function (data) {
                    showBarnchList.empty();
                    showBarnchList.append("<option selected disabled>==Select Branch==</option>");
                    $.each(data, function (index, item) {
                        showBarnchList.append($('<option>', {
                            value: item.BranchId,
                            text: item.BranchName
                        }));
                    });
                }
            });
        });

        $('#ddlBankBranchId').on('change', function (event) {
            var bankId = $("#ddlBankId option:selected").val();
            var bankBranchId = $("#ddlBankBranchId option:selected").val();
            var showAccountList = $("#ddlBankAccountInfoId");
            $.ajax({
                type: "GET",
                url: "/ChequeRegister/GetAccountNoByBankBranchId",
                dataType: "json",
                data: { bankId: bankId, bankBranchId: bankBranchId },
                success: function (data) {
                    showAccountList.empty();
                    showAccountList.append("<option selected disabled>==Select Account No==</option>");
                    $.each(data, function (index, item) {
                        showAccountList.append($('<option>', {
                            value: item.BankAccountInfoId,
                            text: item.AccountNo
                        }));
                    });
                }
            });
        });

        $('#ddlBankAccountInfoId').on('change', function (event) {
            var bankAccountInfoId = $("#ddlBankAccountInfoId option:selected").val();
            var showChequeBookList = $("#ddlCheqeBookId");
            $.ajax({
                type: "GET",
                url: "/ChequeRegister/GetChequeBookListByAccountInfo",
                dataType: "json",
                data: { bankAccountInfoId: bankAccountInfoId },
                success: function (data) {
                    showChequeBookList.empty();
                    showChequeBookList.append("<option selected disabled>==Select Cheque Book==</option>");
                    $.each(data, function (index, item) {
                        showChequeBookList.append($('<option>', {
                            value: item.ChequeBookId,
                            text: item.ChequeBookNo
                        }));
                    });
                }
            });
        });

        $('#ddlCheqeBookId').on('change', function (event) {
            var chequeBookId = $("#ddlCheqeBookId option:selected").val();
            $.ajax({
                type: "GET",
                url: "/ChequeRegister/GetChequeBookInfoById",
                dataType: "json",
                data: { chequeBookId: chequeBookId },
                success: function (data) {
                    console.log(data);
                    if (data.UsedBookPage != data.TotalBookPage || data.UsedBookPage < data.TotalBookPage) {

                        if (data.UsedBookPage == 0) {
                            $('#txtChqNo').val(data.BookFirstPageNumber);
                            $('#chequeNoValidationMessage').text("");
                        }
                        else {
                            $('#txtChqNo').val(data.BookFirstPageNumber + data.UsedBookPage);
                            $('#meschequeNoValidationMessagesage').text("");
                        }
                    }
                    else {
                        $('#txtChqNo').val(0);
                        $('#chequeNoValidationMessage').text("No more page here, Try with another book!");
                    }
                }
            });
        });

    </script>
}


