@model KGERP.ViewModel.AssetViewModel
@{
    ViewBag.Title = "Create";
}
<style>
    span.error {
        display: block;
        visibility: hidden;
        color: red;
        font-size: 90%;
    }

    tr.error {
        background-color: rgba(255,0,0,0.35);
    }
    .date {
        height: 30px;
        width: 238px;
    }

    .btnPosition {
        margin-left: 200px;
        margin-right: 11px;
    }

    div{
        margin-bottom : 6px;
    }
  

    .remove {
        width: 40px;
        height: 25px;
        font-size: 16px;
        background-color: #dd4b39;
        color: white;
        border: none;
        border-radius: 15px;
    }
</style>

@using (Html.BeginForm("CreateOrEditLand", "Asset", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Asset.AssetId)
    @Html.HiddenFor(model => model.Asset.AssetLocationId)
    @Html.HiddenFor(model => model.Asset.AssetSubLocationId)
    @Html.HiddenFor(model => model.Asset.AssetCategoryId)
    @Html.HiddenFor(model => model.Asset.AssetTypeId)
    @Html.HiddenFor(model => model.Asset.Quantity)

    <div class="row">
        <div class="panel panel-success">
            <div class="panel-heading">
                <span style="font-size:15px;font-family:Arial;font-weight:bold">Land Information</span>
            </div>
            <div class="panel-body" style="padding-left:0px;padding-right:0px">





                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.CompanyId, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.Asset.CompanyId, new SelectList(Model.Company, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control", @id = "ddlCompany" })

                            @Html.ValidationMessageFor(model => model.Asset.CompanyId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.DistrictId, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.Asset.DistrictId, new SelectList(Model.Districts, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control", @id = "ddlDistrict" })

                            @Html.ValidationMessageFor(model => model.Asset.DistrictId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.LandReceiverId, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.Asset.LandReceiverId, new SelectList(Model.LandReceiver, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control", @id = "ddlLandReceiver" })

                            @Html.ValidationMessageFor(model => model.Asset.LandReceiverId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.UpazillaId, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.Asset.UpazillaId, new SelectList(Model.Upazilas, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control", @id = "ddlUpazila" })

                            @Html.ValidationMessageFor(model => model.Asset.UpazillaId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.DonerNameEn, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Asset.DonerNameEn, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })

                            @Html.ValidationMessageFor(model => model.Asset.DonerNameEn, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.Eunion, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Asset.Eunion, new { htmlAttributes = new { @class = "form-control" } })

                            @Html.ValidationMessageFor(model => model.Asset.Eunion, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.LandUserId, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.Asset.LandUserId, new SelectList(Model.LandUser, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control", @id = "ddlLandUser" })

                            @Html.ValidationMessageFor(model => model.Asset.LandUserId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.Mouja, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Asset.Mouja, new { htmlAttributes = new { @class = "form-control" } })

                            @Html.ValidationMessageFor(model => model.Asset.Mouja, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>


                @*<div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Asset.ReceiverNameEn, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Asset.ReceiverNameEn, new { htmlAttributes = new { @class = "form-control", } })

                        @Html.ValidationMessageFor(model => model.Asset.ReceiverNameEn, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>*@


                @*<div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Asset.UserName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Asset.UserName, new { htmlAttributes = new { @class = "form-control", } })

                        @Html.ValidationMessageFor(model => model.Asset.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>*@
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.ProjectId, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.Asset.ProjectId, new SelectList(Model.Project, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control", @id = "ddlProject" })

                            @Html.ValidationMessageFor(model => model.Asset.ProjectId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.AmountOfLandPurchasedEn, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Asset.AmountOfLandPurchasedEn, new { htmlAttributes = new { @class = "form-control", @id = "amountOfLandPurchsed", @autocomplete = "off" } })

                            @Html.ValidationMessageFor(model => model.Asset.AmountOfLandPurchasedEn, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.DeedNo, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Asset.DeedNo, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })

                            @Html.ValidationMessageFor(model => model.Asset.DeedNo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.SoldLand, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Asset.SoldLand, new { htmlAttributes = new { @class = "form-control", @id = "soldLand", @autocomplete = "off" } })

                            @Html.ValidationMessageFor(model => model.Asset.SoldLand, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.DeedDate, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Asset.DeedDate, new { htmlAttributes = new { @class = "datepicker date", @autocomplete = "off" } })

                            @Html.ValidationMessageFor(model => model.Asset.DeedDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>




                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.PresentLand, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Asset.PresentLand, new { htmlAttributes = new { @class = "form-control", @id = "presentLand", @autocomplete = "off", @readonly = "readonly" } })

                            @Html.ValidationMessageFor(model => model.Asset.PresentLand, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.BiaDeedNoAndDateEn, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Asset.BiaDeedNoAndDateEn, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })

                            @Html.ValidationMessageFor(model => model.Asset.BiaDeedNoAndDateEn, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.MortgageLand, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Asset.MortgageLand, new { htmlAttributes = new { @class = "form-control", @id = "mortgageLand", @autocomplete = "off" } })

                            @Html.ValidationMessageFor(model => model.Asset.MortgageLand, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.MortgageInstitution, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Asset.MortgageInstitution, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })

                            @Html.ValidationMessageFor(model => model.Asset.MortgageInstitution, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.NonMortgageLand, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Asset.NonMortgageLand, new { htmlAttributes = new { @class = "form-control", @id = "nonMortgageLand", @autocomplete = "off", @readonly = "readonly" } })

                            @Html.ValidationMessageFor(model => model.Asset.NonMortgageLand, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>




                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.CS, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Asset.CS, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })

                            @Html.ValidationMessageFor(model => model.Asset.CS, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.CSDag, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Asset.CSDag, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })

                            @Html.ValidationMessageFor(model => model.Asset.CSDag, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.SA, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Asset.SA, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })

                            @Html.ValidationMessageFor(model => model.Asset.SA, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.SADag, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Asset.SADag, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })

                            @Html.ValidationMessageFor(model => model.Asset.SADag, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.RS, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Asset.RS, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })

                            @Html.ValidationMessageFor(model => model.Asset.RS, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.RSDag, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Asset.RSDag, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })

                            @Html.ValidationMessageFor(model => model.Asset.RSDag, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.BS, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Asset.BS, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })

                            @Html.ValidationMessageFor(model => model.Asset.BS, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.BSDag, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Asset.BSDag, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })

                            @Html.ValidationMessageFor(model => model.Asset.BSDag, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.CityJoripKhatiyan, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Asset.CityJoripKhatiyan, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })

                            @Html.ValidationMessageFor(model => model.Asset.CityJoripKhatiyan, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.CityJoripDag, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Asset.CityJoripDag, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })

                            @Html.ValidationMessageFor(model => model.Asset.CityJoripDag, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.TotalLandOfSADag, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Asset.TotalLandOfSADag, new { htmlAttributes = new { @class = "form-control", @id = "totalLandOfSaDag", @autocomplete = "off" } })

                            @Html.ValidationMessageFor(model => model.Asset.TotalLandOfSADag, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.TotalLandOfRSDag, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Asset.TotalLandOfRSDag, new { htmlAttributes = new { @class = "form-control", @id = "totalLandOfRsDag", @autocomplete = "off" } })

                            @Html.ValidationMessageFor(model => model.Asset.TotalLandOfRSDag, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.PurchaseLandOfSADag, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Asset.PurchaseLandOfSADag, new { htmlAttributes = new { @class = "form-control", @id = "purchaseLandOfSaDag", @autocomplete = "off" } })

                            @Html.ValidationMessageFor(model => model.Asset.PurchaseLandOfSADag, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.PurchaseLandOfRSDag, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Asset.PurchaseLandOfRSDag, new { htmlAttributes = new { @class = "form-control", @id = "purchaseLandOfRsDag", @autocomplete = "off" } })

                            @Html.ValidationMessageFor(model => model.Asset.PurchaseLandOfRSDag, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.RemainingLandOfSADag, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Asset.RemainingLandOfSADag, new { htmlAttributes = new { @class = "form-control", @id = "remainingLandOfSaDag", @readonly = "readonly", @autocomplete = "off" } })

                            @Html.ValidationMessageFor(model => model.Asset.RemainingLandOfSADag, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.RemainingLandOfRSDag, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Asset.RemainingLandOfRSDag, new { htmlAttributes = new { @class = "form-control", @id = "remainingLandOfRsDag", @readonly = "readonly" } })

                            @Html.ValidationMessageFor(model => model.Asset.RemainingLandOfRSDag, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.JotNot, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Asset.JotNot, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })

                            @Html.ValidationMessageFor(model => model.Asset.JotNot, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.TotalLandOfBSDag, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Asset.TotalLandOfBSDag, new { htmlAttributes = new { @class = "form-control", @id = "totalLandOfBsDag", @autocomplete = "off" } })

                            @Html.ValidationMessageFor(model => model.Asset.TotalLandOfBSDag, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.KhatianNo, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Asset.KhatianNo, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })

                            @Html.ValidationMessageFor(model => model.Asset.KhatianNo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.PurchaseLandOfBSDag, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Asset.PurchaseLandOfBSDag, new { htmlAttributes = new { @class = "form-control", @id = "purchaseLandOfBsDag", @autocomplete = "off" } })

                            @Html.ValidationMessageFor(model => model.Asset.PurchaseLandOfBSDag, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.DagNo, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Asset.DagNo, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })

                            @Html.ValidationMessageFor(model => model.Asset.DagNo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.RemainingLandOfBSDag, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Asset.RemainingLandOfBSDag, new { htmlAttributes = new { @class = "form-control", @id = "remainingLandOfBsDag", @readonly = "readonly" } })

                            @Html.ValidationMessageFor(model => model.Asset.RemainingLandOfBSDag, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.AmountOfRegisteredLand, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Asset.AmountOfRegisteredLand, new { htmlAttributes = new { @class = "form-control", @id = "amountOfMutedLand", @autocomplete = "off" } })

                            @Html.ValidationMessageFor(model => model.Asset.AmountOfRegisteredLand, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.RemainingLand, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Asset.RemainingLand, new { htmlAttributes = new { @class = "form-control", @id = "remainingLand", @readonly = "readonly" } })

                            @Html.ValidationMessageFor(model => model.Asset.RemainingLand, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.DisputedListId, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.Asset.DisputedListId, new SelectList(Model.DisputedList, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control", @id = "ddlDisputedList" })

                            @Html.ValidationMessageFor(model => model.Asset.DisputedListId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6" id="otherDisputed">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Asset.OtherDisputed, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Asset.OtherDisputed, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })

                            @Html.ValidationMessageFor(model => model.Asset.OtherDisputed, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">

                    </div>
                </div>





                <div class="panel panel-primary">
                    <div class="panel-body">
                        <h4 class="text-on-pannel text-primary"><strong class="text-capitalize"> Land Activity </strong></h4>
                        <div class="col-md-6" id="CaseCommentId">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Asset.Remarks, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.TextAreaFor(model => model.Asset.Remarks, 3, 150, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Asset.Remarks, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="editor-label">
                                <label> <span class="glyphicon glyphicon-upload"><b>Upload Files</b></span></label>
                            </div>
                            <div class="editor-field">
                                <input type="file" name="file" multiple="multiple" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-5 ">
                        <div class="form-group btnPosition">
                            <input type="submit" class="btn btn-primary pull-right" />
                            <a href="@Url.Action("LandIndex3")" class="btn btn-danger pull-right" style="margin-right:8px">
                                Close <i class="fa fa-close" aria-hidden="true"></i>
                            </a>
                        </div>
                    </div>
                </div>


            </div>
            <div class="panel panel-info">
                <div class="panel-heading"><b>File Attachment </b></div>
                <div class="panel-body">
                    <div class="col-md-8">
                        <div class="form-group">
                            <div class="col-md-10">
                                <hr style="border-color:springgreen; padding:10px;margin-top: 5px;margin-bottom: 5px; border-width: 2px;" />
                                <ol class="attachment-block">
                                    @if (Model.Asset != null)
                                    {
                                        if (Model.Asset.AssetId > 0)
                                        {
                                            if (Model.Asset.FileAttachments != null)
                                            {
                                                foreach (var item in Model.Asset.FileAttachments)
                                                {
                                                    <li>
                                                        <a class="title" href="/LandNLegals/Download/?fileName=@(item.AttachFileName)&deedNo=@item.Asset.AssetType" style="padding:20px">@item.AttachFileName</a>
                                                        <a href="javascript:void(0);" data-id="@item.AttachmentId" class="deleteItem"><span class="glyphicon glyphicon-trash"></span></a>
                                                    </li>
                                                }
                                            }
                                        }
                                    }
                                </ol>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="panel panel-info" id="pnlCaseHistory">
                <div class="panel-heading"><b>Asset History </b></div>
                <div class="panel-body">
                    <div class="col-md-8">
                        <div class="form-group">
                            <div class="col-md-10">
                                @if (Model.Asset.AssetId > 0)
                                {
                                    <div>
                                        @if (ViewBag.cHistory != null)
                                        {
                                            @Html.Raw(ViewBag.cHistory)
                                        }
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>


        </div>
    </div>
}

@section Scripts{
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")
<script type="text/javascript">
        $(document).ready(function () {
            //var initial = parseInt(0);
            //$("#soldLand").val(initial);
            //$("#mortgageLand").val(initial);
            //$("#otherDisputed").hide();
            otherDispute();
        });
        $(function () {
            $('.datepicker').datepicker({
                dateFormat: "mm/dd/yy",
                showOn: 'both',
                buttonText: "<i class='fa fa-calendar'></i>",
                changeMonth: true,
                changeYear: true,
                yearRange: "2001:+50"
            });
        });

        $('#ddlCategory').change(function () {
            $.ajax({
                type: "post",
                url: "/Asset/GetAssetTypeByAssetCategory",
                data: { categoryId: $('#ddlCategory').val() },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    var assetType = "<select>";
                    assetType = assetType + '<option value="">--Select--</option>';
                    for (var i = 0; i < data.length; i++) {
                        assetType = assetType + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    assetType = assetType + '</select>';
                    $('#ddlAssetType').html(assetType);
                }
            });
        });
        $('#ddlLocation').change(function () {
            $.ajax({
                type: "post",
                url: "/Asset/GetSubLocationByLocationId",
                data: { locationId: $('#ddlLocation').val() },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    var subLocation = "<select>";
                    subLocation = subLocation + '<option value="">--Select--</option>';
                    for (var i = 0; i < data.length; i++) {
                        subLocation = subLocation + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    subLocation = subLocation + '</select>';
                    $('#ddlSubLocation').html(subLocation);
                }
            });
        });
        $('#ddlDistrict').change(function () {
            $.ajax({
                type: "post",
                url: "/Upazila/GetUpazilaSelectModelsByDistrict",
                data: { districtId: $('#ddlDistrict').val() },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    var Upazila = "<select>";
                    Upazila = Upazila + '<option value="">--Select--</option>';
                    for (var i = 0; i < data.length; i++) {
                        Upazila = Upazila + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    Upazila = Upazila + '</select>';
                    $('#ddlUpazila').html(Upazila);
                }
            });
        });

        function otherDispute() {
            var dispute = $('#ddlDisputedList option:selected').text();

            if (dispute == 'Other') {
                $('#otherDisputed').show();
            }
            else {
                $('#otherDisputed').hide();
            }
        }
        $('#ddlDisputedList').change(function () {
            otherDispute();
        });



        function remainingLandOfSaDag() {
            var totalLandOfSaDag = $("#totalLandOfSaDag").val();
            var purchaseLandOfSaDag = $("#purchaseLandOfSaDag").val();
            var remaining = totalLandOfSaDag - purchaseLandOfSaDag;

            $("#remainingLandOfSaDag").val(remaining);
        }
        $("#totalLandOfSaDag").keyup(function () {

            remainingLandOfSaDag();
        });
        $("#purchaseLandOfSaDag").keyup(function () {

            remainingLandOfSaDag();
        });




        function remainingLandOfBsDag() {
            var totalLandOfBsDag = $("#totalLandOfBsDag").val();
            var purchaseLandOfBsDag = $("#purchaseLandOfBsDag").val();
            var remaining = totalLandOfBsDag - purchaseLandOfBsDag;

            $("#remainingLandOfBsDag").val(remaining);
        }
        $("#totalLandOfBsDag").keyup(function () {

            remainingLandOfBsDag();
        });
        $("#purchaseLandOfBsDag").keyup(function () {

            remainingLandOfBsDag();
        });


        function remainingLandOfRsDag() {
            var totalLandOfRsDag = $("#totalLandOfRsDag").val();
            var purchaseLandOfRsDag = $("#purchaseLandOfRsDag").val();
            var remaining = totalLandOfRsDag - purchaseLandOfRsDag;

            $("#remainingLandOfRsDag").val(remaining);
        }
        $("#totalLandOfRsDag").keyup(function () {

            remainingLandOfRsDag();
        });
        $("#purchaseLandOfRsDag").keyup(function () {

            remainingLandOfRsDag();
        });




        $("#amountOfMutedLand").keyup(function () {
            var totalLand = $("#amountOfLandPurchsed").val();
            var mutedLand = $(this).val();
            var diff = totalLand - mutedLand;
            $("#remainingLand").val(diff);

        });

        function presentLand() {
            var purchasedLand = $("#amountOfLandPurchsed").val();
            var soldLand = $("#soldLand").val();
            var diff = purchasedLand - soldLand;
            $("#presentLand").val(diff);
        }

        function mortgageLand() {
            var purchasedLand = $("#amountOfLandPurchsed").val();
            var mortgageLand = $("#mortgageLand").val();
            var diff = purchasedLand - mortgageLand;
            $("#nonMortgageLand").val(diff);
        }

        $("#amountOfLandPurchsed").keyup(function () {
            presentLand();
            mortgageLand();

        });
        $("#soldLand").keyup(function () {
            presentLand();

        });
        $("#mortgageLand").keyup(function () {
            mortgageLand();

        });

        $('.deleteItem').click(function (e) {
             e.preventDefault();
             var $ctrl = $(this);
             if (confirm('Do you really want to delete this file?')) {
                 $.ajax({
                     url: '@Url.Action("DeleteFile")',
                     type: 'POST',
                     data: { id: $(this).data('id') }
                 }).done(function (data) {
                     if (data.Result == "OK") {
                         $ctrl.closest('li').remove();
                     }
                     else if (data.Result.Message) {
                         alert(data.Result.Message);
                     }
                 }).fail(function () {
                     alert("There is something wrong. Please try again.");
                 })

             }
       });


</script>
}
