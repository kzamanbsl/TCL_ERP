@model KGERP.ViewModel.AssetViewModel
@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm("CreateOrEdit", "Asset", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="row">
        <span style="font-size:25px">Asset</span>
        <hr style="border-color:#32527B; padding:0px;margin-top: 10px;margin-bottom: 10px; border-width: 2px;" />
    </div>

    <div class="form-horizontal">
        <div class="row">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Asset.AssetId)


            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Asset.CompanyId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.Asset.CompanyId, new SelectList(Model.Company, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control", @id = "ddlCompany" })

                        @Html.ValidationMessageFor(model => model.Asset.CompanyId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Asset.AssetLocationId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.Asset.AssetLocationId, new SelectList(Model.AssetLocation, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control", @id = "ddlLocation" })

                        @Html.ValidationMessageFor(model => model.Asset.AssetLocationId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Asset.AssetSubLocationId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.Asset.AssetSubLocationId, new SelectList(Model.AssetSubLocation, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control", @id = "ddlSubLocation" })

                        @Html.ValidationMessageFor(model => model.Asset.AssetSubLocationId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Asset.AssetCategoryId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.Asset.AssetCategoryId, new SelectList(Model.AssetCategory, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control", @id = "ddlCategory" })

                        @Html.ValidationMessageFor(model => model.Asset.AssetCategoryId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Asset.AssetTypeId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.Asset.AssetTypeId, new SelectList(Model.AssetType, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control", @id = "ddlAssetType" })

                        @Html.ValidationMessageFor(model => model.Asset.AssetTypeId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Asset.StatusId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.Asset.StatusId, new SelectList(Model.AssetStatus, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control" })

                        @Html.ValidationMessageFor(model => model.Asset.StatusId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Asset.ColorId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.Asset.ColorId, new SelectList(Model.Colour, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control" })

                        @Html.ValidationMessageFor(model => model.Asset.ColorId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Asset.ModelNo, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Asset.ModelNo, new { htmlAttributes = new { @class = "form-control" } })

                        @Html.ValidationMessageFor(model => model.Asset.ModelNo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Asset.Weight, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Asset.Weight, new { htmlAttributes = new { @class = "form-control" } })

                        @Html.ValidationMessageFor(model => model.Asset.Weight, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Asset.Quantity, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Asset.Quantity, new { htmlAttributes = new { @class = "form-control" } })

                        @Html.ValidationMessageFor(model => model.Asset.Quantity, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Asset.UnitPrice, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Asset.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })

                        @Html.ValidationMessageFor(model => model.Asset.UnitPrice, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Asset.Remarks, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Asset.Remarks, new { htmlAttributes = new { @class = "form-control" } })

                        @Html.ValidationMessageFor(model => model.Asset.Remarks, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-offset-5 col-md-5">
                <div class="form-group">
                    <input type="submit" class="btn btn-primary pull-right" />
                    <a href="@Url.Action("Index")" class="btn btn-danger pull-right" style="margin-right:8px">
                        Close <i class="fa fa-close" aria-hidden="true"></i>
                    </a>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts{
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")
    <script type="text/javascript">
        $('#ddlCategory').change(function () {
            $.ajax({
                type: "post",
                url: "/Asset/GetAssetTypeByAssetCategory",
                data: { categoryId: $('#ddlCategory').val() },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    var assetType = "<select>";
                    assetType = assetType + '<option value="">--Select--</option>';
                    for (var i = 0; i < data.length; i++) {
                        assetType = assetType + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    assetType = assetType + '</select>';
                    $('#ddlAssetType').html(assetType);
                }
            });
        });
        $('#ddlLocation').change(function () {
            $.ajax({
                type: "post",
                url: "/Asset/GetSubLocationByLocationId",
                data: { locationId: $('#ddlLocation').val() },
                datatype: "json",
                traditional: true,
                success: function (data) {
                    var subLocation = "<select>";
                    subLocation = subLocation + '<option value="">--Select--</option>';
                    for (var i = 0; i < data.length; i++) {
                        subLocation = subLocation + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                    }
                    subLocation = subLocation + '</select>';
                    $('#ddlSubLocation').html(subLocation);
                }
            });
        });

    </script>
}
