
@using PagedList.Mvc;
@model PagedList.IPagedList<KGERP.CustomModel.AttendenceEntity>
@using PagedList;
@{
    /**/

    ViewBag.Title = "GetDailyAttendebce";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("GetDailyAttendebce", "Attendence", FormMethod.Get))
{

<div class="container">
    <div class="row">
        <div class="card-title">
            <h4><b>Daily Attendance</b></h4>
        </div>
        <div class="card-header form-inline">
            <div class="col-lg-5">
                <label for="AttendenceDate">Date wise</label>
                <input type="datetime" class="form-control datepicker " id="AttendenceDate" name="AttendenceDate" autocomplete="off">

                <button type="submit" class="btn btn-success">Search&nbsp;<i class="fa fa-search"></i></button>

            </div>
            <div class="class=" col-lg-5"">
                <label for="AttendenceDate">Any Search</label>
                @Html.TextBox("searchText", null, new { @autocomplete = "off", @class = "form-control", @placeholder = "Search..." })
                <button type="submit" class="btn btn-success">Search&nbsp;<i class="fa fa-search"></i></button>
            </div>


        </div>
    </div>
    <hr style="border-color:red; padding:0px;margin-top: 10px;margin-bottom: 20px; border-width: 2px;" />
</div>

}


<div class="container">
    <div class="panel panel-success">
        <table class="table table-striped">
            <tr class="panel panel-info">
                <th>
                   SL
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().EmployeeId)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.First().Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().AttendenceDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().InTime)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().OutTime)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().TotalHour)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.First().EmpStatus)
                </th>
            </tr>

            @foreach (var item in Model.Select((x,i)=>new {Data=x,Index=i }))
            {
            <tr>
                <td>
                    @((item.Index + 1) + (Model.PageNumber - 1) * Model.PageSize)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Data.EmployeeId)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Data.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Data.AttendenceDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Data.InTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Data.OutTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Data.TotalHour)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Data.EmpStatus)
                </td>

            </tr>
            }

        </table>
    </div>
</div>

@if (Model.PageCount > 1)
{
    <span class="btn btn-success">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    </span>
    <span class="checkbox">
        @Html.PagedListPager(Model, Page_No => Url.Action("GetDailyAttendebce", "Attendence",
                new { Page_No, Sorting_Order = Request.QueryString["searchText"] }))
    </span>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script type="text/javascript">

        $(document).ready(function () {
            $('input[type=datetime]').datepicker({
                dateFormat: "dd/M/yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-60:+0"
            });

        });
    </script>

}

