@model KGERP.ViewModel.OrderDeliverViewModel
@{
    ViewBag.Title = "Create Or Update Order Deliver";
    //var count = Model.DeliverItems.Count;
}

<style>
    .table > thead > tr > th,
    .table > tbody > tr > th,
    .table > tfoot > tr > th,
    .table > thead > tr > td,
    .table > tbody > tr > td,
    .table > tfoot > tr > td {
        padding: 2px 2px 2px 2px;
    }
</style>

@using (Html.BeginForm("CreateOrUpdateOrderDeliver", "OrderDeliver", FormMethod.Post, new { @id = "idForm" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.OrderDeliverCustomModel.CompanyId)
    @Html.HiddenFor(model => model.OrderDeliverCustomModel.OrderMasterId)
    @Html.HiddenFor(model => model.DeliverItems.Count, new { @id = "count" })
    @Html.HiddenFor(model => model.OrderDeliverCustomModel.ProductType)
    @Html.HiddenFor(model => model.OrderDeliverCustomModel.StockInfoId)
    @Html.HiddenFor(model => model.OrderDeliverCustomModel.StoreName)
    <div class="row">
        <div class="col-md-6"><span style="font-size:20px;color:darkgreen;font-weight:bold">Order Delivery</span></div>
    </div>


    <hr style="border-color:#ff0000; padding:0px;margin-top: 5px;margin-bottom: 5px; border-width: 2px;" />
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.OrderDeliverCustomModel.OrderMasterId, new { @id = "orderMasterId" })
        @Html.HiddenFor(model => model.OrderDeliverCustomModel.CustomerId, new { @id = "customerId" })
        @Html.HiddenFor(model => model.OrderDeliverCustomModel.DiscountAmount)
        <div class="row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.OrderDeliverCustomModel.OrderNo, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.OrderDeliverCustomModel.OrderNo, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @readonly = "readonly" } })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.OrderDeliverCustomModel.OrderDate, htmlAttributes: new { @class = "control-label" })
                <br />
                @Html.EditorFor(model => model.OrderDeliverCustomModel.OrderDate, new { htmlAttributes = new { @id = "txtInvoiceDate", @class = "datepicker", @disabled = "ture", @style = "width:240px" } })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.OrderDeliverCustomModel.Customer, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.OrderDeliverCustomModel.Customer, new { htmlAttributes = new { @id = "txtParty", @class = "form-control", @autocomplete = "off", @readonly = "readonly" } })
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.OrderDeliverCustomModel.CustomerAddress, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.OrderDeliverCustomModel.CustomerAddress, new { htmlAttributes = new { @id = "txtAddress", @class = "form-control", @autocomplete = "off", @readonly = "readonly" } })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.OrderDeliverCustomModel.CustomerContact, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.OrderDeliverCustomModel.CustomerContact, new { htmlAttributes = new { @id = "txtPhone", @class = "form-control", @autocomplete = "off", @readonly = "readonly" } })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.OrderDeliverCustomModel.DeliveryDate, htmlAttributes: new { @class = "control-label" })
                <br />
                @Html.EditorFor(model => model.OrderDeliverCustomModel.DeliveryDate, new { htmlAttributes = new { @id = "txtDeliveryDate", @class = "datepicker", @autocomplete = "off", @style = "width:240px" } })
                @Html.ValidationMessageFor(model => model.OrderDeliverCustomModel.DeliveryDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.OrderDeliverCustomModel.ChallanNo, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.OrderDeliverCustomModel.ChallanNo, new { htmlAttributes = new { @id = "txtChallanNo", @class = "form-control", @autocomplete = "off", } })
                @Html.ValidationMessageFor(model => model.OrderDeliverCustomModel.ChallanNo, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.OrderDeliverCustomModel.InvoiceNo, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.OrderDeliverCustomModel.InvoiceNo, new { htmlAttributes = new { @id = "txtInvoiceNo", @class = "form-control", @autocomplete = "off", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.OrderDeliverCustomModel.InvoiceNo, "", new { @class = "text-danger" })
            </div>
            @*<div class="col-md-4">
                    @Html.LabelFor(model => model.OrderDeliverCustomModel.StockInfoId, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.OrderDeliverCustomModel.StockInfoId, new SelectList(Model.StockInfos, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control", @id = "ddlStockInfoId", @onchange = "getInvoiceNo()" })
                    @Html.ValidationMessageFor(model => model.OrderDeliverCustomModel.StockInfoId, "", new { @class = "text-danger" })
                </div>*@
        </div>
    </div>


    <div class="row">
        <br />
        <table class="table">
            <tr style="background-color:#4CAF50;color:#FFFFFF">
                <th>
                    Product Name
                </th>
                <th>
                    Order Qty
                </th>
                <th>
                    Unit Price
                </th>
                <th>
                    Store Available Qty
                </th>
                <th>
                    Deliver Qty
                </th>
                <th>
                    Engine No
                </th>

                <th>
                    Chassis No
                </th>
                <th>
                    Bettery No
                </th>
                <th>
                    Rear Tyre LH
                </th>
                <th>
                    Rear Tyre RH
                </th>
            </tr>
            @for (int i = 0; i < Model.DeliverItems.Count(); i++)
            {
                <tr id="itemDetails">

                    <td>
                        @Html.Hidden("deliverItems.Index", (@i))
                        @Html.Hidden("deliverItems[" + i + "].ProductId", Model.DeliverItems[i].ProductId)
                        @Html.Hidden("deliverItems[" + i + "].UnitPrice", Model.DeliverItems[i].UnitPrice)
                        @Html.DisplayFor(model => Model.DeliverItems[i].ProductName)
                    </td>

                    <td>
                        @Html.TextBox("deliverItems[" + i + "].OrderQty", Model.DeliverItems[i].OrderQty, new { @readonly = "readonly", @class = "", @style = "width:70px;border: 1px solid #999;background-color:#EEEEEE;text-align:right" })
                    </td>
                    <td>
                        @Html.TextBox("deliverItems[" + i + "].DisplayUnitPrice", Model.DeliverItems[i].UnitPrice, new { @readonly = "readonly", @class = "", @style = "width:70px;border: 1px solid #999;background-color:#EEEEEE;text-align:right" })
                    </td>


                    <td>
                        @Html.TextBox("deliverItems[" + i + "].StoreAvailableQty", Model.DeliverItems[i].StoreAvailableQty, new { @id = "availableQty_" + i + "", @readonly = "readonly", @class = "", @style = "border: 1px solid #999;background-color:#EEEEEE;text-align:right;width:120px;font-weight:bold;color:" + (Model.DeliverItems[i].StoreAvailableQty <= 0 ? "red" : "green") })
                    </td>


                    <td>
                        @Html.TextBox("deliverItems[" + i + "].ReadyToDeliver", Model.DeliverItems[i].OrderQty, new { @id = "deleverQty_" + i + "", @onkeyup = "changeRemainingQty(" + i + ")", @type = "textbox", @autocomplete = "off", @class = "readyToDeliver", @style = "width:110px;font-weight:bold;color:green;border: 1px solid #999;text-align:right" })
                    </td>

                    <td>
                        @Html.DropDownList("deliverItems[" + i + "].EngineNo", new SelectList(Model.DeliverItems[i].Engine, "Value", "Text"), "---Select---", new { @class = "dropdownsize form-control", @onchange = "getProductDetails(" + i + ")", @id = "ddlEngine_" + i + "", @style = "width:125px;height:26px;color:green;border: 1px solid #999;text-align:right" })
                    </td>
                    <td>
                        @Html.TextBox("deliverItems[" + i + "].ChassisNo", Model.DeliverItems[i].ChassisNo, new { @id = "chassisNo_" + i + "", @type = "textbox", @autocomplete = "off", @class = "readyToDeliver", @style = "width:110px;font-weight:bold;color:green;border: 1px solid #999;text-align:right" })
                    </td>
                    <td>
                        @Html.TextBox("deliverItems[" + i + "].BatteryNo", Model.DeliverItems[i].BatteryNo, new { @id = "betteryNo_" + i + "", @type = "textbox", @autocomplete = "off", @class = "readyToDeliver", @style = "width:110px;font-weight:bold;color:green;border: 1px solid #999;text-align:right" })
                    </td>
                    <td>
                        @Html.TextBox("deliverItems[" + i + "].RearTyreLH", Model.DeliverItems[i].RearTyreLH, new { @id = "tyreLh_" + i + "", @type = "textbox", @autocomplete = "off", @class = "readyToDeliver", @style = "width:110px;font-weight:bold;color:green;border: 1px solid #999;text-align:right" })
                    </td>
                    <td>
                        @Html.TextBox("deliverItems[" + i + "].RearTyreRH", Model.DeliverItems[i].RearTyreRH, new { @id = "tyreRh_" + i + "", @type = "textbox", @autocomplete = "off", @class = "readyToDeliver", @style = "width:110px;font-weight:bold;color:green;border: 1px solid #999;text-align:right" })
                    </td>

                </tr>

            }

            <tr>
                <td colspan="13">
                    <a id="btnSubmit" class="btn btn-success" data-toggle="modal" style="float:right; margin-left:2px">
                        Submit
                    </a>

                    <a href="@Url.Action("Index","OrderDeliver",new {companyId= Request.QueryString["companyId"]})" class="btn btn-danger" style="float:right">
                        Close <i class="fa fa-close" aria-hidden="true"></i>
                    </a>
                    &nbsp;
                </td>
            </tr>

        </table>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="exampleModalLong" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true" data-keyboard="false">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <b class="modal-title" id="exampleModalLongTitle" style="color:blue">INVOICE/ BILL</b>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    ...
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                    <input type="submit" formnovalidate="formnovalidate" id="btnFormSubmit" class="btn btn-success" value="Confirm" />
                </div>
            </div>
        </div>
    </div>
}



@section Scripts {

    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script type="text/javascript">

        function getInvoiceNo() {
            var stockInfoId = $('#ddlStockInfoId').val();
            var orderMasterId = $('#orderMasterId').val();
            var companyId = $('#OrderDeliverCustomModel_CompanyId').val();

            $.ajax({
                url: '/OrderDeliver/GetInvoiceNo?stockInfoId=' + stockInfoId + "",
                type: "GET",
                async: true,
                processData: false,
                cache: false,
                success: function (data) {
                    $('#txtInvoiceNo').val(data);
                    $.ajax({
                        url: '/OrderDeliver/GetOrderItems?orderMasterId=' + orderMasterId + '&stockInfoId=' + stockInfoId + '&companyId=' + companyId + '',
                        type: "GET",
                        async: true,
                        processData: false,
                        cache: false,
                        success: function (data) {
                            $('#deliverItems').html(data);
                        },
                        error: function (xhr) {
                            alert('error');
                        }
                    });

                },
                error: function (xhr) {
                    alert('error');
                }
            });
        }

        function getProductDetails(id) {
            var ddlId = 'ddlEngine_' + id;
            var chassisId = 'chassisNo_' + id;
            var engineNo = $('#' + ddlId + ' :selected').text();
            $.ajax({
                url: '/OrderDeliver/GetProductDetails?engineNo=' + engineNo + '',
                type: "GET",
                async: true,
                processData: false,
                cache: false,
                success: function (data) {
                    //console.log(data);

                    $('#' + chassisId).val(data.ChassissNO);
                    $('#betteryNo_' + id).val(data.BetteryNo);
                    $('#tyreLh_' + id).val(data.RearTyreLH);
                    $('#tyreRh_' + id).val(data.RearTyreRH);
                },
                error: function (xhr) {
                    alert('error');
                }
            });

        }

        $('#btnSubmit').click(function () {
            var i;
            var count = $('#count').val();
            for (i = 0; i <= count; i++) {
                var deleverQty = $('#deleverQty_' + i).val();
                var availableQty = $('#availableQty_' + i).val();
                if (deleverQty > availableQty) {
                    alert("Unsufficiant Stock");
                    return false;
                }
            }
            var form = $('#idForm');
            // var url = form.attr('action');
            var url = "/OrderDeliver/CreateOrderDeliverPreview";
            $.ajax({
                type: "POST",
                url: url,
                data: form.serialize(),
                success: function (resp) {
               
                    $(".modal-body").html(resp);
                    $("#exampleModalLong").modal({
                        show: true,
                        backdrop: 'static',
                        keyboard: false

                    });
                }
            });

        });
                //$('#btnSubmit').click(function () {
                //    var $form = $('#idForm');
                //    if ($form.valid()) {
                //        var url = "/OrderDeliver/CreateOrderDeliverPreview";
                //        $.ajax({
                //            type: "POST",
                //            url: url,
                //            data: $form.serialize(),
                //            success: function (resp) {
                //                $(".modal-body").html(resp);
                //                $("#exampleModalLong").modal({
                //                    show: true,
                //                    backdrop: 'static',
                //                    keyboard: false

                //                });
                //            }
                //        });
                //    }
                //});

    </script>
}
