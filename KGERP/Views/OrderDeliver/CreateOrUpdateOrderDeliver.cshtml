@model KGERP.ViewModel.OrderDeliverViewModel
@using KGERP.Utility
@{
    /**/

    ViewBag.Title = "Create Or Update Order Deliver";
}


<style>
    .table > thead > tr > th,
    .table > tbody > tr > th,
    .table > tfoot > tr > th,
    .table > thead > tr > td,
    .table > tbody > tr > td,
    .table > tfoot > tr > td {
        padding: 2px 2px 2px 2px;
    }

    input, select, textarea {
        max-width: 100%;
    }
</style>
<section class="content-header">
    <h1>
        @if (Model.OrderDeliverId > 0)
        {
            <span>
                Order Deliver History of:
                <a href="@Url.Action("GetDeliveryChallanReport","Report",
                                        new {
                                            orderMasterId=@Model.VMOrderDeliverDetail.OrderMasterId,
                                            companyId=@Model.VMOrderDeliverDetail.CompanyFK}
                                        )" title="Challan Copy" target="_blank" class="btn btn-link">

                    @Model.VMOrderDeliverDetail.ChallanNo
                </a>
            </span>
        }
        else
        {
            <span>
                Order Deliver
            </span>
        }


    </h1>
    <ol class="breadcrumb">
        <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i>Dashboard</a></li>
        <li class="active">Purchase Order</li>
    </ol>
</section>
<section class="content">
    <div class="box">
        @if (Model.OrderDeliverId == 0)
        {

            using (Html.BeginForm("CreateOrUpdateOrderDeliver", "OrderDeliver", FormMethod.Post, new { @id = "idForm" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(x => x.OrderDeliverCustomModel.CompanyId)
                @Html.HiddenFor(model => model.OrderDeliverCustomModel.OrderMasterId)
                @Html.HiddenFor(model => model.OrderDeliverCustomModel.ProductType)
                @Html.HiddenFor(model => model.OrderDeliverCustomModel.IsDepoOrder, new { @id = "isDepoOrder" })
                <div class="box-header">
                    <div class="row">
                        <div class="col-md-6">
                            @if (Request.QueryString["productType"].Equals("F"))
                            {
                                @Html.Label(" Finish Product Delivery", new { @style = "font-size:20px" })
                            }
                            else
                            {
                                @Html.Label("Raw Material Delivery", new { @style = "font-size:20px" })
                            }


                        </div>
                        <div class="col-md-6">
                            @if (Model.OrderDeliverCustomModel.ProductType.Equals("F"))
                            {
                                <a href="@Url.Action("Index","VendorOffer", new { vendorId = Model.OrderDeliverCustomModel.CustomerId,productType=Model.OrderDeliverCustomModel.ProductType })" target="_blank" class="btn btn-success pull-right">
                                    Product Commission
                                </a>
                            }
                        </div>
                    </div>
                </div>

                <div class="box-body">
                    <hr style="border-color:#ff0000; padding:0px;margin-top: 5px;margin-bottom: 5px; border-width: 2px;" />
                    <div class="row">
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.OrderDeliverCustomModel.OrderMasterId, new { @id = "orderMasterId" })
                            @Html.HiddenFor(model => model.OrderDeliverCustomModel.CustomerId, new { @id = "customerId" })
                            <div class="row">
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.OrderDeliverCustomModel.OrderNo, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.OrderDeliverCustomModel.OrderNo, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @readonly = "readonly" } })
                                </div>
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.OrderDeliverCustomModel.OrderDate, htmlAttributes: new { @class = "control-label" })
                                    <br />
                                    @Html.EditorFor(model => model.OrderDeliverCustomModel.OrderDate, new { htmlAttributes = new { @id = "txtInvoiceDate", @class = "datepicker", @disabled = "ture", @style = "width:240px" } })
                                </div>
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.OrderDeliverCustomModel.Customer, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.OrderDeliverCustomModel.Customer, new { htmlAttributes = new { @id = "txtParty", @class = "form-control", @autocomplete = "off", @readonly = "readonly" } })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.OrderDeliverCustomModel.CustomerAddress, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.OrderDeliverCustomModel.CustomerAddress, new { htmlAttributes = new { @id = "txtAddress", @class = "form-control", @autocomplete = "off", @readonly = "readonly" } })
                                </div>
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.OrderDeliverCustomModel.CustomerContact, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.OrderDeliverCustomModel.CustomerContact, new { htmlAttributes = new { @id = "txtPhone", @class = "form-control", @autocomplete = "off", @readonly = "readonly" } })
                                </div>
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.OrderDeliverCustomModel.DeliveryDate, htmlAttributes: new { @class = "control-label" })
                                    <br />
                                    @Html.EditorFor(model => model.OrderDeliverCustomModel.DeliveryDate, new { htmlAttributes = new { @id = "txtDeliveryDate", @class = "datepicker", @autocomplete = "off", @style = "width:240px" } })
                                    @Html.ValidationMessageFor(model => model.OrderDeliverCustomModel.DeliveryDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.OrderDeliverCustomModel.ChallanNo, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.OrderDeliverCustomModel.ChallanNo, new { htmlAttributes = new { @id = "txtChallanNo", @class = "form-control", @autocomplete = "off", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.OrderDeliverCustomModel.ChallanNo, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.OrderDeliverCustomModel.InvoiceNo, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.OrderDeliverCustomModel.InvoiceNo, new { htmlAttributes = new { @id = "txtInvoiceNo", @class = "form-control", @autocomplete = "off", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.OrderDeliverCustomModel.InvoiceNo, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.OrderDeliverCustomModel.VehicleNo, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.OrderDeliverCustomModel.VehicleNo, new { htmlAttributes = new { @id = "txtVehicleNo", @class = "form-control", @autocomplete = "off", } })
                                    @Html.ValidationMessageFor(model => model.OrderDeliverCustomModel.VehicleNo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.OrderDeliverCustomModel.DriverName, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.OrderDeliverCustomModel.DriverName, new { htmlAttributes = new { @id = "txtDriverName", @class = "form-control", @autocomplete = "off", } })
                                    @Html.ValidationMessageFor(model => model.OrderDeliverCustomModel.DriverName, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.OrderDeliverCustomModel.DepoInvoiceNo, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.OrderDeliverCustomModel.DepoInvoiceNo, new { htmlAttributes = new { @id = "txtDepoInvoiceNo", @class = "form-control", @autocomplete = "off", } })
                                    @Html.ValidationMessageFor(model => model.OrderDeliverCustomModel.DepoInvoiceNo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <br />
                        <table class="table">
                            <tr style="background-color:#4CAF50;color:#FFFFFF">
                                <th>
                                    Product Name
                                </th>
                                <th>
                                    Unit
                                </th>
                                <th>
                                    Order Qty
                                </th>
                                <th>
                                    Unit Price
                                </th>
                                <th>
                                    Due Qty
                                </th>
                                <th>
                                    Store Available Qty
                                </th>
                                @if (Model.OrderDeliverCustomModel.CompanyId == (int)CompanyNameEnum.KrishibidFeedLimited)
                                {
                                    <th>
                                        Base
                                    </th>
                                    <th>
                                        Carrying
                                    </th>
                                    <th>
                                        Cash
                                    </th>
                                    <th>
                                        Special Discount
                                    </th>
                                    <th>
                                        Addition Price
                                    </th>
                                }

                                <th>
                                    Ready to Deliver
                                </th>
                                <th>
                                    Remaining Qty
                                </th>

                            </tr>
                            @for (int i = 0; i < Model.DeliverItems.Count(); i++)
                            {
                                <tr>
                                    <td>
                                        @Html.Hidden("deliverItems.Index", (@i))
                                        @Html.Hidden("deliverItems[" + i + "].OrderDetailId", Model.DeliverItems[i].OrderDetailId)
                                        @Html.Hidden("deliverItems[" + i + "].ProductId", Model.DeliverItems[i].ProductId)
                                        @Html.Hidden("deliverItems[" + i + "].UnitPrice", Model.DeliverItems[i].UnitPrice)
                                        @Html.Hidden("deliverItems[" + i + "].TPPrice", Model.DeliverItems[i].TPPrice)

                                        @Html.Hidden("deliverItems[" + i + "].AdditionPrice", Model.DeliverItems[i].AdditionPrice)
                                        @Html.DisplayFor(model => Model.DeliverItems[i].ProductName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(model => Model.DeliverItems[i].OrderUnit)
                                    </td>
                                    <td>
                                        @Html.TextBox("deliverItems[" + i + "].OrderQty", Model.DeliverItems[i].OrderQty, new { @readonly = "readonly", @class = "", @style = "width:70px;border: 1px solid #999;background-color:#EEEEEE;text-align:right" })
                                    </td>
                                    <td>
                                        @Html.TextBox("deliverItems[" + i + "].UnitPrice", Model.DeliverItems[i].UnitPrice, new { @readonly = "readonly", @class = "", @style = "width:70px;border: 1px solid #999;background-color:#EEEEEE;text-align:right" })
                                    </td>
                                    <td>
                                        @Html.TextBox("deliverItems[" + i + "].DueQty", Model.DeliverItems[i].DueQty, new { @readonly = "readonly", @class = "", @style = "width:70px;border: 1px solid #999;background-color:#EEEEEE;text-align:right" })
                                    </td>
                                    <td>
                                        @Html.TextBox("deliverItems[" + i + "].StoreAvailableQty", Model.DeliverItems[i].StoreAvailableQty, new { @readonly = "readonly", @class = "", @style = "border: 1px solid #999;background-color:#EEEEEE;text-align:right;width:120px;font-weight:bold;color:" + (Model.DeliverItems[i].StoreAvailableQty <= 0 ? "red" : "green") })
                                    </td>
                                    @if (Model.OrderDeliverCustomModel.CompanyId == (int)CompanyNameEnum.KrishibidFeedLimited)
                                    {
                                        <td>
                                            @Html.TextBox("deliverItems[" + i + "].EBaseCommission", Model.DeliverItems[i].EBaseCommission, new { @readonly = "readonly", @type = "textbox", @class = "", @style = "width:40px;border: 1px solid #999;background-color:#EEEEEE;text-align:right" })
                                        </td>
                                        <td>
                                            @Html.TextBox("deliverItems[" + i + "].ECarryingCommission", Model.DeliverItems[i].ECarryingCommission, new { @readonly = "readonly", @type = "textbox", @class = "", @style = "width:58px;border: 1px solid #999;background-color:#EEEEEE;text-align:right" })
                                        </td>
                                        <td>
                                            @Html.TextBox("deliverItems[" + i + "].ECashCommission", Model.DeliverItems[i].ECashCommission, new { @readonly = "readonly", @type = "textbox", @class = "", @style = "width:40px;border: 1px solid #999;background-color:#EEEEEE;text-align:right" })
                                        </td>
                                        <td>
                                            @Html.TextBox("deliverItems[" + i + "].SpecialDiscount", Model.DeliverItems[i].SpecialDiscount, new { @readonly = "readonly", @type = "textbox", @class = "", @style = "width:100px;float:right;border: 1px solid #999;background-color:#EEEEEE;text-align:right" })
                                        </td>
                                        <td>
                                            @Html.TextBox("deliverItems[" + i + "].AdditionPrice", Model.DeliverItems[i].AdditionPrice, new { @readonly = "readonly", @type = "textbox", @class = "", @style = "width:95px;float:right;border: 1px solid #999;background-color:#EEEEEE;text-align:right" })
                                        </td>
                                    }
                                    <td>
                                        @Html.TextBox("deliverItems[" + i + "].ReadyToDeliver", Model.DeliverItems[i].ReadyToDeliver, new { @onkeyup = "changeRemainingQty(" + i + ")", @type = "textbox", @autocomplete = "off", @class = "readyToDeliver", @style = "width:110px;font-weight:bold;color:green;border: 1px solid #999;text-align:right" })
                                    </td>
                                    <td>
                                        @Html.TextBox("deliverItems[" + i + "].OrderRemainingQty", Model.DeliverItems[i].OrderRemainingQty, new { @readonly = "readonly", @class = "", @style = "width:100px;font-weight:bold;color:red;border: 1px solid #999;background-color:#EEEEEE;text-align:right" })
                                    </td>
                                </tr>

                            }

                            <tr>
                                <td colspan="13">
                                    <a id="btnSubmit" class="btn btn-success" data-toggle="modal" style="float:right; margin-left:2px">
                                        Save
                                    </a>

                                    <a href="@Url.Action("Index","OrderDeliver",new {companyId= Model.OrderDeliverCustomModel.CompanyId,productType=Model.OrderDeliverCustomModel.ProductType})" class="btn btn-danger" style="float:right">
                                        Close <i class="fa fa-close" aria-hidden="true"></i>
                                    </a>
                                    &nbsp;
                                </td>
                            </tr>

                        </table>
                    </div>


                    <!-- Modal -->
                    <div class="modal fade" id="exampleModalLong" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true" data-keyboard="false">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <b class="modal-title" id="exampleModalLongTitle" style="color:blue">INVOICE/ BILL</b>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body">
                                    ...
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                                    <input type="submit" formnovalidate="formnovalidate" id="btnFormSubmit" class="btn btn-success" value="Confirm" />
                                </div>
                            </div>
                        </div>
                    </div>
                    @*<div class="row">
                            <div class="col-md-12" id="deliverItems"></div>
                        </div>*@
                </div>


            }

        }
        else
        {


            <div class="col-md-1"> </div>
            <div class="col-md-10">
                <table class="table table-striped">
                    <tbody>
                        <tr>
                            <td width="15%"><b>Challan No</b></td>
                            <td width="1%">:</td>
                            <th width="34%">@Model.VMOrderDeliverDetail.ChallanNo</th>

                            <td width="15%"><b>Delivery Date</b></td>
                            <td width="1%">:</td>
                            <td width="34%">@Model.VMOrderDeliverDetail.DeliveryDate.Value.ToString("dd-MM-yyyy")</td>
                        </tr>
                        <tr>
                            <th>
                                Invoice No
                            </th>
                            <th>:</th>
                            <td>
                                <label class="col-form-label">@Model.VMOrderDeliverDetail.OrderNo</label>
                            </td>
                            <th> Date</th>
                            <th>:</th>
                            <td>@Model.VMOrderDeliverDetail.OrderDate.ToShortDateString()</td>
                        </tr>
                        <tr>
                            <th>Zone</th>
                            <th>:</th>
                            <td>@Model.VMOrderDeliverDetail.ZoneName</td>

                            <th>Incharge</th>
                            <th>:</th>
                            <td>@Model.VMOrderDeliverDetail.ZoneIncharge</td>
                        </tr>
                        <tr>
                            <th>Customer</th>
                            <th>:</th>
                            <td>@Model.VMOrderDeliverDetail.CustomerName</td>
                            <th>Phone</th>
                            <th>:</th>
                            <td>@Model.VMOrderDeliverDetail.CustomerPhone</td>
                        </tr>
                        <tr>
                            <th>Email</th>
                            <th>:</th>
                            <td>@Model.VMOrderDeliverDetail.CustomerEmail</td>
                            <th>Address</th>
                            <th>:</th>
                            <td>@Model.VMOrderDeliverDetail.CustomerAddress</td>
                        </tr>
                        <tr>
                            <th>Contact Person</th>
                            <th>:</th>
                            <td>@Model.VMOrderDeliverDetail.ContactPerson</td>
                            <th>Created By</th>
                            <th>:</th>
                            <td>@Model.VMOrderDeliverDetail.CreatedBy</td>
                        </tr>
                        <tr>
                            <th>Driver Name</th>
                            <th>:</th>
                            <td>@Model.VMOrderDeliverDetail.DriverName</td>
                            <th>Vehicle No</th>
                            <th>:</th>
                            <td>@Model.VMOrderDeliverDetail.VehicleNo</td>
                        </tr>
                    </tbody>


                </table>
            </div>



            <div class="box-header" style="clear:both">
                <h4><b>Item Details:</b> </h4>
            </div>
            <div class="table-responsive col-md-12 text-nowrap">
                <table id="KgErpDataTable" class="table table-striped">
                    <thead>
                        <tr>
                            <th>SL</th>
                            <th class="center">Product Name </th>
                            <th class="center">Order Quantity</th>
                            <th class="center">Delivered Quantity</th>
                            <th class="center">Total Delivered</th>
                        </tr>
                    </thead>
                    @{
                        int sl = 0;
                    }
                    <tbody>
                        @foreach (var item in Model.VMOrderDeliverDetail.DataListDetail)
                        {
                            <tr>
                                <td>@(++sl)</td>
                                <td>@item.ProductSubCategory @item.ProductName</td>
                                <td>@item.OrderQty @item.UnitName</td>
                                <th>@item.DeliveredQty @item.UnitName</th>
                                <th>@item.TotalDelivered  @item.UnitName</th>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>


            <div class="box-footer">
                @if (Model.OrderDeliverId > 0)
                {
                    <div class="row">

                        <div class="col-md-2">
                            <a style="width:100%" href="@Url.Action("GetDeliveryInvoiceReport","Report",
                                        new {
                                            OrderDeliverId=@Model.VMOrderDeliverDetail.OrderDeliverId,
                                            companyId=@Model.VMOrderDeliverDetail.CompanyFK}
                                        )" title="Challan Copy" target="_blank" class="btn btn-danger">
                                <i class="fa fa-print" aria-hidden="true"></i>&nbsp;Bill Copy

                            </a>
                        </div>
                        <div class="col-md-2">
                            <a style="width:100%" href="@Url.Action("GetDeliveryChallanReport","Report",
                                        new {
                                            OrderMasterId=@Model.VMOrderDeliverDetail.OrderMasterId,
                                            companyId=@Model.VMOrderDeliverDetail.CompanyFK}
                                        )" title="Challan Copy" target="_blank" class="btn btn-warning">
                                <i class="fa fa-print" aria-hidden="true"></i>&nbsp; Challan Report

                            </a>
                        </div>
                        <div class="col-md-2">
                            @if (Model.VMOrderDeliverDetail.VoucherId > 0)
                            {
                                <a style="width:100%" href="@Url.Action("GetVoucherReport","Report",
                                        new {

                                            companyId=@Model.VMOrderDeliverDetail.CompanyFK,
                                        voucherId=@Model.VMOrderDeliverDetail.VoucherId}
                                        )" title="Challan Copy" target="_blank" class="btn btn-info">
                                    <i class="fa fa-print" aria-hidden="true"></i>&nbsp; Voucher Report

                                </a>

                            }
                            else
                            {
                                <a class="btn btn-info" href="#">Need To Submit</a>
                            }

                        </div>
                        <div class="col-md-6">
                            @if (!Model.VMOrderDeliverDetail.IsSubmitted)
                            {
                                <a onclick="makeOrderDeliverSubmitable(@Model.VMOrderDeliverDetail.OrderMasterId);" class="btn btn-success btn-block" style="width:100%" data-toggle="modal" data-target="#submitProdReferenceModal" title="Submit" data-placement="top"><i class="fa fa-fingerprint" aria-hidden="true"></i>Submit</a>

                            }
                            else
                            {
                                <button class="btn btn-success btn-block" style="width:100%" disabled="disabled">Submitted</button>

                            }

                        </div>
                    </div>
                }

            </div>

        }
    </div>
</section>



@if (Model.OrderDeliverId > 0)
{

    using (Html.BeginForm("FeedOrderDeliverSubmit", "WareHouse", FormMethod.Post, new { id = "submitFeedReceivingSlaveFormId", @class = "formValidator" }))
    {
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="modal fade" id="submitProdReferenceModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close pull-right" data-dismiss="modal" aria-label="Close">
                            &times;
                        </button>
                        <h5 class="modal-title"><b>Submit</b></h5>
                    </div>
                    <div class="modal-body">

                        @Html.HiddenFor(model => model.VMOrderDeliverDetail.CompanyFK, new { id = "submitCompanyFK" })
                        @Html.HiddenFor(model => model.VMOrderDeliverDetail.OrderDeliverId, new { id = "submitOrderDeliverId" })
                        @Html.HiddenFor(model => model.VMOrderDeliverDetail.OrderMasterId, new { id = "submitOrderMasterId" })
                        @Html.HiddenFor(model => model.VMOrderDeliverDetail.VendorId, new { id = "submitVendorId" })
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div style="text-align:center">
                            <h3>Are you sure to Submit this Delivery Challan?</h3>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <div class="col-md-3">
                            <button type="button" class="btn btn-warning fa fa-close" data-dismiss="modal">&nbsp;NO</button>
                        </div>
                        <div class="col-md-9">
                            <button type="submit" id="btnsave" style="width:100%" class="btn btn-primary fa fa-remove">&nbsp; Submit</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

}


@section Scripts {

    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script type="text/javascript">

        function getStockInformation() {
            var stockInfoId = $('#ddlStockInfoId').val();
            var orderMasterId = $('#orderMasterId').val();
            var companyId = $('#OrderDeliverCustomModel_CompanyId').val();
            $.ajax({
                url: '/OrderDeliver/GetOrderItems?orderMasterId=' + orderMasterId + '&stockInfoId=' + stockInfoId + '&companyId=' + companyId + '',
                type: "GET",
                async: true,
                processData: false,
                cache: false,
                success: function (data) {
                    $('#deliverItems').html(data);
                },
                error: function (xhr) {
                    alert('error');
                }
            });
        }

        $('#btnSubmit').click(function () {
            debugger;
            var isDepoOrder = $("#isDepoOrder").val();
            var depoInvoiceNo = $("#txtDepoInvoiceNo").val();
            if (isDepoOrder == "True" && depoInvoiceNo == "") {
                alert("Please enter Depo Invoice No");
                return !isDepoOrder;
            }

            var $form = $('#idForm');
            if ($form.valid()) {
                var url = "/OrderDeliver/CreateOrderDeliverPreview";
                $.ajax({
                    type: "POST",
                    url: url,
                    data: $form.serialize(),
                    success: function (resp) {
                       
                        $(".modal-body").html(resp);
                        $("#exampleModalLong").modal({
                            show: true,
                            backdrop: 'static',
                            keyboard: false

                        });
                    }
                });
            }
        });
        $(function () {
            debugger;
            $('.readyToDeliver').map(function (i, el) {
                var storeAvailableQty = $('#deliverItems_' + i + '__StoreAvailableQty').val();
                var remainingQty = $('#deliverItems_' + i + '__OrderRemainingQty').val();
                var readyToDeliver = $('#deliverItems_' + i + '__ReadyToDeliver').val();
                
                if (parseFloat(storeAvailableQty) > parseFloat(remainingQty) && parseFloat(readyToDeliver) == 0) {
                    $('#deliverItems_' + i + '__ReadyToDeliver').attr("required", "true");
                    $('#deliverItems_' + i + '__ReadyToDeliver').attr("min", 0.01);
                }

            })
        })
        function changeRemainingQty(id) {
            var idReadytoDeliver = 'deliverItems_' + id + '__ReadyToDeliver';
            var idStoreAvailableQty = 'deliverItems_' + id + '__StoreAvailableQty';
            var idQty = 'deliverItems_' + id + '__OrderQty';
            var idOrderRemainingQty = 'deliverItems_' + id + '__OrderRemainingQty';
            var idDeliveredQty = 'deliverItems_' + id + '__DeliveredQty';
            var idDueQty = 'deliverItems_' + id + '__DueQty';

            var readyToDeliver = $('#' + idReadytoDeliver).val();


            var storeAvailableQty = $('#' + idStoreAvailableQty).val();

            var initialStoreAvailableQty = storeAvailableQty;
            var orderQty = $('#' + idQty).val();
            var deliveredQty = $('#' + idDeliveredQty).val();
            var dueQty = $('#' + idDueQty).val();


            $('#' + idOrderRemainingQty).val(parseFloat(dueQty) - parseFloat(readyToDeliver));
            //Checking Ready to deliver is NaN
            if (isNaN(readyToDeliver)) {
                var remainingQty = parseFloat(parseFloat(orderQty) - parseFloat(deliveredQty));
                $('#' + idReadytoDeliver).val(0);
                $('#' + idOrderRemainingQty).val(remainingQty);
            }
            //Ready to deliver is grater than Due
            ///****commented as per IT sir decision***/
            if (parseFloat(readyToDeliver) > parseFloat(dueQty)) {
                alert("Order Limit Exceeded !");
                $('#' + idReadytoDeliver).val(0);
                readyToDeliver = $('#' + idReadytoDeliver).val();
                $('#' + idOrderRemainingQty).val(parseFloat(dueQty));
            }

            if (parseFloat(readyToDeliver) > parseFloat(orderQty)) {
                alert("Order Limit Exceeded !");
                $('#' + idReadytoDeliver).val(0);
                readyToDeliver = $('#' + idReadytoDeliver).val();
                $('#' + idOrderRemainingQty).val(parseFloat(orderQty) - parseFloat(readyToDeliver));

            }

            if (parseFloat(orderQty) - parseFloat(deliveredQty) == 0) {
                alert("Already Delivered !");
                $('#' + idOrderRemainingQty).val(0);
                $('#' + idReadytoDeliver).val(0);
            }

            //If Stock quantity is not available
            ///****commented as per IT sir decision***/
            //if (parseFloat(readyToDeliver) > parseFloat(storeAvailableQty)) {
            //    alert("Stock not Available !");
            //    $('#' + idReadytoDeliver).val(0);
            //    readyToDeliver = $('#' + idReadytoDeliver).val();
            //    $('#' + idOrderRemainingQty).val(parseFloat(dueQty));
            //}

            //If Stock quantity is not available
            ///****commented as per IT sir decision***/
            //if (parseFloat(readyToDeliver) > parseFloat(storeAvailableQty)) {
            //    alert("Stock not Available !");
            //    $('#' + idReadytoDeliver).val(0);
            //    readyToDeliver = $('#' + idReadytoDeliver).val();
            //}
        }

    </script>
}
