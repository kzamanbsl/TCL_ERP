@model KGERP.Service.Implementation.Configuration.VMPackagingPurchaseRequisition
@using KG.Core.Services

<div class="row">
    <div class="col-lg-12">
        @{
            int styleScheduleCount = Model.DataListPro.Count();

            if (styleScheduleCount > 0)
            {
                int sl = 1;
                <div class="table-responsive">

                    <table class="table table-bordered text-nowrap">

                        <thead>
                            <tr class="bg-success">
                                <th>SLNo</th>
                                <th>ProductName</th>
                                <th>Required Qty</th>
                                <th>Stock Qty</th>
                                <th>Issue Qty</th>
                                <th>RemainingQuantity</th>
                                <th>PriviousIssueQty</th>
                               
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.DataListPro.Count(); i++)
                            {
                            <tr>
                                <th>

                                    @Html.HiddenFor(model => model.DataListPro[i].ProductId)
                                    @Html.HiddenFor(model => model.DataListPro[i].RequisitionId)

                                    @(i + 1)
                                </th>

                                <td>
                                    @Html.DisplayFor(model => model.DataListPro[i].ProductName)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => model.DataListPro[i].Qty)
                                </td>
                                <td>
                                    <label>500</label>
                                </td>
                                <td>
                                    @Html.TextBoxFor(model => model.DataListPro[i].IssueQty, new { id = "txtIssueQty", Value = "", @class = "form-control" })

                                </td>
                                <td>
                                    @Html.DisplayFor(model => model.DataListPro[i].RemainingQuantity)
                                </td>
                                <td>
                                    @Html.DisplayFor(model => model.DataListPro[i].PriviousIssueQty)
                                </td>
                            </tr>
                            }
                            
                        </tbody>
                    </table>
                </div>
                <div class="row">
                    <div class="col-md-8">

                    </div>


                </div>

            }
            else
            {
                <div class="col-md-12">
                    <div class="box box-success box-solid">

                        <!-- /.box-header -->
                        <div class="box-body">

                            <div class="form-group" style="text-align:center;">
                                <h3>
                                    There are no Item yet.
                                </h3>
                            </div>



                        </div>
                        <!-- /.box-body -->
                    </div>
                    <!-- /.box -->
                </div>
            }
        }

    </div>
</div>

<script>
    $(document).ready(function () {


        $("#txtRequiredQuantity,#txtPurchasingPrice").keyup(function () {
          
            var txtRequiredQuantity = $("#txtRequiredQuantity").val();
            var txtPurchasingPrice = $("#txtPurchasingPrice").val();
            $("#txtTotalPrice").val(txtRequiredQuantity * txtPurchasingPrice);


        });


    });


</script>
