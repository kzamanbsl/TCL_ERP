@model KGERP.Service.Implementation.Procurement.VMPurchaseOrderSlave
@using KGERP.Utility;


@{
    ViewData["Title"] = "Purchase Order";
    Layout = "~/Views/Shared/_Layout.cshtml";

    int sl = 0;
    decimal TotalPrice = 0;
}

<style type="text/css">

    input, select, textarea {
        max-width: 100%;
    }
</style>

<section class="content-header">
    <h1>
        @if (Model.PurchaseOrderId > 0)
        {
            <span>
                Purchase Order History of:  <a target="_blank" href="~/Report/GCCLPurchseOrderReport?purchaseOrderId=@Model.PurchaseOrderId&companyId=@Model.CompanyFK&reportName=GCCLPurchaseOrderReports">@Model.CID</a>

            </span>
        }
        else
        {
            <span>
                Purchase Order
            </span>
        }


    </h1>
    <ol class="breadcrumb">
        <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i>Dashboard</a></li>
        <li class="active">Purchase Order</li>
    </ol>
</section>
@using (Html.BeginForm("GCCLProcurementPurchaseOrderSlave", "Procurement", FormMethod.Post, new { id = "procurementPurchaseOrderSlaveFormId", @class = "formValidator" }))
{
    <section class="content">
        <div class="row">
            <div class="box">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.PurchaseOrderId, new { id = "hidPurchaseOrderId" })
                @Html.HiddenFor(model => model.PurchaseOrderDetailId, new { id = "hidPurchaseOrderDetailId" })

                @Html.HiddenFor(model => model.ActionId, new { id = "ActionId" })
                @Html.HiddenFor(model => model.CompanyFK, new { id = "CompanyFK" })

                <div class="box-danger">

                    <!-- /.box-header -->
                    <div class="box-body">
                        @if (Model.PurchaseOrderId > 0)
                        {

                            <table class="table">
                                <tr>
                                    <th style="width:12%">
                                        PO No
                                    </th>
                                    <th style="width:1%">:</th>
                                    <td style="width:20%">
                                        <label class="col-form-label">@Model.CID</label>
                                    </td>

                                    <th style="width:12%"> PO Date</th>
                                    <th style="width:1%">:</th>
                                    <td style="width:20%">@Model.OrderDate</td>

                                    <th style="width:12%">Paymeny Method</th>
                                    <th style="width:2%">:</th>
                                    <td style="width:20%">@Model.POPaymentMethodName</td>
                                </tr>
                                <tr>
                                    <th>
                                        Purchaser
                                    </th>
                                    <th>:</th>
                                    <td>@Model.EmployeeName</td>
                                    <th>
                                        Designation
                                    </th>
                                    <th>:</th>
                                    <td>@Model.EmployeeDesignation</td>
                                    <th>
                                        Mobile
                                    </th>
                                    <th>:</th>
                                    <td>@Model.EmployeeMobile</td>

                                </tr>

                                <tr>
                                    <th>Supplier</th>
                                    <th>:</th>
                                    <td>@Model.SupplierName</td>
                                    <th>Code</th>
                                    <th>:</th>
                                    <td>@Model.Code</td>
                                    <th>Propietor</th>
                                    <th>:</th>
                                    <td>@Model.SupplierPropietor</td>
                                </tr>

                                <tr>
                                    <th>Address</th>
                                    <th>:</th>
                                    <td>@Model.SupplierAddress</td>
                                    <th>Created By</th>
                                    <th>:</th>
                                    <td>@Model.CreatedBy</td>


                                </tr>

                            </table>

                        }
                        <div class="box-body">

                            @if (Model.PurchaseOrderId == 0)
                            {
                                <div class="row">
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>PO Date</label>
                                            <input name="OrderDate" asp-for="OrderDate" type="text" value="@DateTime.Today.ToString("yyyy-MM-dd")" required="required" class="datePicker form-control" id="txtOrderDate" placeholder="Date" autocomplete="off">
                                            @Html.ValidationMessageFor(model => model.OrderDate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>Payment Method</label>
                                            @Html.DropDownListFor(model => model.SupplierPaymentMethodEnumFK, Model.POPaymentMethodList as SelectList, "==Select Payment Method==", new { id = "ddlSupplierPaymentMethodEnumFK", @class = "form-control ddlReset", style = "width:100%", required = "required" })
                                            @Html.ValidationMessageFor(model => model.SupplierPaymentMethodEnumFK, "", new { @class = "text-danger" })
                                        </div>
                                    </div>


                                    <div class="col-md-6">
                                        <div class="form-group" style="padding:0px">
                                            <label>Supplier</label>
                                            @Html.EditorFor(model => model.SupplierName, new { htmlAttributes = new { @autocomplete = "on", @class = "form-control", @name = "Supplier Name", @id = "txtSupplierName" } })

                                            @Html.HiddenFor(model => model.Common_SupplierFK, new { id = "ddlCommon_SupplierFK" })
                                            @Html.ValidationMessageFor(model => model.Common_SupplierFK, "", new { @class = "text-danger" })
                                        </div>
                                    </div>


                                </div>

                                <div class="row">
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>Delivery Date</label>
                                            <input name="DeliveryDate" asp-for="DeliveryDate" type="text" required="required" class="datePicker form-control" id="txtDeliveryDate" placeholder="Delivery Date" autocomplete="off">
                                            @Html.ValidationMessageFor(model => model.DeliveryDate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label>Delivery Address</label>
                                            @Html.TextAreaFor(model => model.DeliveryAddress, new { id = "txtDeliveryAddress", @class = "form-control", placeholder = "Delivery Address", rows = 1 })
                                            @Html.ValidationMessageFor(model => model.DeliveryAddress, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label for="TermsAndCondition" class="col-form-label">Purchaser:</label>
                                            @Html.DropDownListFor(model => model.EmployeeId, Model.EmployeeList as SelectList, "==Purchaser from Employee==", new { id = "ddlEmployeeId", @class = "searchingDropdown form-control ddlReset", style = "width:100%" })
                                            @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <!-- /.box-body -->
                                </div>

                                <div class="row">
                                    <div class="col-md-5">
                                        <div class="form-group">
                                            <label for="txtDescription" class="col-form-label">Description:</label>
                                            @Html.TextAreaFor(model => model.Description, new { id = "txtDescription", placeholder = "Description", @class = "form-control", rows = 2 })
                                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-2">
                                        <div class="form-group">
                                            <label for="TermsAndCondition" class="col-form-label">T&C Type:</label>
                                            @Html.DropDownListFor(model => model.TermsAndConditionFk, Model.TermNCondition as SelectList, "==Terms & Condition==", new { id = "TermsAndConditionid", @class = "form-control ddlReset", style = "width:100%" })
                                            @Html.ValidationMessageFor(model => model.TermsAndConditionFk, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-5">
                                        <div class="form-group">
                                            <label for="txtDescription" class="col-form-label">Terms & Condition:</label>
                                            @Html.TextAreaFor(model => model.TermsAndCondition, new { id = "txtTermsAndCondition", @class = "form-control", style = "width:100%", rows = 2, placeholder = "Terms & Conditions" })
                                            @Html.ValidationMessageFor(model => model.TermsAndCondition, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <!-- /.box-body -->
                                </div>
                                <div id="piReletedDivId" style="display:none;">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label>PI No</label>
                                                @Html.EditorFor(model => model.PINo, new { htmlAttributes = new { id = "txtDeliveryAddress", @class = "form-control" } })
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label for="message-text" class="col-form-label">Shipped By:</label>
                                                @Html.DropDownListFor(model => model.ShippedBy, Model.ShippedByList as SelectList, "---Select Shipped By---", new { id = "ddlShippedBy", @class = "form-control" })
                                            </div>
                                        </div>


                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label>Port of Loading</label>
                                                @Html.EditorFor(model => model.PortOfLoading, new { htmlAttributes = new { id = "txtPortOfLoading", @class = "form-control" } })
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label>Port of Discharge</label>
                                                @Html.EditorFor(model => model.PortOfDischarge, new { htmlAttributes = new { id = "txtPortOfDischarge", @class = "form-control" } })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label for="message-text" class="col-form-label">Country of Origin:</label>
                                                @Html.DropDownListFor(model => model.CountryId, Model.CountryList as SelectList, "-- Country of Origun--", new { id = "ddlCountryId", @class = "searchingDropdown form-control", @style = "width:100%" })
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label for="message-text" class="col-form-label">Final Destination:</label>
                                                @Html.DropDownListFor(model => model.FinalDestinationCountryFk, Model.CountryList as SelectList, "--Final Destination--", new { id = "ddlFinalDestinationCountryFk", @class = "searchingDropdown form-control", @style = "width:100%" })
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label>Freight Charge</label>
                                                @Html.EditorFor(model => model.FreightCharge, new { htmlAttributes = new { id = "txtFreightCharge", @class = "form-control" } })
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label>Other Charge</label>
                                                @Html.EditorFor(model => model.OtherCharge, new { htmlAttributes = new { id = "txtOtherCharge", @class = "form-control" } })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label class="col-form-label">LC No</label>
                                                @Html.DropDownListFor(model => model.LCHeadGLId, Model.LCList as SelectList, "==Select L/C==", new { id = "ddlLCNo", @class = "searchingDropdown form-control", style = "width:100%" })
                                                @Html.ValidationMessageFor(model => model.LCHeadGLId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label>L/C Value</label>
                                                @Html.EditorFor(model => model.LCValue, new { htmlAttributes = new { id = "txtLCValue", @class = "form-control" } })
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label>Insurance No</label>
                                                @Html.EditorFor(model => model.InsuranceNo, new { htmlAttributes = new { id = "txtInsuranceNo", @class = "form-control" } })
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label>Premium Value</label>
                                                @Html.EditorFor(model => model.PremiumValue, new { htmlAttributes = new { id = "txtPremiumValue", @class = "form-control" } })
                                            </div>
                                        </div>
                                    </div>
                                </div>


                            }
                            <div class="row">
                                <div class="col-md-5">
                                    <div class="form-group" style="padding:0px">
                                        <label for="message-text" class="col-form-label">Raw Item:</label>

                                        @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @autocomplete = "on", @class = "form-control", @name = "Product Name", @id = "txtProductName" } })

                                        @Html.HiddenFor(model => model.Common_ProductFK, new { id = "ddlRProductFK" })
                                        @Html.ValidationMessageFor(model => model.Common_ProductFK, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Purchasing Qty</label>
                                        <div class="input-group">
                                            @Html.TextBoxFor(model => model.PurchaseQuantity, new { id = "txtPurchaseQuantity", @class = "form-control", @style = "width:100%;border:1px black solid", placeholder = "Purchase Quantity", required = "Required" })
                                            @Html.ValidationMessageFor(model => model.PurchaseQuantity, "", new { @class = "text-danger" })

                                            <div class="input-group-addon">
                                                <span class="txtUnitName"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Unit Price</label>
                                        @Html.TextBoxFor(model => model.PurchasingPrice, new { id = "txtPurchasingPrice", type = "number", step = "0.01", @class = "form-control", @style = "width:100%;border:1px black solid", placeholder = "Purchasing Price", required = "Required" })
                                        @Html.ValidationMessageFor(model => model.PurchasingPrice, "", new { @class = "text-danger" })

                                    </div>
                                </div>

                            </div>
                        </div>
                        <div class="box-footer">
                            <div class="row">
                                <div class="col-md-8">

                                </div>
                                <div class="col-lg-4 col-md-4">
                                    <button type="submit" id="poCreateBtn" class="btn btn-primary btn-block">
                                        <i class='fa fa-plus'></i>
                                        @if (Model.PurchaseOrderId > 0)
                                        {
                                            <span>Add Item In PO</span>
                                        }
                                        else
                                        {
                                            <span>Create PO</span>
                                        }
                                    </button>
                                </div>
                            </div>
                        </div>

                        <!--Body Will by Start Here-->
                        @{
                            if (Model.PurchaseOrderId > 0)
                            {

                                @Html.HiddenFor(model => model.ID, new { id = "hidSlaveID" })
                                <div class="table-responsive col-md-12  text-nowrap">
                                    <table id="KgErpDataTable" class="table table-striped">
                                        <thead>
                                            <tr>
                                                <th style="padding:5px;text-align:center;">SL</th>
                                                <th style="padding:5px;text-align:left;">Item</th>
                                                <th style="padding:5px;text-align:center;">Quantity To Purchase</th>
                                                <th style="padding:5px;text-align:center;">Unit Purchase Price</th>
                                                <th style="padding:5px;text-align:right;">Total Price</th>
                                                @if (Model.Status == (int)POStatusEnum.Draft)
                                                {
                                                    <th style="padding:5px;text-align:center;">Action</th>
                                                }
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in Model.DataListSlave)
                                            {
                                                TotalPrice += item.TotalPrice;
                                                <tr>
                                                    <td style="padding:5px">@(++sl)</td>
                                                    <td style="padding:5px;text-align:left;">@item.ProductName</td>
                                                    <td style="padding:5px;text-align:center;">@String.Format("{0:0.000}", item.PurchaseQuantity) @item.UnitName</td>
                                                    <td style="padding:5px;text-align:center;">@String.Format("{0:0.000}", item.PurchasingPrice)</td>
                                                    <td style="padding:5px;text-align:right;">@String.Format("{0:0.000}", item.TotalPrice)</td>
                                                    @{ if (Model.Status == (int)POStatusEnum.Draft)
                                                        {
                                                            <td style="padding:5px;text-align:center;">
                                                                <a id="@item.ID" onclick=" makeEditble(@item.PurchaseOrderDetailId);" class="linkPointer" title="Edit"><i class="fa fa-edit" aria-hidden="true"></i></a>

                                                                <a id="@item.ID" onclick="makeDeletale(@item.PurchaseOrderDetailId)" class="linkPointer" data-toggle="modal" data-target="#deleteProcurementPurchaseOrderSlaveModal" title="Delete" data-placement="top"><i class="glyphicon glyphicon-trash" aria-hidden="true"></i></a>
                                                            </td>
                                                        }
                                                    }
                                                </tr>
                                            }
                                        </tbody>

                                        <tfoot>
                                            <tr>
                                                <th></th>
                                                <th colspan="3">TOTAL</th>
                                                <th style="padding:5px;text-align:right;">@String.Format("{0:0.000}", TotalPrice) </th>
                                                @if (Model.Status == (int)POStatusEnum.Draft)
                                                {
                                                    <th></th>
                                                }
                                            </tr>
                                            <tr style="font-weight: bold; font-size: 14px;">

                                                <th style="border:none;"></th>

                                                <th style="border:none;"></th>
                                                <th style="border:none;"></th>
                                                <th style="text-align: left;">&nbsp;Freight Charge</th>
                                                <th style="text-align: right;padding-right:5px;">৳@Model.FreightCharge</th>
                                            </tr>
                                            <tr style="font-weight: bold; font-size: 14px;">

                                                <th style="border:none;"></th>
                                                <th style="border:none;"></th>
                                                <th style="border:none;"></th>

                                                <th style="text-align: left;">&nbsp;Other Charge</th>
                                                <th style="text-align: right;padding-right:5px;">৳@Model.OtherCharge</th>
                                            </tr>
                                            <tr style="font-weight: bold; font-size: 14px;">

                                                <th style="border:none;"></th>
                                                <th style="border:none;"></th>

                                                <th style="border:none;"></th>
                                                <th style="text-align: left;"><b>&nbsp;GRAND TOTAL</b></th>
                                                <th style="text-align: right;padding-right:5px;">৳@(TotalPrice + Model.FreightCharge + Model.OtherCharge )</th>
                                            </tr>
                                        </tfoot>
                                    </table>
                                </div>
                            }
                        }
                    </div>
                    <div class="box-footer">
                        @if (Model.PurchaseOrderId > 0)
                        {
                            <div class="row">
                                <div class="col-md-6"></div>
                                <div class="col-md-6">
                                    <a id="@Model.PurchaseOrderId" onclick="makeSubmitble(@Model.PurchaseOrderId)" class="linkPointer btn btn-success" data-toggle="modal" style="width:100%" data-target="#submitProcurementPurchaseOrderModal" data-placement="top">
                                        @if (Model.Status == (int)POStatusEnum.Submitted)
                                        {
                                            <i>Undo Submit</i>
                                        }
                                        else
                                        {
                                            <i>Submit</i>
                                        }
                                    </a>
                                </div>

                            </div>

                        }
                    </div>
                </div>
            </div>
        </div>
    </section>
}
@using (Html.BeginForm("SubmitProcurementPurchaseOrderFromSlave", "Procurement", FormMethod.Post, new { id = "SubmitProcurementPurchaseOrderFromSlaveFormId", @class = "formValidator" }))
{
    @Html.HiddenFor(model => model.PurchaseOrderDetailId, new { id = "hidSubmitProcurementPurchaseOrderSlaveId" })
    @Html.HiddenFor(model => model.CompanyFK, new { id = "submitCompanyFK" })
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="modal fade" id="submitProcurementPurchaseOrderModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b><span class="submitOrDraftText"></span> Purchase Order (<span id="submitOrDraftPOCIDText"></span>)</b></h5>
                </div>
                <div class="modal-body">

                    <div style="text-align:center">
                        <h3>Are you sure to <span class="submitOrDraftText"></span> this Purchase Order?</h3>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="col-md-3">
                        <button type="button" onclick="resetProcurementPurchaseOrderForm()" class="btn btn-warning fa fa-close" data-dismiss="modal">&nbsp;NO</button>
                    </div>
                    <div class="col-md-9">
                        <button type="submit" id="btnsave" style="width:100%" class="btn btn-primary fa fa-remove">&nbsp;<span class="submitOrDraftText"></span></button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


@using (Html.BeginForm("DeleteProcurementPurchaseOrderSlave", "Procurement", FormMethod.Post, new { id = "deleteProcurementPurchaseOrderSlaveFormId", @class = "formValidator" }))
{
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="modal fade" id="deleteProcurementPurchaseOrderSlaveModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            @Html.HiddenFor(model => model.PurchaseOrderDetailId, new { id = "hidDeleteProcurementPurchaseOrderSlaveId" })
            @Html.HiddenFor(model => model.CompanyFK, new { id = "deleteCompanyFK" })
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b>Delete PO Item</b></h5>
                </div>
                <div class="modal-body">


                    @Html.HiddenFor(model => model.ActionId, new { id = "deleteActionId" })

                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div style="text-align:center">
                        <h3>Are you sure to Delete this PO Item?</h3>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="col-md-3">
                        <button type="button" onclick="resetProcurementPurchaseRequisitionSlaveForm()" class="btn btn-warning fa fa-close" data-dismiss="modal">&nbsp;NO</button>
                    </div>
                    <div class="col-md-9">
                        <button type="submit" id="btnsave" style="width:100%" class="btn btn-primary fa fa-remove">&nbsp; Delete</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}



@section scripts {

    <script type="text/javascript">

        function makeDeletale(rowId) {
            $('#hidDeleteProcurementPurchaseOrderSlaveId').val(rowId);
            $('#deleteActionId').val(3);
        }
        function resetProcurementPurchaseRequisitionSlaveForm() {
          $('#procurementPurchaseRequisitionSlaveFormId')[0].reset();
          $('#ActionId').val(1);
        }

        $(document).ready(function () {
            $('.formValidator').bootstrapValidator();

            $("#ddlFinalDestinationCountryFk").val(19).change();
              $("#txtProductName").autocomplete({
                source: function (request, response) {
                   
                    $.ajax({
                        url:"@Url.Action("GCCLAutoCompleteRawPackingMaterialsGet", "Configuration")",
                        //data: "{ 'prefix': '" + request.term + "'}",
                        data: { companyId: "@Model.CompanyFK", prefix: request.term },
                        dataType: "json",
                        type: "get",
                        cache: true,
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            //alert(response.responseText);
                        },
                        failure: function (response) {
                            //alert(response.responseText);
                        }
                    });
                },

            select: function (e, i) {
                    $("#ddlRProductFK").val(i.item.val);

                    $.ajax({
                        type: "GET",
                        url: "@Url.Action("CommonProductByID", "Configuration")",
                        datatype: "Json",
                        data: { id: i.item.val },
                        success: function (data) {
                         
                            var items = "";
                            if (data) {

                                $('.txtUnitName').text(data.UnitName);

                            }
                        }
                    });
                    $('#txtProductName').focus();

                },
                minLength: 1,
                cache: true

            }).focus(function () {
                $(this).autocomplete("search");
            });
              $("#txtSupplierName").autocomplete({
                source: function (request, response) {

                    $.ajax({
                        url:"@Url.Action("GetAutoCompleteSupplierGet", "Procurement")",// '/AccountHeads/AutoComplete/',
                        //data: "{ 'prefix': '" + request.term + "'}",
                        data: { prefix: request.term, companyId: "@Model.CompanyFK" },
                        dataType: "json",
                        type: "get",
                        cache: true,
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                           response($.map(data, function (item) {
                               return item;
                           }))
                        },
                        error: function (response) {
                                                                        //alert(response.responseText);
                        },
                        failure: function (response) {
                                                                        //alert(response.responseText);
                        }
                    });
                },

                select: function (e, i) {
                    $("#ddlCommon_SupplierFK").val(i.item.val);

                    },
                minLength: 1,
                cache: true

            }).focus(function () {
                $(this).autocomplete("search");
            });



            $("#TermsAndConditionid").change(function () {
                  var termsAndConditionid = $('#TermsAndConditionid').val();
                $.ajax({
                       type: "GET",
                    url: "@Url.Action("GetTermNCondition", "Procurement")",
                    datatype: "Json",
                    data: { id: termsAndConditionid },
                    success: function (data) {
                        $('#txtTermsAndCondition').empty();
                        $('#txtTermsAndCondition').append(data.Value);

                    }
                });
            });



            $("#ddlSupplierPaymentMethodEnumFK").change(function () {
                var paymethod = $("#ddlSupplierPaymentMethodEnumFK").val();
                if (paymethod === "@((int)VendorsPaymentMethodEnum.LC)") {
                    $("#piReletedDivId").show();
                }
                else {
                    $("#piReletedDivId").hide();
                }

            })


        });
        function makeEditble(rowId) {

            $.ajax({

                  type: "POST",
                  url: "@Url.Action("SingleProcurementPurchaseOrderSlave", "Procurement")",
                  datatype: "Json",
                  data: { id: rowId },
                  success: function (data) {
                     
                      $('#poCreateBtn').html("<i class='fa fa-edit'></i>&nbsp;Update");
                      $("#hidPurchaseOrderId").val(data.PurchaseOrderId);
                      $('#ActionId').val(2);
                      $("#CompanyFK").val(data.CompanyFK);
                      $("#txtProductName").val(data.ProductName);
                      $("#ddlRProductFK").val(data.Common_ProductFK);
                      $("#txtPurchaseQuantity").val(data.PurchaseQuantity);
                      $('#txtPurchasingPrice').val(data.PurchasingPrice);
                      $("#hidPurchaseOrderDetailId").val(data.PurchaseOrderDetailId)
                      $('.txtUnitName').text(data.UnitName);
                      window.scrollTo({ top: 0, behavior: 'smooth' });
                  }
                 });
            }

        function makeSubmitble(rowId) {
                $.ajax({
                        type: "POST",
                        url: "@Url.Action("SingleProcurementPurchaseOrder", "Procurement")",
                        datatype: "Json",
                        data: { id: rowId },
                        success: function (data) {
                            $('#submitOrDraftPOCIDText').text(data.CID);

                            if (data.Status == 0) {
                                $('.submitOrDraftText').text("Make Submit");
                            }
                            else {
                                $('.submitOrDraftText').text("Make Draft");

                            }
                        }
                 });
            $('#hidSubmitProcurementPurchaseOrderSlaveId').val(rowId);
            

            }
    </script>
}