@model KGERP.Service.Implementation.Procurement.VmDemandItemService
@using KGERP.Utility;


@{
    ViewData["Title"] = " PRF For Feed";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int sl = 0;
    double TotalPrice = 0;
    decimal TotalDiscount = 0;
    decimal DiscountUnit = 0;

}


<style type="text/css">

    input, select, textarea {
        max-width: 100%;
    }

    .alert-primary {
        color: #004085;
        background-color: #cbf6fd;
        border-color: #b8daff;
    }

    .alert {
        position: relative;
        padding: 0.75rem 1.25rem;
        margin-bottom: 1rem;
        border: 1px solid transparent;
        border-radius: 0.25rem;
    }

    .shadow {
        /* box-shadow: 0 .5rem 0.6rem rgba(0,0,0,.10) !important;*/
    }

    .mb-2 {
        margin-bottom: 10px;
    }
</style>

<section class="content-header">
    <h1>
        @if (Model.DemandId > 0)
        {
            <span>
                Product Requisition  History of: @Model.DemandNo
                @*<a target="_blank" href="~/Procurement/ProcurementSalesOrderDetailsReport?companyId=@Model.CompanyFK&orderMasterId=@Model.OrderMasterId">@Model.OrderNo</a>*@
                @*<a class="btn-link linkPointer link-black" target="_blank" href="~/Report/GCCLSalesInvoiceReport?companyId=@Model.CompanyFK&orderMasterId=@Model.DemandId&reportName=GCCLPRFInvoiceReports">@Model.OrderNo</a>*@

            </span>
        }
        else
        {
            <span>
                Product Requisition
            </span>
        }


    </h1>
    <ol class="breadcrumb">
        <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i>Dashboard</a></li>
        <li class="active">  Product Requisition </li>
    </ol>
</section>
@using (Html.BeginForm("FeedDemandOrder", "Procurement", FormMethod.Post, new { id = "procurementSalesOrderSlaveFormId", @class = "formValidator" }))
{
    <section class="content">
        <div class="box">

            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.DemandId, new { id = "hidDemandId" })
            @Html.HiddenFor(model => model.ActionId, new { id = "ActionId" })
            @Html.HiddenFor(model => model.CompanyFK, new { id = "CompanyFK" })
            @Html.HiddenFor(model => model.DemandItemId, new { id = "hidOrderDetailId" })


            <div class="box-danger">

                <!-- /.box-header -->
                <div class="box-body">
                    @if (Model.DemandId > 0)
                    {
                        @Html.HiddenFor(model => model.CustomerPaymentMethodEnumFK, new { id = "ddlSupplierPaymentMethodEnumFK" })
                        @Html.HiddenFor(model => model.CustomerId, new { id = "ddlCustomerId" })
                        <div class="col-md-1"> </div>
                        <div class="col-md-10">
                            <table class="table">
                                <tr>
                                    <th style="width:18%">PRF No</th>
                                    <th style="width:2%">:</th>
                                    <td style="width:30%"> <label class="col-form-label">@Model.CID</label> </td>

                                    <th style="width:18%"> PRF Date</th>
                                    <th style="width:2%">:</th>
                                    <td style="width:30%">@Model.DemandDate</td>
                                </tr>
                                <tr>
                                    <th>AccCode</th>
                                    <th>:</th>
                                    <td>@Model.AccCode</td>
                                    <th>Created By</th>
                                    <th>:</th>
                                    <td>@Model.CreatedBy</td>
                                </tr>

                                <tr>
                                    <th>Amount</th>
                                    <th>:</th>
                                    <td>@Model.PayAmount</td>
                                    <th> Company Name </th>
                                    <th>:</th>
                                    <td>@Model.CompanyName</td>

                                </tr>

                                <tr>
                                    <th>Sales Status</th>
                                    <th>:</th>
                                    <td>@Model.SalesStatus</td>
                                    <th>Credit Status </th>
                                    <th>:</th>
                                    <td>@Model.CreditStatus</td>
                                </tr>

                                <tr>
                                    <th style="width:18%">
                                        Customer Name
                                    </th>
                                    <th style="width:2%">:</th>
                                    <td style="width:30%">
                                        <label class="col-form-label">@Model.CustomerName</label>


                                    </td>
                                    <th style="width:18%"> StockInfo Name </th>
                                    <th style="width:2%">:</th>
                                    <td style="width:30%">@Model.StockInfoName</td>
                                </tr>

                            </table>
                        </div>
                        <div class="col-md-1"> </div>
                    }


                    <div class="box-body">

                        @if (Model.DemandId == 0)
                        {

                            <div class="alert alert-primary shadow" role="alert">
                                <div class="row">
                                    <div class="col-md-6 mb-2">  <b>  Customer Name : <span id="cNameId"> </span> </b> </div>
                                    <div class="col-md-6 mb-2">   Code : <span id="cCodeId"> </span> </div>
                                    <div class="col-md-6 mb-2">   Mobile : <span id="cmobileId"> </span> </div>
                                    <div class="col-md-8 mb-2">  Address: <span id="cAddressId"> </span> </div>

                                </div>
                            </div>


                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group">


                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>PRF Date</label>
                                        <input name="DemandDate" asp-for="DemandDate" type="text" value="@DateTime.Today.ToString("yyyy-MM-dd")" required="required" class="datePicker form-control" id="txtDemandDate" placeholder="Date" autocomplete="off">
                                        @Html.ValidationMessageFor(model => model.DemandDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Customer</label>
                                        @Html.DropDownListFor(model => model.CustomerId, Model.CustomerList as SelectList, "==Select Customer==", new { id = "ddlCustomerId", @class = "form-control searchingDropdown", style = "width:100%" })
                                        @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Payment By</label>
                                        @Html.DropDownListFor(model => model.HeadGLId, Model.PaymentByList as SelectList, "==Select Payment By==", new { id = "ddlHeadGLId", @class = "form-control searchingDropdown", style = "width:100%" })
                                        @Html.ValidationMessageFor(model => model.HeadGLId, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.Label("Amount", htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.PayAmount, new { htmlAttributes = new { @id = "txtReturnNo", @class = "form-control", @autocomplete = "off" } })
                                        @Html.ValidationMessageFor(model => model.PayAmount, "", new { @class = "text-danger" })

                                    </div>
                                </div>


                            </div>



                            <div class="row">

                                <div class="col-md-4">
                                    <div class="form-group" style="padding:0px">
                                        <label for="message-text" class="col-form-label">Warehouse:</label>
                                        @Html.DropDownListFor(model => model.StockInfoId, Model.StockInfoList as SelectList, "==Warehouse==", new { id = "ddlStockInfoId", @class = "form-control searchingDropdown", style = "width:100%", required = "required" })
                                        @Html.ValidationMessageFor(model => model.StockInfoId, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Html.Label("Sales Status", htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.SalesStatus, new { htmlAttributes = new { @id = "txtSalesStatus", @class = "form-control", @autocomplete = "off", @required = "required" } })
                                        @Html.ValidationMessageFor(model => model.SalesStatus, "", new { @class = "text-danger" })

                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Html.Label("Credit Status", htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.CreditStatus, new { htmlAttributes = new { @id = "txtCreditStatus", @class = "form-control", @autocomplete = "off", @required = "required" } })
                                        @Html.ValidationMessageFor(model => model.CreditStatus, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-8">
                                    <div class="form-group">
                                        <label for="txtDescription" class="col-form-label">Remarks:</label>
                                        @Html.TextAreaFor(model => model.Remarks, new { id = "txtDescription", placeholder = "Description", @class = "form-control", rows = 1 })
                                        @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                        }




                        <div class="row">
                            <div class="col-md-3" style="padding:0px 2px 0px 8px;">
                                <div class="form-group" style="padding:0px">
                                    <label for="message-text" class="col-form-label">Product Item:</label>

                                    @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @autocomplete = "on", @class = "form-control", @name = "Product Name", @id = "txtProductName", @required = "Required" } })

                                    @Html.HiddenFor(model => model.ProductId, new { id = "ddlRProductFK" })
                                    @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                                </div>
                            </div>



                            <div class="col-md-2" style="padding:0px">
                                <div class="form-group">
                                    <label>Quantity</label>
                                    <div class="input-group">
                                        @Html.TextBoxFor(model => model.ItemQuantity, new { id = "txtPurchaseQuantity", @onkeyup = "TotalAmountSumation()", @class = "form-control", @style = "width:100%;border:1px black solid", placeholder = "Purchase Quantity", @required = "Required" })
                                        @Html.ValidationMessageFor(model => model.ItemQuantity, "", new { @class = "text-danger" })

                                        <div class="input-group-addon">
                                            <span class="txtUnitName"></span>
                                        </div>
                                        <span class="text-danger" id="spnCreditLimitExceed"></span>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-2" style="padding:0px">
                                <div class="form-group">
                                    <label>Product Price</label>

                                    @Html.TextBoxFor(model => model.ProductPrice, new { id = "txtProductPrice", @readonly = "readonly", @class = "form-control", @style = "width:100%;border:1px black solid;text-align:right;", placeholder = "Product Price", })
                                    @Html.ValidationMessageFor(model => model.ProductPrice, "", new { @class = "text-danger" })

                                </div>
                            </div>

                            <div class="col-md-1" style="padding:0px">
                                <div class="form-group">
                                    <label>Unit Price</label>

                                    @Html.TextBoxFor(model => model.UnitPrice, new { id = "txtUnitPrice", type = "number", @onkeyup = "TotalAmountSumation()", @class = "form-control", @style = "width:100%;border:1px black solid;text-align:right;", placeholder = "Unit Price", required = "Required" })
                                    @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })

                                </div>
                            </div>


                            <div class="col-md-1" style="padding:0px">
                                <div class="form-group">
                                    <label>Unit Dis.</label>

                                    @Html.TextBoxFor(model => model.ProductDiscountUnit, new { id = "ProductDiscountUnit", type = "number", @onkeyup = "TotalAmountWithDiscountSumation()", @class = "form-control", @style = "width:100%;border:1px black solid;text-align:right;", placeholder = "Discount", required = "Required" })
                                    @Html.ValidationMessageFor(model => model.ProductDiscountUnit, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="col-md-1" style="padding:0px">
                                <div class="form-group">
                                    <label>TTL Dis.</label>

                                    @Html.TextBoxFor(model => model.ProductDiscountTotal, new { id = "txtProductDiscountTotal", type = "number", @readonly = "readonly", @class = "form-control", @style = "width:100%;border:1px black solid;text-align:right;", placeholder = "Discount", required = "Required" })
                                    @Html.ValidationMessageFor(model => model.ProductDiscountTotal, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="col-md-2" style="padding:0px 0px 8px 0px;">
                                <div class="form-group">
                                    <label>Total Amount</label>
                                    @Html.TextBoxFor(model => model.TotalAmount, new { id = "txtTotalAmount", type = "number", @readonly = "readonly", @class = "form-control", @style = "width:100%;border:1px black solid;text-align:right;", placeholder = "Total Price", required = "Required" })
                                    @Html.ValidationMessageFor(model => model.TotalAmount, "", new { @class = "text-danger" })

                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="box-footer">
                        <div class="row">
                            <div class="col-md-3">
                                <table class="table" id="tblStockAvailable">
                                    <tr>
                                        <th>Available Stock: </th>
                                        <th id="stockAvailable"></th>
                                    </tr>
                                </table>
                            </div>

                            <div class="col-lg-4 col-md-4">

                                @if (!Model.IsSubmitted)
                                {
                                    <button type="submit" id="poCreateBtn" class="btn btn-primary btn-block">
                                        <i class='fa fa-plus'></i>
                                        @if (Model.DemandId > 0)
                                        {
                                            <span>Add Requisition Item</span>
                                        }
                                        else
                                        {
                                            <span>Create New Requisition</span>
                                        }
                                    </button>

                                }


                            </div>
                        </div>
                    </div>

                    <!--Body Will by Start Here-->
                    @{
                        if (Model.DemandId > 0)
                        {

                            @Html.HiddenFor(model => model.ID, new { id = "hidSlaveID" })
                            <div class="table-responsive col-md-12  text-nowrap">
                                <table id="KgErpDataTable" class="table table-striped table-hover">
                                    <thead style="background-color:#ddd;">
                                        <tr>
                                            <th style="padding:5px;text-align:center;">SL</th>
                                            <th style="padding:5px;text-align:left;">Item</th>

                                            <th style="padding:5px;text-align:center;">Quantity</th>
                                            <th style="padding:5px;text-align:center;">Product Price</th>
                                            <th style="padding:5px;text-align:center;">Unit Price</th>
                                            <th style="padding:5px;text-align:center;">Discount Per Unit</th>
                                            <th style="padding:5px;text-align:center;">TTL Discount</th>

                                            <th style="padding:5px;text-align:right;">Total Price</th>
                                            @if (!Model.IsSubmitted)
                                            {
                                                <th style="padding:5px;text-align:center;">Action</th>
                                            }
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.vmDemandItems)
                                        {
                                            TotalPrice += item.TotalAmount;
                                            TotalDiscount += item.ProductDiscountTotal;
                                            DiscountUnit += item.ProductDiscountUnit;
                                            <tr>
                                                <td style="padding:5px">@(++sl)</td>
                                                <td style="padding:5px;text-align:left;">@item.ProductSubCategories- @item.ProductName <span class="label label-warning"></span>  </td>
                                                @*<td style="padding:5px;text-align:left;">@item.PackQuantity</td>
                                                    <td style="padding:5px;text-align:left;">@item.Consumption</td>*@

                                                <td style="padding:5px;text-align:center;">@String.Format("{0:0.00}", item.ItemQuantity) @item.UnitName</td>

                                                <td style="padding:5px;text-align:center;">@String.Format("{0:0.00}", item.ProductPrice)</td>
                                                <td style="padding:5px;text-align:center;">@String.Format("{0:0.00}", item.UnitPrice)</td>
                                                <td style="padding:5px;text-align:center;">@String.Format("{0:0.00}", item.ProductDiscountUnit)</td>

                                                <td style="padding:5px;text-align:center;">@String.Format("{0:0.00}", item.ProductDiscountTotal)</td>

                                                <td style="padding:5px;text-align:right;">@String.Format("{0:0.00}", item.TotalAmount)</td>
                                                @{ if (!Model.IsSubmitted)
                                                    {
                                                        <td style="padding:5px;text-align:center;">
                                                            <a id="@item.ID" onclick=" makeEditble(@item.DemandItemId);" class="linkPointer" title="Edit"><i class="fa fa-edit" aria-hidden="true"></i></a>

                                                            <a id="@item.ID" onclick="makeDeletale(@item.DemandItemId)" class="linkPointer" data-toggle="modal" data-target="#deleteProcurementPurchaseOrderSlaveModal" title="Delete" data-placement="top"><i class="glyphicon glyphicon-trash" aria-hidden="true"></i></a>
                                                        </td>
                                                    }
                                                }
                                            </tr>
                                        }
                                    </tbody>

                                    <tfoot style="background-color: #eeeeeed4;">
                                        <tr>
                                            <th></th>
                                            <th colspan="6">GROSS AMOUNT (IN BDT)</th>


                                            <th style="padding:5px;text-align:right;">@String.Format("{0:0.00}", Model.GrossAmount) </th>
                                            @if (!Model.IsSubmitted)
                                            {
                                                <th></th>
                                            }
                                        </tr>
                                        <tr>
                                            <th></th>
                                            <th colspan="6">PRODUCT DISCOUNT</th>


                                            <th style="padding:5px;text-align:right;">@String.Format("{0:0.00}", Model.ProductDiscount) </th>
                                            @if (!Model.IsSubmitted)
                                            {
                                                <th></th>
                                            }
                                        </tr>
                                        @if (Model.IsSubmitted)
                                        {
                                            <tr>
                                                <th></th>
                                                <th colspan="6">GLOBAL DISCOUNT</th>


                                                <th style="padding:5px;text-align:right;">@String.Format("{0:0.00}", Model.DiscountAmount) </th>
                                                @if (!Model.IsSubmitted)
                                                {
                                                    <th></th>
                                                }
                                            </tr>

                                        }

                                        <tr>
                                            <th></th>
                                            <th colspan="6">NET AMOUNT (IN BDT)</th>
                                            @if (Model.IsSubmitted)
                                            {
                                                <th style="padding:5px;text-align:right;">@String.Format("{0:0.00}", Convert.ToDecimal(TotalPrice) - (TotalDiscount + Model.DiscountAmount))</th>
                                            }
                                            else
                                            {
                                                <th style="padding:5px;text-align:right;">@String.Format("{0:0.00}", Convert.ToDecimal(TotalPrice) - TotalDiscount) </th>
                                                if (!Model.IsSubmitted)
                                                {
                                                    <th></th>
                                                }
                                            }

                                        </tr>




                                        @if (!Model.IsSubmitted)
                                        {
                                            <tr>
                                                <th></th>
                                                <th></th>
                                                <th></th>
                                                <th></th>
                                                <th></th>
                                                <th>
                                                    Discount (%)
                                                </th>
                                                <th style="text-align: right;">
                                                    Discount Amount
                                                </th>

                                                <th style="text-align: right;">
                                                    Payable Amount
                                                </th>
                                                @if (!Model.IsSubmitted)
                                                {
                                                    <th></th>
                                                }
                                            </tr>
                                            <tr>
                                                <th></th>
                                                <th></th>
                                                <th></th>
                                                <th></th>
                                                <th>GLOBAL DISCOUNT</th>
                                                <td>
                                                    @Html.TextBoxFor(model => model.GlobalDiscount, new { id = "txtDiscountParcentage", @onkeyup = "fnDiscountParcentage()", @class = "form-control input-sm", @placeholder = "In %", @style = "border:1px black solid;font-size:larger;font-weight:bolder;" })
                                                </td>
                                                <td>
                                                    @Html.TextBoxFor(model => model.DiscountAmount, new { id = "txtTotalDiscount", @onkeyup = "fnTotalDiscountnction()", @class = "form-control input-sm", @placeholder = "Discount", @style = "border:1px black solid;font-size:larger;font-weight:bolder;text-align:right;" })
                                                </td>
                                                <td>
                                                    @Html.TextBoxFor(model => model.TotalAmountAfterDiscount, new { id = "txtPayableAmount", @readonly = "readonly", @class = "form-control input-sm", @placeholder = "Discount", @style = "border:1px black solid;font-size:larger;font-weight:bolder;text-align:right;" })
                                                </td>
                                                @if (!Model.IsSubmitted)
                                                {
                                            <th>
                                                <a onclick="discountupdate();" data-toggle="modal" data-target="#requpdate" class="linkPointer btn btn-primary btn-block" title="update">
                                                    <i class='fa fa-save'></i>
                                                    Save
                                                </a>

                                            </th>
                                                }
                                            </tr>
                                        }
                                    </tfoot>
                                </table>
                            </div>
                        }
                    }

                    <div class="box-footer">
                        @if (Model.DemandId > 0)
                        {
                            <div class="row">
                                <div class="col-md-6">
                                   
                                    <a class="linkPointer btn btn-warning d-block" target="_blank" href="~/Report/GCCLPRFInvoiceReport?companyId=@Model.CompanyFK&DemandId=@Model.DemandId&reportName=FeedPRFInvoiceReports&CustomerId=@Model.CustomerId&AsOnDate=@Model.CreatedDate.ToString("dd-MM-yyyy")"><i class="fa fa-print"></i> Sales Invoice</a>
                                </div>


                                <div class="col-md-6">

                                    @if (Model.IsSubmitted == true)
                                    {

                                    }
                                    else
                                    {
                                        <a id="@Model.DemandId" onclick="makeSubmitble(@Model.DemandId)" class="linkPointer btn btn-success" data-toggle="modal" style="width:100%" data-target="#submitProcurementPurchaseOrderModal" data-placement="top">

                                            <i class="fa fa-save"></i><i>&nbsp;Approval Pending</i>
                                        </a>
                                    }

                                </div>

                            </div>

                        }
                    </div>
                </div>
            </div>
        </div>
    </section>

}


@using (Html.BeginForm("DemandOrderUpdatediscount", "Procurement", FormMethod.Post, new { id = "reqFormId", @class = "formValidator" }))
{

    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="modal fade" id="requpdate" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b><span class="submitOrDraftText"></span>  Product Requisition  (@Model.DemandNo)</b></h5>
                </div>
                <div class="modal-body">
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.DemandId, new { id = "hidDemandId" })
                    @Html.HiddenFor(model => model.ActionId, new { id = "ActionId" })
                    @Html.HiddenFor(model => model.CompanyFK, new { id = "CompanyFK" })
                    @Html.HiddenFor(model => model.GlobalDiscount, new { id = "GlobalDiscountup" })
                    @Html.HiddenFor(model => model.DiscountAmount, new { id = "DiscountAmountup" })
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div style="text-align:center">
                        <h3>Are you sure to <span class="submitOrDraftText"></span> this  Product Requisition Discount?</h3>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="col-md-3">
                        <button type="button" class="btn btn-warning fa fa-close" data-dismiss="modal">&nbsp;NO</button>
                    </div>
                    <div class="col-md-9">
                        <button type="submit" id="btnsave" style="width:100%" class="btn btn-primary fa fa-remove">&nbsp;<span class="submitOrDraftText">Yes</span></button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}




@using (Html.BeginForm("DemandOrderUpdate", "Procurement", FormMethod.Post, new { id = "submitOrderMastersFromSlaveFormId", @class = "formValidator" }))
{

    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="modal fade" id="submitProcurementPurchaseOrderModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b><span class="submitOrDraftText"></span>  Product Requisition  (@Model.DemandNo)</b></h5>
                </div>
                <div class="modal-body">
                    @Html.HiddenFor(model => model.DemandId, new { id = "hidsubmitOrderMasterId" })
                    @Html.HiddenFor(model => model.CompanyFK, new { id = "hidsubmitCompanyFK" })

                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div style="text-align:center">
                        <h3>Are you sure to <span class="submitOrDraftText"></span> this  Product Requisition ?</h3>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="col-md-3">
                        <button type="button" class="btn btn-warning fa fa-close" data-dismiss="modal">&nbsp;NO</button>
                    </div>
                    <div class="col-md-9">
                        <button type="submit" id="btnsave" style="width:100%" class="btn btn-primary fa fa-remove">&nbsp;<span class="submitOrDraftText">Yes</span></button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


@using (Html.BeginForm("DeleteDemandItem", "Procurement", FormMethod.Post, new { id = "deleteProcurementPurchaseOrderSlaveFormId", @class = "formValidator" }))
{
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="modal fade" id="deleteProcurementPurchaseOrderSlaveModal" data-toggle="modal" data-backdrop="static" data-keyboard="false" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close pull-right" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                    <h5 class="modal-title"><b>Delete  Product Requisition  Item</b></h5>
                </div>
                <div class="modal-body">
                    @Html.HiddenFor(model => model.DemandId, new { id = "hidDeleteOrderMasterId" })
                    @Html.HiddenFor(model => model.DemandItemId, new { id = "hidDeleteOrderDetailId" })
                    @Html.HiddenFor(model => model.CompanyFK, new { id = "deleteCompanyFK" })

                    @Html.HiddenFor(model => model.ActionId, new { id = "deleteActionId" })

                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div style="text-align:center">
                        <h3>Are you sure to Delete this  Product Requisition  Item?</h3>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="col-md-3">
                        <button type="button" onclick="resetProcurementPurchaseRequisitionSlaveForm()" class="btn btn-warning fa fa-close" data-dismiss="modal">&nbsp;NO</button>
                    </div>
                    <div class="col-md-9">
                        <button type="submit" id="btnsave" style="width:100%" class="btn btn-primary fa fa-remove">&nbsp; Delete</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}



@section Scripts {


    <script type="text/javascript">

        function calculateAmount() {
            var packQuantity = $('#txtPackQuantity').val();
            var consumption = $("#txtConsumption").val();
            var quantityInKg = (Number(packQuantity) * Number(consumption)) / 1000;
            $('#txtPurchaseQuantity').val(Number((quantityInKg).toFixed(3)))
        }


        function makeDeletale(rowId) {
            $('#hidDeleteOrderDetailId').val(rowId);
            $('#deleteActionId').val(3);
                                                    }
        function resetProcurementPurchaseRequisitionSlaveForm() {
            $('#procurementSalesOrderSlaveFormId')[0].reset();
            $('#ActionId').val(1);
        }
        function fnDiscountParcentage() {
                 var discountParcentage = $("#txtDiscountParcentage").val();
                var totalIncludingVat = "@(Convert.ToDecimal(TotalPrice) - TotalDiscount)";
            
                $('#txtTotalDiscount').val((Number((totalIncludingVat / 100) * discountParcentage)).toFixed(2));
            $('#txtPayableAmount').val((Number(totalIncludingVat) - (Number((totalIncludingVat / 100) * discountParcentage)))).toFixed(2);
            }
            function fnTotalDiscountnction() {
                var totalDiscount = $("#txtTotalDiscount").val();
                var totalIncludingVat = "@(Convert.ToDecimal(TotalPrice) - TotalDiscount)";;
               
                $('#txtDiscountParcentage').val((Number((totalDiscount * 100) / totalIncludingVat)).toFixed(2));
                $('#txtPayableAmount').val((Number(totalIncludingVat) - Number(totalDiscount)).toFixed(2));
            }

        $(document).ready(function () {

            //
            $('.alert').hide();
            $('#tblStockAvailable').hide();
            $('#datePickerById').datepicker({
                format: "yyyy-mm-dd",
                todayHighlight: true,
                autoclose: true,
                clearBtn: true
            }).on('changeDate', function (ev) {
                if ($(this).parents('form') && $(this).attr('required')) {
                    $(this).parents('form').bootstrapValidator('revalidateField', $(this));
                }
            });
            if (Number("@Model.TotalAmountAfterDiscount") == 0) {
                $('#txtPayableAmount').val("@(Convert.ToDecimal(TotalPrice) - TotalDiscount)");
            }
            @*$('#txtTotalDiscount').val("@TotalDiscount");
            $('#txtDiscountParcentage').val("@(Convert.ToDecimal(TotalPrice) > 0 ?(TotalDiscount * 100) / Convert.ToDecimal(TotalPrice):0  )");*@

            //var valDis = $('#txtTotalDiscount').val();
            //var parVale = $('#txtDiscountParcentage').val();
            //if (Number(valDis) > 0) {
            //    $("#txtTotalDiscount").attr('disabled', 'disabled');

            //}
            //if (Number(parVale) > 0) {
            //    $("#txtDiscountParcentage").attr('disabled', 'disabled');

            //}

            $("#ddlFinalDestinationCountryFk").val(19).change();
              $("#txtProductName").autocomplete({
                source: function (request, response) {

                    $.ajax({
                       url:"@Url.Action("GCCLAutoCompleteRawPackingMaterialsGet", "Configuration")",
                        //data: "{ 'prefix': '" + request.term + "'}",
                        data: { companyId: "@Model.CompanyFK", prefix: request.term },
                        dataType: "json",
                        type: "get",
                        cache: true,
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            //alert(response.responseText);
                        },
                        failure: function (response) {
                            //alert(response.responseText);
                        }
                    });
                },

            select: function (e, i) {
   
                    $("#ddlRProductFK").val(i.item.val);

                    $.ajax({
                        type: "GET",
                        url: "@Url.Action("ProductStockByProduct", "Procurement")",
                        datatype: "Json",
                        data: { companyId: "@Model.CompanyFK", productId: i.item.val },
                        success: function (data) {
              
                            var items = "";
                            if (data) {
                                
                                $('#tblStockAvailable').show();
                                $('.txtUnitName').text(data.UnitName);

                                $('#stockAvailable').text(data.CurrentStock + ' ' + data.UnitName);

                                    $("#txtUnitPrice").val(data.TPPrice);
                                    $("#txtProductPrice").val(data.TPPrice);
                            }
                        }
                    });
                $('#txtPurchaseQuantity').focus();

                },
                minLength: 1,
                cache: true

            }).focus(function () {
                $(this).autocomplete("search");
            });

            $("#ddlHeadGLId").change(function () {
                $("#ddlHeadGLId-error").text("");
            })
            $("#ddlStockInfoId").change(function () {
                $("#ddlStockInfoId-error").text("");
            })
            $("#ddlCustomerId").change(function () {
               $("#ddlCustomerId-error").text("");
                var customerId = $("#ddlCustomerId").val();
                if (customerId == "") { customerId=0}

                $.ajax({
                type: "GET",
                url: "@Url.Action("CustomerRecevableAmountByCustomer", "Procurement")",
                datatype: "Json",
                    data: { companyId: "@Model.CompanyFK", customerId: customerId},
                    success: function (data) {
                    var items = "";
                        if (data) {
                            if (data.CustomerId == 0) {
                                $('.alert').hide();
                            } else {
                                $('.alert').show();
                                $("#cNameId").text(data.CommonCustomerName);
                                $("#cCodeId").text(data.CommonCustomerCode);
                                $("#cmobileId").val(data.ContactPerson);
                                $("#cAddressId").text(data.CustomerAddress);
                            }

                        }
                    }
                });
            })


        });
            function makeEditble(rowId) {

            $.ajax({

                  type: "POST",
                  url: "@Url.Action("SingleDemandItem", "Procurement")",
                  datatype: "Json",
                  data: { id: rowId },
                  success: function (data) {
                      $('#poCreateBtn').html("<i class='fa fa-edit'></i>&nbsp;Update");
                      $("#hidOrderMasterId").val(data.OrderMasterId);
                      $('#ActionId').val(2);
                      $("#CompanyFK").val(data.CompanyFK);
                      $("#txtProductName").val(data.ProductCategories + " " + data.ProductSubCategories + " " + data.ProductName);
                      $("#ddlRProductFK").val(data.ProductId);
                      $("#ProductDiscountUnit").val(data.ProductDiscountUnit);
                      $("#txtProductDiscountTotal").val(Number(data.ItemQuantity) * Number(data.ProductDiscountUnit));
                      $("#txtTotalAmount").val(Number(data.ItemQuantity) * Number(data.UnitPrice));
                      $("#txtPurchaseQuantity").val(data.ItemQuantity);
                      $('#txtUnitPrice').val(data.UnitPrice);
                      $("#txtProductPrice").val(data.ProductPrice);
                      $("#hidOrderDetailId").val(data.DemandItemId);
                      $('.txtUnitName').text(data.UnitName);
                      window.scrollTo({ top: 0, behavior: 'smooth' });
                  }
                 });
            }
        function discountupdate() {
           var dis= $("#txtDiscountParcentage").val();
            var tdis = $("#txtTotalDiscount").val();
            $("#GlobalDiscountup").val(dis);
            $("#DiscountAmountup").val(tdis);

            
           }

           
        function makeSubmitble(rowId) {
        
                $.ajax({
                        type: "POST",
                        url: "@Url.Action("GetSinglDemandMasters", "Procurement")",
                        datatype: "Json",
                    data: { id: rowId },
                    success: function (data) {

                            $('#submitOrDraftPOCIDText').text(data.DemandNo);

                            if (data.IsSubmitted == 0) {
                                $('.submitOrDraftText').text("Make Approval");
                            }
                            else {
                                $('.submitOrDraftText').text("Make Draft Approval");

                            }
                        }
                 });
                $('#hidsubmitProcurementPurchaseOrderId').val(rowId);
        }



        function TotalAmountSumation() {
            var purchaseQuantity = $("#txtPurchaseQuantity").val();
            var unitPrice = $("#txtUnitPrice").val();

            $("#txtTotalAmount").val(Number(purchaseQuantity) * Number(unitPrice));

            var hidCreditLimitAmount = $("#hidCreditLimit").val();
            var hidPayableAmountAmount = $("#hidPayableAmount").val();

            var balanceAmount = Number(hidCreditLimitAmount) - Number(hidPayableAmountAmount);
            var txtTotalValue = $("#txtTotalAmount").val();
            if (txtTotalValue > balanceAmount) {
                $(":submit").attr("disabled", true);
                $("#spnCreditLimitExceed").text("Your Credit Limit is exceed.")
            }
            else {
                $(":submit").removeAttr("disabled");
                $("#spnCreditLimitExceed").text("")
            }



        }

        function TotalAmountWithDiscountSumation() {
            var purchaseQuantity = $("#txtPurchaseQuantity").val();

            var discountUnit = $("#ProductDiscountUnit").val();


            $("#txtProductDiscountTotal").val(Number(purchaseQuantity) * Number(discountUnit));

            var hidCreditLimitAmount = $("#hidCreditLimit").val();
            var hidPayableAmountAmount = $("#hidPayableAmount").val();

            var balanceAmount = Number(hidCreditLimitAmount) - Number(hidPayableAmountAmount);
            var txtTotalValue = $("#txtTotalAmount").val();
            if (txtTotalValue > balanceAmount) {
                $(":submit").attr("disabled", true);
                $("#spnCreditLimitExceed").text("Your Credit Limit is exceed.")
            }
            else {
                $(":submit").removeAttr("disabled");
                $("#spnCreditLimitExceed").text("")
            }
        }







    </script>
}