@model KGERP.Service.ServiceModel.SendSMSViewModel
@using KGERP.Utility;
@{
    var message = TempData["successMessage"];
    ViewBag.Title = "Send SMS";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<section class="content-header">
    <h1>
        Send SMS
    </h1>
    <ol class="breadcrumb">
        <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i>Dashboard</a></li>
        <li><a href="~/Sms/Index?companyId=@Model.CompanyId">SMS List</a></li>
    </ol>
</section>
<div class="content">
    <div class="row">
        <div class="col-md-12">
            <div class="box">
                <div class="box-danger">
                    <div class="box-body">
                        @using (Html.BeginForm("SendSMS", "Sms", FormMethod.Post, new { id = "frm", @encType = "multipart/form-data" }))
                        {
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group clearfix">
                                        <div class="GroupBox" id="message">
                                        </div>
                                    </div>
                                    <div class="">
                                        <div class="row">
                                            <div class="form-group col-md-3">
                                                @Html.LabelFor(m => m.MessageDate)
                                                @Html.TextBoxFor(m => m.MessageDate, new { @type = "datetime-local", @class = "form-control" })

                                            </div>
                                            <div class="form-group col-md-3">
                                                @Html.LabelFor(m => m.Subject)
                                                @Html.TextBoxFor(m => m.Subject, new { @placeholder = "Enter SMS Subject", @class = "form-control" })
                                            </div>
                                            <div class="form-group col-md-3">
                                                @Html.LabelFor(model => model.SmsTypeId)
                                                @Html.DropDownListFor(model => model.SmsTypeId, new SelectList(Model.SmsTypeList, "Id", "Name"), new { @class = "form-control searchingDropdown" })
                                            </div>
                                        </div>

                                        <div class="form-group">

                                            @Html.HiddenFor(M => M.CompanyId)
                                            @Html.LabelFor(model => model.MessageOption) &nbsp; &nbsp;
                                            @Html.RadioButtonFor(model => model.MessageOption, "S", new { @checked = true, onclick = "fnDivHideOrShow();" })
                                            @Html.Label("specific employee")
                                            @Html.RadioButtonFor(model => model.MessageOption, "Z", new { onclick = "fnDivHideOrShow();" })
                                            @Html.Label("Company & Department Wise")
                                            @Html.RadioButtonFor(model => model.MessageOption, "A", new { onclick = "fnDivHideOrShow();" })
                                            @Html.Label("all employee")
                                            @Html.RadioButtonFor(model => model.MessageOption, "D", new { onclick = "fnDivHideOrShow();" })
                                            @Html.Label("Specific Mobile No")
                                            @Html.RadioButtonFor(model => model.MessageOption, "E", new { onclick = "fnDivHideOrShow();" })
                                            @Html.Label("External")

                                        </div>
                                        <div class="form-group" id="z">
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <div>
                                                        @Html.LabelFor(model => model.CompanyId)
                                                        @Html.DropDownListFor(model => model.SelectedCompanyId, new SelectList(Model.CompanyList, "Value", "Text"), "All", new { @class = "form-control searchingDropdown" })
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div>
                                                        @Html.LabelFor(model => model.DepartmentId)
                                                        @Html.DropDownListFor(model => model.DepartmentId, new SelectList(Model.DepartmentList, "Value", "Text"), "All", new { @class = "form-control searchingDropdown" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-group" id="d">
                                            @Html.LabelFor(model => model.PhoneNo)
                                            @Html.TextBoxFor(model => model.PhoneNo, new { @class = "form-control", @type = "tel", @placeholder = "Ex:01700000000" })
                                        </div>
                                        <div class="form-group " id="s">
                                            @Html.LabelFor(model => model.SelectedEmployee)
                                            @Html.DropDownListFor(model => model.SelectedEmployee, new SelectList(Model.AllEmployeeList, "Value", "Text"), new { @class = "form-control chosenMS", @multiple = "multiple" })
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Message)
                                            @Html.TextAreaFor(model => model.Message, new { @rows = 5, @class = "form-control", @onkeyup = "countChar(this)" })
                                            <div id="charNum"></div>
                                        </div>
                                        <div class="form-group" id="fileE">
                                            @*<input type="file" name="Attachment" id="Attachment" />*@
                                            <!-- File Upload -->
                                            <div class="row">
                                                <a target="_blank" class="btn btn-info" href="~/Content/Excel/SmsExample.xlsx"><i class="fa fa-download"></i> Example File</a>
                                            </div>
                                            <div class="row form-group">

                                                <label  for="Attachment">Select File:</label>
                                                <div >
                                                    <input class="input-file btn btn-secondary" id="Attachment" type="file" name="Attachment" accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet">
                                                </div>
                                            </div>
                                            <div class="row">
                                                <p style="color: red; font-weight: 500;font-size:14px;"><span style="color:red">Hints:Column with Header: Mobile No and Mobile no must be 11 digit FileName.xlsx/FileName.xls format only</span></p>
                                            </div>
                                        </div>
                                        <div class="clearfix"></div>
                                        <div class="form-group">
                                            <button id="btnSendMessage" class="btn btn-success"><i class="fa fa-send"></i> Send Message</button>
                                        </div>
                                    </div>
                                </div>
                            </div>}
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- The Modal -->
<div id="myModal" class="modal" data-backdrop="static">
    <div class="modal-dialog modal-sm">
        <!-- Modal content -->
        <div class="modal-content text-center" style="padding: 10px;">
            Message sending........
        </div>
    </div>


</div>
<style type="text/css">
    .modal {
        background-color: rgba(0,0,0,0.5);
    }

        .modal .modal-dialog {
            margin: 250px auto 30px;
        }
    /*.modal-center {
                            text-align: center;
                            padding: 0 !important;
                        }
                            .modal-center:before {
                                content: '';
                                display: inline-block;
                                height: 100%;
                                vertical-align: middle;
                                margin-right: -4px;
                            }
                            .modal-center .modal-dialog {
                                display: inline-block;
                                text-align: left;
                                vertical-align: middle;
                            }*/
</style>
@section Scripts {
    <script type="text/javascript">
    function fnDivHideOrShow() {
        var rdo = $('#MessageOption:checked').val();

        if (rdo == 'S') {
            $('#s').show();
            $('#z').hide();
            $('#d').hide();
            $('#fileE').hide();
        }
        else if (rdo == 'A') {
            $('#z').hide();
            $('#s').hide();
            $('#d').hide();
            $('#fileE').hide();
        }
        else if (rdo == 'Z') {
            $('#z').show();
            $('#s').hide();
            $('#d').hide();
            $('#fileE').hide();
        }
        else if (rdo == "D") {
            $('#z').hide();
            $('#s').hide();
            $('#d').show();
            $('#fileE').hide();
        }
        else {
            $('#z').hide();
            $('#s').hide();
            $('#d').hide();
            $('#fileE').show();
        }
    }

    function countChar(val) {
        var len = val.value.length;
        if (len >= 450) {
            val.value = val.value.substring(0, 450);
        } else {
            $('#charNum').text("Remaining characters " + (450 - len));
        }
    };
    $(document).ready(function () {
        fnDivHideOrShow();
        $('.chosenMS').chosen({
            //allow_single_deselect: true
            placeholder_text_multiple: "Select Employee",
            no_results_text: "Oops, nothing found!"
        });
        //Dropdownlist Selectedchange event

        $('#btnSendMessage').on('click', function (e) {
            e.preventDefault();
            if (window.confirm("Are you sure?")) {
$('#btnSendMessage').prop('disabled', true);
            $('#myModal').show();
            var url = '@Url.Action("SendSMS", "Sms")';
            var formdd = $('#frm')[0];
            var fd = new FormData(formdd);
            fd.append("Attachment", document.getElementById('Attachment').files[0]);
            $.ajax({
                url: url,
                enctype: 'multipart/form-data',
                data: fd,
                type: 'POST',
                processData: false,
                contentType: false,
                success: function (result) {
                    //debugger;
                    $('#btnSendMessage').prop('disabled', false);
                    $('#myModal').hide();
                    if (result.Success) {
                        $("#message").html('<b style=\"color:Green\">' + result.Message + '</b>');
                    }
                    else {
                        $("#message").html('<b style=\"color:red\">' + result.Message + '</b>');
                    }
                }
            });
                return false;
            }

            
        });
    });
    </script>
}
