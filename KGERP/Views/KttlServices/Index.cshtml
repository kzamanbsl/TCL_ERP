@using PagedList.Mvc;
@model PagedList.IPagedList<KGERP.Service.ServiceModel.KttlServiceModel>
@using PagedList;
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    @using (Html.BeginForm("Index", "KttlServices", FormMethod.Get))
    {
        <div class="col-md-3">
            <h4><b>Service List</b></h4>
        </div>
        <div class="col-md-3">
            <div class="col-md-10">@Html.TextBox("searchText", null, new { @autocomplete = "off", @class = "form-control pull-right", @placeholder = "Search..." })</div>
            <div class="col-md-2">
                <button type="submit" class="btn btn-success">Search&nbsp;<i class="fa fa-search"></i></button>
            </div>
        </div>

        @*<div class="col-md-3">
                <a href="@Url.Action("ExportKGREClientToExcel", new { searchText = Request.QueryString["searchText"]  })" title="New Client" class="btn btn-primary pull-right">
                    <span class="glyphicon glyphicon-download"></span> Export Client
                </a>
            </div>*@
        <div class="col-md-3">
            <a href="@Url.Action("CreateOrEdit", new {clientId = 0, id = 0,searchText="" })" title="Add Service" class="btn btn-primary pull-right">
                <span class="glyphicon glyphicon-plus-sign"></span> Add Service
            </a>
        </div>
    }
</div>
<hr style="border-color:red; padding:0px;margin-top: 10px;margin-bottom: 20px; border-width: 2px;" />
<div style="width: 100%; height: 100%; overflow-x: visible; overflow-y: scroll;">
    <style>
        table td th {
            border: solid 1px #fab;
            width: 100px;
            word-wrap: inherit;
        }
    </style>

    <table class="table">
        <tr style="background-color:#009270;color:#FFFFFF">
            <th>
                SL.
            </th>
            <th nowrap>
                @Html.DisplayNameFor(model => model.First().ClientId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().ClientName)
            </th>
            <th nowrap>
                @Html.DisplayNameFor(model => model.First().ServiceType)
            </th>
            <th nowrap>
                @Html.DisplayNameFor(model => model.First().TicketNo)
            </th>
            <th nowrap>
                @Html.DisplayNameFor(model => model.First().DepartureDate)
            </th>
            <th nowrap>
                @Html.DisplayNameFor(model => model.First().ReturnDate)
            </th>
            <th nowrap>
                @Html.DisplayNameFor(model => model.First().DepartureFrom)
            </th>
            <th nowrap>
                @Html.DisplayNameFor(model => model.First().DepartureTo)
            </th>
            <th>Action</th>
        </tr>

        @foreach (var item in Model.Select((x, i) => new { Data = x, Index = i }))
        {
            <tr>
                <td>
                    @((item.Index + 1) + (Model.PageNumber - 1) * Model.PageSize)
                </td>
                <td>
                    @if (@item.Data.ClientId != null)
                    {
                        @Html.DisplayFor(modelItem => item.Data.ClientId)
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Data.ClientName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Data.ServiceType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Data.TicketNo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Data.DepartureDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Data.ReturnDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Data.DepartureFrom)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Data.DepartureTo)
                </td>
                <td>
                    <a href="@Url.Action("Details", new { id = item.Data.OID })" title="Details Client" class="btn btn-success btn-xs">
                        Details
                    </a>
                </td>
            </tr>
        }

    </table>
    @if (Model.PageCount > 1)
    {
        <span class="btn btn-success">
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        </span>
        <span class="checkbox">
            @Html.PagedListPager(Model, Page_No =>
                Url.Action("Index", "KttlServices",
                new { Page_No, Sorting_Order = Request.QueryString["Search"],
                SearchText = Request.QueryString["searchText"] }))
        </span>
    }
</div>